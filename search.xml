<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>threejs模型分解的原理以及实现</title>
      <link href="/posts/33271a6e/"/>
      <url>/posts/33271a6e/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>本案例会介绍如何使用 <strong>threejs</strong> 来实现模型的分解和还原，并介绍实现原理。最终效果如下：<br><img src="https://bu.dusays.com/2023/12/18/657fa782cc4ca.gif" alt="效果图" width="100%" /></p><h1 id="初始化场景-天空盒-、相机、控制器、灯光、效果合成器、渲染器"><a href="#初始化场景-天空盒-、相机、控制器、灯光、效果合成器、渲染器" class="headerlink" title="初始化场景(天空盒)、相机、控制器、灯光、效果合成器、渲染器"></a>初始化场景(天空盒)、相机、控制器、灯光、效果合成器、渲染器</h1><h2 id="天空盒"><a href="#天空盒" class="headerlink" title="天空盒"></a>天空盒</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 初始化场景</span><br><span class="line">const initScene = (): void =&gt; &#123;</span><br><span class="line">  scene = new THREE.Scene();</span><br><span class="line">  // 天空图图片集合，指定顺序pos-x, neg-x, pos-y, neg-y, pos-z, neg-z</span><br><span class="line">  const skyBg = [</span><br><span class="line">    getAssetsFile(&quot;sky/px.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nx.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/py.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/ny.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/pz.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nz.jpg&quot;),</span><br><span class="line">  ];</span><br><span class="line">  const cubeLoader: THREE.CubeTextureLoader = new THREE.CubeTextureLoader();</span><br><span class="line">  skyEnvMap = cubeLoader.load(skyBg);</span><br><span class="line">  // 设置场景背景</span><br><span class="line">  scene.background = skyEnvMap;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const initCamera = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  camera = new THREE.PerspectiveCamera(75, width / height, 1, 1000);</span><br><span class="line">  camera.position.set(0, 0, 20);</span><br><span class="line">  scene.add(camera);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">const initControls = (): void =&gt; &#123;</span><br><span class="line">  controls = new OrbitControls(camera, renderer.domElement);</span><br><span class="line">  // 使动画循环使用时阻尼或自转 意思是否有惯性</span><br><span class="line">  controls.enableDamping = true;</span><br><span class="line">  //是否可以缩放</span><br><span class="line">  controls.enableZoom = true;</span><br><span class="line">  //是否自动旋转</span><br><span class="line">  controls.autoRotate = false;</span><br><span class="line">  //是否开启右键拖拽</span><br><span class="line">  controls.enablePan = true;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="灯光"><a href="#灯光" class="headerlink" title="灯光"></a>灯光</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 初始化灯光</span><br><span class="line">const initLight = (): void =&gt; &#123;</span><br><span class="line">  // 环境光</span><br><span class="line">  const ambientLight: THREE.AmbientLight = new THREE.AmbientLight(</span><br><span class="line">    new THREE.Color(&quot;rgb(255, 255, 255)&quot;)</span><br><span class="line">  );</span><br><span class="line">  scene.add(ambientLight);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="效果合成器"><a href="#效果合成器" class="headerlink" title="效果合成器"></a>效果合成器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const initComposer = () =&gt; &#123;</span><br><span class="line">  outlinePass = new OutlinePass(</span><br><span class="line">    new THREE.Vector2(canvas.value.clientWidth, canvas.value.clientHeight),</span><br><span class="line">    scene,</span><br><span class="line">    camera</span><br><span class="line">  );</span><br><span class="line">  outlinePass.visibleEdgeColor.set(0xff0000); // 设置轮廓线颜色为红色</span><br><span class="line">  outlinePass.edgeStrength = 10; // 设置轮廓线强度</span><br><span class="line"></span><br><span class="line">  // 添加 OutlinePass 到渲染器的通道中</span><br><span class="line">  composer = new EffectComposer(renderer);</span><br><span class="line">  composer.addPass(new RenderPass(scene, camera));</span><br><span class="line">  composer.addPass(outlinePass);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="渲染器"><a href="#渲染器" class="headerlink" title="渲染器"></a>渲染器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const initRenderer = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  renderer = new THREE.WebGLRenderer();</span><br><span class="line">  renderer.setSize(width, height);</span><br><span class="line">  canvas.value.appendChild(renderer.domElement);</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="模型分解原理以及实现"><a href="#模型分解原理以及实现" class="headerlink" title="模型分解原理以及实现"></a>模型分解原理以及实现</h1><p>分解模型的原理，我个人实现方式是遍历模型中 <strong>mesh</strong> 并且记录一个 <strong>原位置</strong> 和 <strong>变化位置</strong>，最后通过 <strong>gsap</strong> 动画库进行 <strong>mesh.position</strong> 的改变</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">const createModal = (path: string): void =&gt; &#123;</span><br><span class="line">  gltfLoader.load(</span><br><span class="line">    path,</span><br><span class="line">    (gltf) =&gt; &#123;</span><br><span class="line">      // 遍历模型中的所有对象</span><br><span class="line">      gltf.scene.traverse((obj: THREE.Object3D) =&gt; &#123;</span><br><span class="line">        const mesh = obj as THREE.Object3D &amp; &#123;</span><br><span class="line">          isMesh: boolean;</span><br><span class="line">          material: THREE.Material;</span><br><span class="line">          fromPosition: THREE.Vector3;</span><br><span class="line">          toPosition: THREE.Vector3;</span><br><span class="line">        &#125;;</span><br><span class="line">        // 记录原位置、移动位置</span><br><span class="line">        mesh.fromPosition = mesh.position.clone();</span><br><span class="line">        mesh.toPosition = mesh.position.clone().multiplyScalar(3);</span><br><span class="line">      &#125;);</span><br><span class="line">      // 储存模型数据</span><br><span class="line">      modelData = gltf.scene as THREE.Group &amp; &#123; decomposition: boolean &#125;;</span><br><span class="line">      // 模型分解标识</span><br><span class="line">      modelData.decomposition = false;</span><br><span class="line">      // 模型缓存，用于切换模型时不用重新加载模型，算是一种性能优化方式</span><br><span class="line">      modelPool.push(modelData);</span><br><span class="line">      scene.add(modelData);</span><br><span class="line">    &#125;,</span><br><span class="line">    (xhr) =&gt; &#123;</span><br><span class="line">      // 获取模型加载进度</span><br><span class="line">      const percent = Math.min((xhr.loaded / xhr.total) * 100, 100);;</span><br><span class="line">      console.log(`模型加载进度：$&#123;percent&#125;%`)</span><br><span class="line">      loadingText.value = `模型加载进度：$&#123;percent.toFixed(2)&#125;%`</span><br><span class="line"></span><br><span class="line">      if(percent === 100) &#123;</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">          loading.value = false</span><br><span class="line">        &#125;, 800)</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        loading.value = true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>监听双击事件，通过模型中定义的分解标识判断当前该执行模型分解才做还是还原操作，并且使用 <strong>gsap</strong> 动画库改变模型中 <strong>mesh</strong> 的位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">canvas.value.addEventListener(&quot;dblclick&quot;, () =&gt; &#123;</span><br><span class="line">    if (!modelData?.decomposition) &#123;</span><br><span class="line">        modelData!.decomposition = true;</span><br><span class="line">        modelData?.traverse((obj: THREE.Object3D) =&gt; &#123;</span><br><span class="line">            const mesh = obj as THREE.Object3D &amp; &#123;</span><br><span class="line">                isMesh: boolean;</span><br><span class="line">                material: THREE.Material;</span><br><span class="line">                fromPosition: THREE.Vector3;</span><br><span class="line">                toPosition: THREE.Vector3;</span><br><span class="line">            &#125;;</span><br><span class="line">            gsap.to(mesh.position, &#123;</span><br><span class="line">                x: mesh.toPosition.x,</span><br><span class="line">                y: mesh.toPosition.y,</span><br><span class="line">                z: mesh.toPosition.z,</span><br><span class="line">                ease: &quot;Power2.inOut&quot;,</span><br><span class="line">                duration: 5,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        modelData!.decomposition = false;</span><br><span class="line">        modelData?.traverse((obj: THREE.Object3D) =&gt; &#123;</span><br><span class="line">            const mesh = obj as THREE.Object3D &amp; &#123;</span><br><span class="line">                isMesh: boolean;</span><br><span class="line">                material: THREE.Material;</span><br><span class="line">                fromPosition: THREE.Vector3;</span><br><span class="line">                toPosition: THREE.Vector3;</span><br><span class="line">            &#125;;</span><br><span class="line">            gsap.to(mesh.position, &#123;</span><br><span class="line">                x: mesh.fromPosition.x,</span><br><span class="line">                y: mesh.fromPosition.y,</span><br><span class="line">                z: mesh.fromPosition.z,</span><br><span class="line">                ease: &quot;Power2.inOut&quot;,</span><br><span class="line">                duration: 5,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="模型切换实现"><a href="#模型切换实现" class="headerlink" title="模型切换实现"></a>模型切换实现</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">const switchModel = (key: string) =&gt; &#123;</span><br><span class="line">  // 查找模型路径</span><br><span class="line">  const modelPath = modelPathArr[key as keyof typeof modelPathArr];</span><br><span class="line"></span><br><span class="line">  // 隐藏当前模型</span><br><span class="line">  if (modelData) &#123;</span><br><span class="line">    modelData.visible = false;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 查找可重用的模型</span><br><span class="line">  let newModel = findReusableModel() as</span><br><span class="line">    | (THREE.Group &amp; &#123; decomposition: boolean &#125;)</span><br><span class="line">    | null;</span><br><span class="line">  if (newModel) &#123;</span><br><span class="line">    // 重用可用的模型</span><br><span class="line">    newModel.visible = true;</span><br><span class="line">    modelData = newModel;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 查找不到就去加载新模型</span><br><span class="line">    createModal(modelPath);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const findReusableModel = () =&gt; &#123;</span><br><span class="line">  for (let i = 0; i &lt; modelPool.length; i++) &#123;</span><br><span class="line">    const model = modelPool[i];</span><br><span class="line">    if (!model.visible &amp;&amp; model !== modelData) &#123;</span><br><span class="line">      return model;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return null;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="选中高亮"><a href="#选中高亮" class="headerlink" title="选中高亮"></a>选中高亮</h1><p>选中高亮这边使用到了效果合成器来实现物体边界高亮的效果，在上面初始化时我们已经初始化了效果合成器和物体高亮的属性<br>对鼠标移动进行监听并使用射线拾取来获取选中物体，然后将选中物体添加到效果合成器的 <strong>selectedObjects</strong> 属性中，这样就能实现物体边界高亮的效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">const selectMesh = (event: MouseEvent) =&gt; &#123;</span><br><span class="line">  // 创建鼠标向量</span><br><span class="line">  const mouse = new THREE.Vector2();</span><br><span class="line">  // 计算鼠标点击位置的归一化设备坐标（NDC）</span><br><span class="line">  // NDC 坐标系的范围是 [-1, 1]，左下角为 (-1, -1)，右上角为 (1, 1)</span><br><span class="line">  if (!canvas.value) return;</span><br><span class="line">  mouse.x = (event.clientX / canvas.value.clientWidth) * 2 - 1;</span><br><span class="line">  mouse.y = -(event.clientY / canvas.value.clientHeight) * 2 + 1;</span><br><span class="line"></span><br><span class="line">  // 更新射线的起点和方向</span><br><span class="line">  raycaster.setFromCamera(mouse, camera);</span><br><span class="line"></span><br><span class="line">  // 执行射线与物体的相交测试</span><br><span class="line">  const intersects = raycaster.intersectObjects(scene.children);</span><br><span class="line"></span><br><span class="line">  // 检查是否有相交的物体</span><br><span class="line">  if (intersects.length &gt; 0) &#123;</span><br><span class="line">    const selectedObject = intersects[0].object as THREE.Mesh;</span><br><span class="line">    outlinePass.selectedObjects = [selectedObject];</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    outlinePass.selectedObjects = [];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">window.addEventListener(&quot;mousemove&quot;, selectMesh, false);</span><br></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;switchModel(&#x27;chassis&#x27;)&quot;&gt;模型一&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;switchModel(&#x27;car&#x27;)&quot;&gt;模型二&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div id=&quot;canvas&quot; ref=&quot;canvas&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;mask&quot; v-if=&quot;loading&quot;&gt;&#123;&#123; loadingText &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">import * as THREE from &quot;three&quot;;</span><br><span class="line">import &#123; OrbitControls &#125; from &quot;three/examples/jsm/controls/OrbitControls&quot;;</span><br><span class="line">import &#123; GLTFLoader &#125; from &quot;three/examples/jsm/loaders/GLTFLoader&quot;;</span><br><span class="line">import &#123; EffectComposer &#125; from &quot;three/examples/jsm/postprocessing/EffectComposer&quot;;</span><br><span class="line">import &#123; RenderPass &#125; from &quot;three/examples/jsm/postprocessing/RenderPass&quot;;</span><br><span class="line">import &#123; OutlinePass &#125; from &quot;three/examples/jsm/postprocessing/OutlinePass&quot;;</span><br><span class="line">import Stats from &quot;stats.js&quot;;</span><br><span class="line">import gsap from &quot;gsap&quot;;</span><br><span class="line">import &#123; ref, nextTick &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; getAssetsFile &#125; from &quot;../utils&quot;;</span><br><span class="line"></span><br><span class="line">const canvas = ref&lt;any&gt;(null);</span><br><span class="line">let scene: THREE.Scene = new THREE.Scene();</span><br><span class="line">let camera: THREE.PerspectiveCamera;</span><br><span class="line">let renderer: THREE.WebGLRenderer;</span><br><span class="line">let controls: any;</span><br><span class="line">let stats: any;</span><br><span class="line">let skyEnvMap: THREE.CubeTexture;</span><br><span class="line">let modelData: (THREE.Group &amp; &#123; decomposition: boolean &#125;) | null = null;</span><br><span class="line">const gltfLoader: GLTFLoader = new GLTFLoader();</span><br><span class="line">const raycaster = new THREE.Raycaster();</span><br><span class="line">let composer: EffectComposer; // 效果合成器</span><br><span class="line">let outlinePass: OutlinePass;</span><br><span class="line"></span><br><span class="line">const modelPathArr = &#123;</span><br><span class="line">  chassis: getAssetsFile(&quot;chassis/CUSTOM GAMING PC.glb&quot;),</span><br><span class="line">  car: getAssetsFile(&quot;car/car.glb&quot;),</span><br><span class="line">&#125;;</span><br><span class="line">const modelPool: THREE.Group[] = [];</span><br><span class="line"></span><br><span class="line">const loading = ref(false);</span><br><span class="line">const loadingText = ref();</span><br><span class="line"></span><br><span class="line">nextTick(() =&gt; &#123;</span><br><span class="line">  initScene();</span><br><span class="line">  initCamera(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  initRenderer(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  initControls();</span><br><span class="line">  render();</span><br><span class="line">  initStats();</span><br><span class="line">  initLight();</span><br><span class="line">  initComposer();</span><br><span class="line">  switchModel(&quot;chassis&quot;);</span><br><span class="line"></span><br><span class="line">  canvas.value.addEventListener(&quot;dblclick&quot;, () =&gt; &#123;</span><br><span class="line">    if (!modelData?.decomposition) &#123;</span><br><span class="line">      modelData!.decomposition = true;</span><br><span class="line">      modelData?.traverse((obj: THREE.Object3D) =&gt; &#123;</span><br><span class="line">        const mesh = obj as THREE.Object3D &amp; &#123;</span><br><span class="line">          isMesh: boolean;</span><br><span class="line">          material: THREE.Material;</span><br><span class="line">          fromPosition: THREE.Vector3;</span><br><span class="line">          toPosition: THREE.Vector3;</span><br><span class="line">        &#125;;</span><br><span class="line">        gsap.to(mesh.position, &#123;</span><br><span class="line">          x: mesh.toPosition.x,</span><br><span class="line">          y: mesh.toPosition.y,</span><br><span class="line">          z: mesh.toPosition.z,</span><br><span class="line">          ease: &quot;Power2.inOut&quot;,</span><br><span class="line">          duration: 5,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      modelData!.decomposition = false;</span><br><span class="line">      modelData?.traverse((obj: THREE.Object3D) =&gt; &#123;</span><br><span class="line">        const mesh = obj as THREE.Object3D &amp; &#123;</span><br><span class="line">          isMesh: boolean;</span><br><span class="line">          material: THREE.Material;</span><br><span class="line">          fromPosition: THREE.Vector3;</span><br><span class="line">          toPosition: THREE.Vector3;</span><br><span class="line">        &#125;;</span><br><span class="line">        gsap.to(mesh.position, &#123;</span><br><span class="line">          x: mesh.fromPosition.x,</span><br><span class="line">          y: mesh.fromPosition.y,</span><br><span class="line">          z: mesh.fromPosition.z,</span><br><span class="line">          ease: &quot;Power2.inOut&quot;,</span><br><span class="line">          duration: 5,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化场景</span><br><span class="line">const initScene = (): void =&gt; &#123;</span><br><span class="line">  scene = new THREE.Scene();</span><br><span class="line">  // 天空图图片集合，指定顺序pos-x, neg-x, pos-y, neg-y, pos-z, neg-z</span><br><span class="line">  const skyBg = [</span><br><span class="line">    getAssetsFile(&quot;sky/px.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nx.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/py.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/ny.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/pz.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nz.jpg&quot;),</span><br><span class="line">  ];</span><br><span class="line">  const cubeLoader: THREE.CubeTextureLoader = new THREE.CubeTextureLoader();</span><br><span class="line">  skyEnvMap = cubeLoader.load(skyBg);</span><br><span class="line">  // 设置场景背景</span><br><span class="line">  scene.background = skyEnvMap;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initCamera = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  camera = new THREE.PerspectiveCamera(75, width / height, 1, 1000);</span><br><span class="line">  camera.position.set(0, 0, 20);</span><br><span class="line">  scene.add(camera);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initRenderer = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  renderer = new THREE.WebGLRenderer();</span><br><span class="line">  renderer.setSize(width, height);</span><br><span class="line">  canvas.value.appendChild(renderer.domElement);</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initStats = (): void =&gt; &#123;</span><br><span class="line">  stats = new Stats();</span><br><span class="line">  canvas.value.appendChild(stats.dom);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initControls = (): void =&gt; &#123;</span><br><span class="line">  controls = new OrbitControls(camera, renderer.domElement);</span><br><span class="line">  // 使动画循环使用时阻尼或自转 意思是否有惯性</span><br><span class="line">  controls.enableDamping = true;</span><br><span class="line">  //是否可以缩放</span><br><span class="line">  controls.enableZoom = true;</span><br><span class="line">  //是否自动旋转</span><br><span class="line">  controls.autoRotate = false;</span><br><span class="line">  //是否开启右键拖拽</span><br><span class="line">  controls.enablePan = true;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const render = (): void =&gt; &#123;</span><br><span class="line">  controls.update();</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line">  if (stats) &#123;</span><br><span class="line">    stats.update();</span><br><span class="line">  &#125;</span><br><span class="line">  if (composer) &#123;</span><br><span class="line">    composer.render();</span><br><span class="line">  &#125;</span><br><span class="line">  requestAnimationFrame(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 初始化灯光</span><br><span class="line">const initLight = (): void =&gt; &#123;</span><br><span class="line">  // 环境光</span><br><span class="line">  const ambientLight: THREE.AmbientLight = new THREE.AmbientLight(</span><br><span class="line">    new THREE.Color(&quot;rgb(255, 255, 255)&quot;)</span><br><span class="line">  );</span><br><span class="line">  scene.add(ambientLight);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const switchModel = (key: string) =&gt; &#123;</span><br><span class="line">  // 查找模型路径</span><br><span class="line">  const modelPath = modelPathArr[key as keyof typeof modelPathArr];</span><br><span class="line"></span><br><span class="line">  // 隐藏当前模型</span><br><span class="line">  if (modelData) &#123;</span><br><span class="line">    modelData.visible = false;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 查找可重用的模型</span><br><span class="line">  let newModel = findReusableModel() as</span><br><span class="line">    | (THREE.Group &amp; &#123; decomposition: boolean &#125;)</span><br><span class="line">    | null;</span><br><span class="line">  if (newModel) &#123;</span><br><span class="line">    // 重用可用的模型</span><br><span class="line">    newModel.visible = true;</span><br><span class="line">    modelData = newModel;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 查找不到就去加载新模型</span><br><span class="line">    createModal(modelPath);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const findReusableModel = () =&gt; &#123;</span><br><span class="line">  for (let i = 0; i &lt; modelPool.length; i++) &#123;</span><br><span class="line">    const model = modelPool[i];</span><br><span class="line">    if (!model.visible &amp;&amp; model !== modelData) &#123;</span><br><span class="line">      return model;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return null;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const createModal = (path: string): void =&gt; &#123;</span><br><span class="line">  gltfLoader.load(</span><br><span class="line">    path,</span><br><span class="line">    (gltf) =&gt; &#123;</span><br><span class="line">      // 遍历模型中的所有对象</span><br><span class="line">      gltf.scene.traverse((obj: THREE.Object3D) =&gt; &#123;</span><br><span class="line">        const mesh = obj as THREE.Object3D &amp; &#123;</span><br><span class="line">          isMesh: boolean;</span><br><span class="line">          material: THREE.Material;</span><br><span class="line">          fromPosition: THREE.Vector3;</span><br><span class="line">          toPosition: THREE.Vector3;</span><br><span class="line">        &#125;;</span><br><span class="line">        // 记录原位置、移动位置</span><br><span class="line">        mesh.fromPosition = mesh.position.clone();</span><br><span class="line">        mesh.toPosition = mesh.position.clone().multiplyScalar(3);</span><br><span class="line">      &#125;);</span><br><span class="line">      // 储存模型数据</span><br><span class="line">      modelData = gltf.scene as THREE.Group &amp; &#123; decomposition: boolean &#125;;</span><br><span class="line">      // 模型分解标识</span><br><span class="line">      modelData.decomposition = false;</span><br><span class="line">      // 模型缓存，用于切换模型时不用重新加载模型，算是一种性能优化方式</span><br><span class="line">      modelPool.push(modelData);</span><br><span class="line">      scene.add(modelData);</span><br><span class="line">    &#125;,</span><br><span class="line">    (xhr) =&gt; &#123;</span><br><span class="line">      // 获取模型加载进度</span><br><span class="line">      const percent = Math.min((xhr.loaded / xhr.total) * 100, 100);</span><br><span class="line">      console.log(`模型加载进度：$&#123;percent&#125;%`);</span><br><span class="line">      loadingText.value = `模型加载进度：$&#123;percent.toFixed(2)&#125;%`;</span><br><span class="line"></span><br><span class="line">      if (percent === 100) &#123;</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">          loading.value = false;</span><br><span class="line">        &#125;, 800);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        loading.value = true;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const selectMesh = (event: MouseEvent) =&gt; &#123;</span><br><span class="line">  // 创建鼠标向量</span><br><span class="line">  const mouse = new THREE.Vector2();</span><br><span class="line">  // 计算鼠标点击位置的归一化设备坐标（NDC）</span><br><span class="line">  // NDC 坐标系的范围是 [-1, 1]，左下角为 (-1, -1)，右上角为 (1, 1)</span><br><span class="line">  if (!canvas.value) return;</span><br><span class="line">  mouse.x = (event.clientX / canvas.value.clientWidth) * 2 - 1;</span><br><span class="line">  mouse.y = -(event.clientY / canvas.value.clientHeight) * 2 + 1;</span><br><span class="line"></span><br><span class="line">  // 更新射线的起点和方向</span><br><span class="line">  raycaster.setFromCamera(mouse, camera);</span><br><span class="line"></span><br><span class="line">  // 执行射线与物体的相交测试</span><br><span class="line">  const intersects = raycaster.intersectObjects(scene.children);</span><br><span class="line"></span><br><span class="line">  // 检查是否有相交的物体</span><br><span class="line">  if (intersects.length &gt; 0) &#123;</span><br><span class="line">    const selectedObject = intersects[0].object as THREE.Mesh;</span><br><span class="line">    outlinePass.selectedObjects = [selectedObject];</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    outlinePass.selectedObjects = [];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initComposer = () =&gt; &#123;</span><br><span class="line">  outlinePass = new OutlinePass(</span><br><span class="line">    new THREE.Vector2(canvas.value.clientWidth, canvas.value.clientHeight),</span><br><span class="line">    scene,</span><br><span class="line">    camera</span><br><span class="line">  );</span><br><span class="line">  outlinePass.visibleEdgeColor.set(0xff0000); // 设置轮廓线颜色为红色</span><br><span class="line">  outlinePass.edgeStrength = 10; // 设置轮廓线强度</span><br><span class="line"></span><br><span class="line">  // 添加 OutlinePass 到渲染器的通道中</span><br><span class="line">  composer = new EffectComposer(renderer);</span><br><span class="line">  composer.addPass(new RenderPass(scene, camera));</span><br><span class="line">  composer.addPass(outlinePass);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">window.addEventListener(&quot;mousemove&quot;, selectMesh, false);</span><br><span class="line"></span><br><span class="line">window.addEventListener(&quot;resize&quot;, () =&gt; &#123;</span><br><span class="line">  // 更新摄像机</span><br><span class="line">  camera.aspect = canvas.value.clientWidth / canvas.value.clientHeight;</span><br><span class="line">  // 更新摄像机投影矩阵</span><br><span class="line">  camera.updateProjectionMatrix();</span><br><span class="line">  // 更新渲染器</span><br><span class="line">  renderer.setSize(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  // 设置渲染器的像素比</span><br><span class="line">  renderer.setPixelRatio(window.devicePixelRatio);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.box &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translateX(-50%);</span><br><span class="line">&#125;</span><br><span class="line">.mask &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  width: 100vw;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  background-color: rgba(0, 0, 0, 0.5);</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 100vh;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是节流和防抖，他们有什么区别，怎么实现？</title>
      <link href="/posts/39a6002d/"/>
      <url>/posts/39a6002d/</url>
      
        <content type="html"><![CDATA[<h1 id="防抖和节流是什么"><a href="#防抖和节流是什么" class="headerlink" title="防抖和节流是什么"></a>防抖和节流是什么</h1><p>防抖和节流本质上都是 <strong>Javascript</strong> 中常用的两种性能优化方式。他们的作用是减少函数的执行次数，以提高代码性能</p><ul><li>防抖（Debounce）：连续触发函数，在规定时间内只执行 <font color="#ee3f4d"><strong>最后一次</strong></font>。这意味着在指定时间间隔内，多次触发相同的事件，那么前面触发的事件将会被忽略，只执行最后一次触发的事件。</li><li>节流（Throttle）：连续触发函数，在规定时间内只执行 <font color="#ee3f4d"><strong>第一次</strong></font>。这意味着在指定时间间隔内，无论事件触发了多少次，都只执行一次。</li></ul><img src='https://bu.dusays.com/2023/12/15/657c0613c0e05.png' width='100%' /><p>如上图所示，如果不使用防抖节流函数正常执行，则会一直触发函数。这对性能有很大的影响，当使用 <strong>防抖（Debounce）</strong> 来执行函数，在指定时间间隔内，方法会将前面触发的函数过滤，只执行最后一次触发的函数，使用 <strong>节流（Throttle）</strong> 来执行函数，在指定时间间隔内无论触发多少次函数，都只执行第一次触发的函数。</p><h1 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h1><h2 id="防抖（Debounce）"><a href="#防抖（Debounce）" class="headerlink" title="防抖（Debounce）"></a>防抖（Debounce）</h2><ul><li>搜索框实时搜索：在搜索框搜索关键词时，使用防抖函数延迟请求发送，只有在用户输入完成或者停顿一段时间后才触发搜索请求，避免频繁的发送网络请求。</li><li>窗口大小调整：在监听 window resize 时，使用防抖来优化某些逻辑的执行频率，例如重新渲染，重新计算页面布局等，避免因为执行频率过快导致页面卡顿。</li></ul><h2 id="节流（Throttle）"><a href="#节流（Throttle）" class="headerlink" title="节流（Throttle）"></a>节流（Throttle）</h2><ul><li>按钮点击：用户点击按钮，使用节流函数来确保只有用户点击一段时间后才执行相应操作，避免频繁操作或重复执行。</li><li>页面滚动：当用户滚动页面时，使用节流函数来限制触发滚动事件的频率。</li><li>鼠标移动：当用户移动鼠标时，可以使用节流来控制触发鼠标移动事件的频率。例如，在一定时间内只执行一次鼠标移动的处理逻辑，避免过多的计算和渲染操作。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>防抖和节流在不同的应用场景中展现出其重要性。防抖适用于需要等待用户操作完成或者停顿后才进行相应处理的情况，如搜索框实时搜索和窗口大小调整。节流则适用于需要限制事件触发频率的情况，如页面滚动加载和按钮点击。根据具体需求，选择合适的技术可以优化用户体验、减少不必要的资源消耗，从而提升前端应用的性能。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 防抖函数</span><br><span class="line"> * @param &#123;Function&#125; func 要执行的函数</span><br><span class="line"> * @param &#123;Number&#125; wait 延迟执行毫秒数</span><br><span class="line"> * @param &#123;Boolean&#125; immediate 是否立即执行</span><br><span class="line"> */</span><br><span class="line">const debounce = &lt;T extends (...args: any[]) =&gt; void&gt;(func: T, wait: number, immediate = false) =&gt; &#123;</span><br><span class="line">let timer: NodeJS.Timeout;</span><br><span class="line"></span><br><span class="line">    // later 函数用于设置延时执行 func</span><br><span class="line">const later = function (this: any, ...args: any[]) &#123;</span><br><span class="line">timer = setTimeout(() =&gt; &#123;</span><br><span class="line">            // 如果不是立即执行模式，则调用原始函数 func</span><br><span class="line">if (!immediate) &#123;</span><br><span class="line">func.apply(this, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;, wait);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">    // 返回一个函数，用于包装原始函数 func</span><br><span class="line">return function (this: any, ...args: any[]) &#123;</span><br><span class="line">const context = this;</span><br><span class="line"></span><br><span class="line">        // 是否立即执行的判断条件</span><br><span class="line">const callNow = immediate &amp;&amp; !timer;</span><br><span class="line">clearTimeout(timer);</span><br><span class="line"></span><br><span class="line">        // 如果满足立即执行条件，则立即执行 func</span><br><span class="line">if (callNow) &#123;</span><br><span class="line">func.apply(context, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        // 延时执行 func</span><br><span class="line">later.apply(context, args);</span><br><span class="line">&#125; as T;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 300ms内只执行最后一次触发的函数</span><br><span class="line">const debouncedFunction = debounce((value: string) =&gt; &#123;</span><br><span class="line">    console.log(value);</span><br><span class="line">&#125;, 300);</span><br><span class="line"></span><br><span class="line">debouncedFunction(&#x27;1&#x27;);</span><br><span class="line">debouncedFunction(&#x27;2&#x27;);</span><br><span class="line">debouncedFunction(&#x27;3&#x27;);</span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">    debouncedFunction(&#x27;4&#x27;);</span><br><span class="line">    debouncedFunction(&#x27;5&#x27;);</span><br><span class="line">&#125;, 400)</span><br><span class="line"></span><br><span class="line">// 结果</span><br><span class="line">console.log(3);</span><br><span class="line">console.log(5);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 节流函数</span><br><span class="line"> * @param &#123;Function&#125; func 要执行的函数</span><br><span class="line"> * @param &#123;Number&#125; wait 延迟执行毫秒数</span><br><span class="line"> * @param &#123;Boolean&#125; immediate 是否立即执行</span><br><span class="line"> */</span><br><span class="line">const throttle = &lt;T extends (...args: any[]) =&gt; void&gt;(func: T, wait: number, immediate: boolean = false): T =&gt; &#123;</span><br><span class="line">    // 定义一个标志变量，表示是否处于节流状态</span><br><span class="line">    let inThrottle: boolean = false;</span><br><span class="line"></span><br><span class="line">    // 返回一个函数，该函数将被用作节流后的函数</span><br><span class="line">    return function (this: any, ...args: any[]) &#123;</span><br><span class="line">        const context = this;</span><br><span class="line"></span><br><span class="line">        if (!inThrottle) &#123;</span><br><span class="line">            // 如果需要立即执行，则执行原始函数并进入节流状态</span><br><span class="line">            if (immediate) &#123;</span><br><span class="line">                func.apply(context, args);</span><br><span class="line">                inThrottle = true;</span><br><span class="line">                setTimeout(() =&gt; &#123;</span><br><span class="line">                    inThrottle = false;</span><br><span class="line">                &#125;, wait);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                // 如果不需要立即执行，同样执行原始函数并进入节流状态</span><br><span class="line">                func.apply(context, args);</span><br><span class="line">                inThrottle = true;</span><br><span class="line"></span><br><span class="line">                // 在指定的等待时间后，解除节流状态</span><br><span class="line">                setTimeout(() =&gt; &#123;</span><br><span class="line">                    inThrottle = false;</span><br><span class="line">                &#125;, wait);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; as T;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const throttledFunction = throttle((value: string) =&gt; &#123;</span><br><span class="line">    console.log(value);</span><br><span class="line">&#125;, 300, true);</span><br><span class="line"></span><br><span class="line">throttledFunction(&#x27;1&#x27;);</span><br><span class="line">throttledFunction(&#x27;2&#x27;);</span><br><span class="line">throttledFunction(&#x27;3&#x27;);</span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">    throttledFunction(&#x27;4&#x27;);</span><br><span class="line">    throttledFunction(&#x27;5&#x27;);</span><br><span class="line">&#125;, 400)</span><br><span class="line"></span><br><span class="line">// 结果</span><br><span class="line">console.log(1);</span><br><span class="line">console.log(4);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录如何在uniapp小程序中使用echarts</title>
      <link href="/posts/d87f7ca1/"/>
      <url>/posts/d87f7ca1/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>这段时间项目很繁忙，遇到一个需求，需要在 <strong>uniapp</strong> 的微信小程序中使用图表。经过调研，<strong>uniapp</strong> 官方推荐跟他自己生态绑定的 <strong>UCharts</strong>，但是我在使用过程中真心难受，因为我们图表的需求个人认为较复杂，所以在开发途中踩了很多坑，下面我列举下我这段时间踩到的坑：</p><ul><li><strong>UCharts</strong> 图表开启 X 轴滚动后，如果元素在 <strong>scrollview</strong> 中，会造成触摸不灵，在 <strong>ios</strong> 中的体验式触摸回弹（这个也是让我奔溃的原因，因为现场反馈用户体验感很差）</li><li><strong>UCharts</strong> 的 <strong>Mix</strong> 混合图只能支持柱状和折线两类图，当我需要实现堆叠柱状图 + 折线图时就无法使用 <strong>UCharts</strong> 实现</li><li>自由度不够，因为图表需求需要大量定制化，所以这里推荐仅仅只是简单展示的话，可以使用 <strong>UCharts</strong> ，如果需要定制化，建议使用 <strong>ECharts</strong></li><li>社区原因， <strong>UCharts</strong> 有很多 bug 都没有在社区收录，但是他提供了很多个交流群，可惜都没什么人说话</li></ul><p>上面的问题经过组内商量，决定使用 <strong>Echarts</strong> ，下面展开说说如何在 <strong>uniapp</strong> 的小程序中使用 <strong>ECharts</strong></p><h1 id="方案查找"><a href="#方案查找" class="headerlink" title="方案查找"></a>方案查找</h1><p>确认要使用 <strong>ECharts</strong> 后我们就开始去查询各种方案：</p><ul><li><a href="https://ext.dcloud.net.cn/plugin?id=1538">echarts-for-wx</a>：这个是在 <strong>uniapp</strong> 插件市场找到的一个支持小程序使用 <strong>ECharts</strong> 的组件，看了下代码感觉有点老旧，所以放弃了</li><li><a href="https://github.com/ecomfe/echarts-for-weixin.git">echarts-for-weixin</a>：这是 github 上找到的一个微信小程序原生组件，扫码看了下案例感觉还行，所以打算玩一下</li></ul><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="定制化-ECharts"><a href="#定制化-ECharts" class="headerlink" title="定制化 ECharts"></a>定制化 ECharts</h2><p>因为微信小程序对项目体积有严格限制，所以我们的 <strong>ECharts</strong> 文件不能太大，只下载我们用到的即可，抛弃一些无用工具，下面请看流程，这是我的一些配置：</p><p>进入 <a href="https://echarts.apache.org/zh/index.html">ECharts 官网</a></p><img src="https://bu.dusays.com/2023/09/20/650a664a9f9b8.png" width="100%" alt="步骤1"><img src="https://bu.dusays.com/2023/09/20/650a664a9fd7d.png" width="100%" alt="步骤2"><img src="https://bu.dusays.com/2023/09/20/650a664a79cf7.png" width="100%" alt="步骤3"><h2 id="clone-echarts-for-weixin-并修改-ec-canvas-组件"><a href="#clone-echarts-for-weixin-并修改-ec-canvas-组件" class="headerlink" title="clone echarts-for-weixin 并修改 ec-canvas 组件"></a>clone echarts-for-weixin 并修改 ec-canvas 组件</h2><p>去 github 克隆这个项目，把里面的 <strong>ec-canvas</strong> 组件拷贝出来，放在 <strong>uniapp</strong> 小程序项目中的自定义目录 <strong>wxcomponents</strong> 中，并将上一步下载下来的 <strong>echarts.min.js</strong> 文件放到 <strong>ec-canvas</strong> 目录里面，打开 <strong>ec-canvas.js</strong> ，修改里面的 <strong>ECharts</strong> 的引用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// import * as echarts from &#x27;./echarts&#x27;;</span><br><span class="line">import * as echarts from &#x27;./echarts.min.js&#x27;;</span><br></pre></td></tr></table></figure><h2 id="修改配置文件，全局引入原生组件"><a href="#修改配置文件，全局引入原生组件" class="headerlink" title="修改配置文件，全局引入原生组件"></a>修改配置文件，全局引入原生组件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;globalStyle&quot;: &#123;</span><br><span class="line">  &quot;usingComponents&quot;:&#123;</span><br><span class="line">    &quot;ec-canvas&quot;:&quot;/wxcomponents/ec-canvas/ec-canvas&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>重新编译一下项目</p><h2 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;view class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;ec-canvas id=&quot;mychart-dom-bar&quot; canvas-id=&quot;mychart-bar&quot; :ec=&quot;&#123; ec: &#123; onInit: initChart &#125; &#125;&quot;&gt;&lt;/ec-canvas&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;pageName&#x27;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initChart(canvas, width, height, dpr) &#123;</span><br><span class="line">      const chart = echarts.init(canvas, null, &#123;</span><br><span class="line">        width: width,</span><br><span class="line">        height: height,</span><br><span class="line">        devicePixelRatio: dpr</span><br><span class="line">      &#125;);</span><br><span class="line">      canvas.setChart(chart);</span><br><span class="line"></span><br><span class="line">      var option = &#123;</span><br><span class="line">        xAxis: &#123;</span><br><span class="line">          type: &#x27;category&#x27;,</span><br><span class="line">          data: [&#x27;Mon&#x27;, &#x27;Tue&#x27;, &#x27;Wed&#x27;, &#x27;Thu&#x27;, &#x27;Fri&#x27;, &#x27;Sat&#x27;, &#x27;Sun&#x27;]</span><br><span class="line">        &#125;,</span><br><span class="line">        yAxis: &#123;</span><br><span class="line">          type: &#x27;value&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line">            data: [150, 230, 224, 218, 135, 147, 260],</span><br><span class="line">            type: &#x27;line&#x27;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;;</span><br><span class="line">      chart.setOption(option);</span><br><span class="line">      return chart;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样即可展示 <strong>ECharts</strong> 图表</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我在使用中发现了一个问题，这个问题在模拟器中没有体现，在 <strong>android</strong> 设备中也没有体现，仅仅只是在 <strong>ios</strong>设备中出现，因为我在使用组件时把组件嵌套在 <strong>scrollview</strong> 中，会导致组件下半部分触摸不到，就好像有一半容器被遮挡，能看见但是点击触摸不到，但是通过真机调试 debug 又查找不出来问题</p><p>经过多次调试发现给原生组件 <strong>canvas</strong> 绑定 <strong>touch</strong> 事件并将原生组件嵌套在 <strong>scrollview</strong> 组件中，就会出现上述问题</p><img src='https://bu.dusays.com/2023/09/20/650a912056b17.png' alt='图片'/><p>所以我们需要改造组件，既然不能将 <strong>touch</strong> 事件绑定在 <strong>canvas</strong> 上，那么是否可以将事件绑定在上层的 <strong>view</strong> 元素中</p><h1 id="改造组件"><a href="#改造组件" class="headerlink" title="改造组件"></a>改造组件</h1><p>修改 <strong>ec-canvas.wxml</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;view </span><br><span class="line">  style=&quot;width: 100%; height: 100%&quot;</span><br><span class="line">  bindtouchstart=&quot;&#123;&#123; ec.disableTouch ? &#x27;&#x27; : &#x27;touchStart&#x27; &#125;&#125;&quot; </span><br><span class="line">  bindtouchmove=&quot;&#123;&#123;ec.disableTouch ? &#x27;&#x27; : &#x27;touchMove&#x27; &#125;&#125;&quot; </span><br><span class="line">  bindtouchend=&quot;&#123;&#123; ec.disableTouch ? &#x27;&#x27; : &#x27;touchEnd&#x27; &#125;&#125;&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &lt;!-- 新的：接口对其了H5 --&gt;</span><br><span class="line">  &lt;canvas wx:if=&quot;&#123;&#123;isUseNewCanvas&#125;&#125;&quot; type=&quot;2d&quot; class=&quot;ec-canvas&quot; canvas-id=&quot;&#123;&#123; canvasId &#125;&#125;&quot; bindinit=&quot;init&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">  &lt;!-- 旧的 --&gt;</span><br><span class="line">  &lt;canvas wx:else class=&quot;ec-canvas&quot; canvas-id=&quot;&#123;&#123; canvasId &#125;&#125;&quot; bindinit=&quot;init&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>修改 <strong>ec-canvas.js</strong> ，找到 3个 <strong>touch</strong> 函数，修改如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">touchStart(e) &#123;</span><br><span class="line">  if (this.chart &amp;&amp; e.touches.length &gt; 0) &#123;</span><br><span class="line">    // 查找canvas元素并计算判断当前触摸范围是否在canvas元素内</span><br><span class="line">    const query = uni.createSelectorQuery().in(this)</span><br><span class="line">    query.select(&#x27;.ec-canvas&#x27;).boundingClientRect(data =&gt; &#123;</span><br><span class="line">        const touch = e.touches[0];</span><br><span class="line">        const x = touch.clientX - data.left;</span><br><span class="line">        const y = touch.clientY - data.top;</span><br><span class="line">        if (x &gt;= 0 &amp;&amp; x &lt;= data.width &amp;&amp; y &gt;= 0 &amp;&amp; y &lt;= data.height) &#123;</span><br><span class="line">          const handler = this.chart.getZr().handler;</span><br><span class="line">          handler.dispatch(&#x27;mousedown&#x27;, &#123;</span><br><span class="line">            zrX: x,</span><br><span class="line">            zrY: y,</span><br><span class="line">            preventDefault: () =&gt; &#123;&#125;,</span><br><span class="line">            stopImmediatePropagation: () =&gt; &#123;&#125;,</span><br><span class="line">            stopPropagation: () =&gt; &#123;&#125;</span><br><span class="line">          &#125;);</span><br><span class="line">          handler.dispatch(&#x27;mousemove&#x27;, &#123;</span><br><span class="line">            zrX: x,</span><br><span class="line">            zrY: y,</span><br><span class="line">            preventDefault: () =&gt; &#123;&#125;,</span><br><span class="line">            stopImmediatePropagation: () =&gt; &#123;&#125;,</span><br><span class="line">            stopPropagation: () =&gt; &#123;&#125;</span><br><span class="line">          &#125;);</span><br><span class="line">          handler.processGesture(wrapTouch(e), &#x27;start&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).exec();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">touchMove(e) &#123;</span><br><span class="line">  if (this.chart &amp;&amp; e.touches.length &gt; 0) &#123;</span><br><span class="line">    // 查找canvas元素并计算判断当前触摸范围是否在canvas元素内</span><br><span class="line">    const query = uni.createSelectorQuery().in(this)</span><br><span class="line">    query.select(&#x27;.ec-canvas&#x27;).boundingClientRect(data =&gt; &#123;</span><br><span class="line">        const touch = e.touches[0];</span><br><span class="line">        const x = touch.clientX - data.left;</span><br><span class="line">        const y = touch.clientY - data.top;</span><br><span class="line">        if (x &gt;= 0 &amp;&amp; x &lt;= data.width &amp;&amp; y &gt;= 0 &amp;&amp; y &lt;= data.height) &#123;</span><br><span class="line">          const handler = this.chart.getZr().handler;</span><br><span class="line">          handler.dispatch(&#x27;mousemove&#x27;, &#123;</span><br><span class="line">            zrX: x,</span><br><span class="line">            zrY: y,</span><br><span class="line">            preventDefault: () =&gt; &#123;&#125;,</span><br><span class="line">            stopImmediatePropagation: () =&gt; &#123;&#125;,</span><br><span class="line">            stopPropagation: () =&gt; &#123;&#125;</span><br><span class="line">          &#125;);</span><br><span class="line">          handler.processGesture(this.wrapTouch(e), &#x27;change&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).exec();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">touchEnd(e) &#123;</span><br><span class="line">  if (this.chart) &#123;</span><br><span class="line">    // 查找canvas元素并计算判断当前触摸范围是否在canvas元素内</span><br><span class="line">    const query = uni.createSelectorQuery().in(this)</span><br><span class="line">    query.select(&#x27;.ec-canvas&#x27;).boundingClientRect(data =&gt; &#123;</span><br><span class="line">      const touch = e.changedTouches ? e.changedTouches[0] : &#123;&#125;;</span><br><span class="line">      const x = touch.clientX - data.left;</span><br><span class="line">      const y = touch.clientY - data.top;</span><br><span class="line">      if (x &gt;= 0 &amp;&amp; x &lt;= data.width &amp;&amp; y &gt;= 0 &amp;&amp; y &lt;= data.height) &#123;</span><br><span class="line">        const handler = this.chart.getZr().handler;</span><br><span class="line">        handler.dispatch(&#x27;mouseup&#x27;, &#123;</span><br><span class="line">          zrX: x,</span><br><span class="line">          zrY: y,</span><br><span class="line">          preventDefault: () =&gt; &#123;&#125;,</span><br><span class="line">          stopImmediatePropagation: () =&gt; &#123;&#125;,</span><br><span class="line">          stopPropagation: () =&gt; &#123;&#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        handler.dispatch(&#x27;click&#x27;, &#123;</span><br><span class="line">          zrX: x,</span><br><span class="line">          zrY: y,</span><br><span class="line">          preventDefault: () =&gt; &#123;&#125;,</span><br><span class="line">          stopImmediatePropagation: () =&gt; &#123;&#125;,</span><br><span class="line">          stopPropagation: () =&gt; &#123;&#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        handler.processGesture(this.wrapTouch(e), &#x27;end&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).exec();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>重新编译文件，可以看到图表在 <strong>scrollview</strong> 也能正常交互，并且我个人感觉交互比 <strong>UCharts</strong> 流畅，下面这是前后对比图：</p><img src="https://bu.dusays.com/2023/09/20/650a9a1f0da00.gif" alt="优化前" width="300px" height="300px" style="display: inline-block" /><img src="https://bu.dusays.com/2023/09/20/650a9a203198b.gif" alt="优化后" width="300px" height="300px" style="display: inline-block" />]]></content>
      
      
      <categories>
          
          <category> uniapp </category>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Hybird App </tag>
            
            <tag> uniapp </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于vue3.0 + Threejs实现炫酷3D网页</title>
      <link href="/posts/8e867661/"/>
      <url>/posts/8e867661/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>该网页是我模仿一位国外大佬的网页实现，网页功能大概模仿实现了 7 成，如果想看原网页效果可以前往<a href="https://realestate-neotix.vercel.app/">传送门</a></p><p>下面简单聊聊在该 demo 中我做了什么以及各位能学到什么：</p><ul><li>二维方面实现了网页滚动翻页和元素展示动画</li><li>三维方面实现了天空图、相机模型位置根据滚动位置变化</li><li>大模型预览</li><li>使用精灵实现标点</li><li>精灵标点被模型遮挡隐藏</li><li>鼠标移到标点处弹出提示框</li><li>点击标点进入下一场景</li></ul><p><a href="https://ljnmeow.github.io/threejs-demo/dist/#/3dWebsite">演示地址(在 github 上有点卡，请见谅)</a></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="二维实现滚动翻页和元素展示动画"><a href="#二维实现滚动翻页和元素展示动画" class="headerlink" title="二维实现滚动翻页和元素展示动画"></a>二维实现滚动翻页和元素展示动画</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">// 页面滚动数据</span><br><span class="line">const pageScrollingData = reactive(&#123;</span><br><span class="line">  scrollviewHeight: 0, // 滚动视图高度</span><br><span class="line">  pageHeight: 0, // 每页高度</span><br><span class="line">  totalPage: 5, // 总页数</span><br><span class="line">  currentPage: 1, // 当前页面</span><br><span class="line">  isScrolling: false, // 是否正在滚动</span><br><span class="line">  scrollPos: 0, // 滚轮滚动位置</span><br><span class="line">  ending: false, // 是否滚动到底部</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 控制页面元素数据</span><br><span class="line">const elementStatus = reactive(&#123;</span><br><span class="line">  pageOnetitle: false,</span><br><span class="line">  pageOneStart: false,</span><br><span class="line">  pageTwoText: false,</span><br><span class="line">  pageThreeLeftImage: false,</span><br><span class="line">  pageThreeHeader: false,</span><br><span class="line">  pageThreeRightText: false,</span><br><span class="line">  pageFourALeftText: false,</span><br><span class="line">  pageFourArightText: false,</span><br><span class="line">  quitButton: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化滚动视图数据</span><br><span class="line">const initScrollViewData = (): void =&gt; &#123;</span><br><span class="line">  // 每一页高度 = 浏览器窗口viewport的高度</span><br><span class="line">  pageScrollingData.pageHeight = window.innerHeight;</span><br><span class="line">  // 滚动视图总高度 = 每页高度 * 总页数</span><br><span class="line">  pageScrollingData.scrollviewHeight = pageScrollingData.pageHeight * pageScrollingData.totalPage;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 鼠标滚轮滚动控制</span><br><span class="line">const mouseWheelHandle = (event: any): void | boolean =&gt; &#123;</span><br><span class="line">  const evt = event || window.event;</span><br><span class="line">  // 阻止默认事件</span><br><span class="line">  if (evt.stopPropagation) &#123;</span><br><span class="line">    evt.stopPropagation();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    evt.returnValue = false;</span><br><span class="line">  &#125;</span><br><span class="line">  // 当前正在滚动中则不做任何操作</span><br><span class="line">  if (pageScrollingData.isScrolling) &#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">  const e = event.originalEvent || event;</span><br><span class="line">  // 记录滚动位置</span><br><span class="line">  pageScrollingData.scrollPos = e.deltaY || e.detail;</span><br><span class="line">  if (pageScrollingData.scrollPos &gt; 0) &#123; // 当鼠标滚轮向上滚动时</span><br><span class="line">    pageTurning(true);</span><br><span class="line">  &#125; else if (pageScrollingData.scrollPos &lt; 0) &#123; // 当鼠标滚轮向下滚动时</span><br><span class="line">    pageTurning(false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 页面移动方向处理</span><br><span class="line">const pageTurning = (direction: boolean): void =&gt; &#123;</span><br><span class="line">  if (direction) &#123;</span><br><span class="line">    // 往上滚动时，判断当前页码 + 1 是否 &lt;= 总页码 ?？ 页码 + 1，执行页面滚动操作，</span><br><span class="line">    if (pageScrollingData.currentPage + 1 &lt;= pageScrollingData.totalPage) &#123;</span><br><span class="line">      pageScrollingData.currentPage += 1;</span><br><span class="line">      pageMove(pageScrollingData.currentPage);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 同样往下滚动时，判断当前页码 - 1 是否 &gt; 0 ?? 页码 - 1，执行页面滚动操作</span><br><span class="line">    if (pageScrollingData.currentPage - 1 &gt; 0) &#123;</span><br><span class="line">      pageScrollingData.currentPage -= 1;</span><br><span class="line">      pageMove(pageScrollingData.currentPage);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 页面滚动</span><br><span class="line">const pageMove = (pageNo: number): void =&gt; &#123;</span><br><span class="line">  // 设置滚动状态</span><br><span class="line">  pageScrollingData.isScrolling = true;</span><br><span class="line">  // 计算滚动高度</span><br><span class="line">  const scrollHeight = -(pageNo - 1) * pageScrollingData.pageHeight + &quot;px&quot;;</span><br><span class="line">  // 设置css样式</span><br><span class="line">  scrollview.value.style.transform = `translateY($&#123;scrollHeight&#125;)`;</span><br><span class="line">  // 重新设置下当前页码</span><br><span class="line">  pageScrollingData.currentPage = pageNo;</span><br><span class="line"></span><br><span class="line">  handingElementshow();</span><br><span class="line"></span><br><span class="line">  // 定时器做一个防抖，避免一秒内多次触发</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    pageScrollingData.isScrolling = false;</span><br><span class="line">  &#125;, 1500);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 处理元素出现或隐藏</span><br><span class="line">const handingElementshow = (): void =&gt; &#123;</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    switch (pageScrollingData.currentPage) &#123;</span><br><span class="line">      case 1:</span><br><span class="line">        elementStatus.pageOnetitle = true;</span><br><span class="line">        elementStatus.pageOneStart = true;</span><br><span class="line">        elementStatus.pageTwoText = false;</span><br><span class="line">        break;</span><br><span class="line">      case 2:</span><br><span class="line">        elementStatus.pageOnetitle = false;</span><br><span class="line">        elementStatus.pageOneStart = false;</span><br><span class="line">        elementStatus.pageTwoText = true;</span><br><span class="line">        elementStatus.pageThreeLeftImage = false;</span><br><span class="line">        elementStatus.pageThreeHeader = false;</span><br><span class="line">        elementStatus.pageThreeRightText = false;</span><br><span class="line">        break;</span><br><span class="line">      case 3:</span><br><span class="line">        elementStatus.pageTwoText = false;</span><br><span class="line">        elementStatus.pageThreeLeftImage = true;</span><br><span class="line">        elementStatus.pageThreeHeader = true;</span><br><span class="line">        elementStatus.pageThreeRightText = true;</span><br><span class="line">        elementStatus.pageFourALeftText = false;</span><br><span class="line">        elementStatus.pageFourArightText = false;</span><br><span class="line">        break;</span><br><span class="line">      case 4:</span><br><span class="line">        elementStatus.pageThreeLeftImage = false;</span><br><span class="line">        elementStatus.pageThreeHeader = false;</span><br><span class="line">        elementStatus.pageThreeRightText = false;</span><br><span class="line">        elementStatus.pageFourALeftText = true;</span><br><span class="line">        elementStatus.pageFourArightText = true;</span><br><span class="line">        break;</span><br><span class="line">      case 5:</span><br><span class="line">        elementStatus.pageFourALeftText = false;</span><br><span class="line">        elementStatus.pageFourArightText = false;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, 1000);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>配合 CSS3 动画可以达到以下效果：</p><img src="https://bu.dusays.com/2023/05/29/647442570ea37.gif" width="100%"><h2 id="三维效果实现"><a href="#三维效果实现" class="headerlink" title="三维效果实现"></a>三维效果实现</h2><h3 id="初始化场景、相机、渲染器、灯光"><a href="#初始化场景、相机、渲染器、灯光" class="headerlink" title="初始化场景、相机、渲染器、灯光"></a>初始化场景、相机、渲染器、灯光</h3><p>使用<strong>three.js</strong>里面的<strong>CubeTextureLoader</strong>渲染一个天空图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">// 初始化场景</span><br><span class="line">const initScene = (): void =&gt; &#123;</span><br><span class="line">  scene = new THREE.Scene();</span><br><span class="line">  // 天空图图片集合，指定顺序pos-x, neg-x, pos-y, neg-y, pos-z, neg-z</span><br><span class="line">  const skyBg = [</span><br><span class="line">    getAssetsFile(&quot;sky/px.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nx.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/py.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/ny.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/pz.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nz.jpg&quot;),</span><br><span class="line">  ];</span><br><span class="line">  const cubeLoader: THREE.CubeTextureLoader = new THREE.CubeTextureLoader();</span><br><span class="line">  skyEnvMap = cubeLoader.load(skyBg);</span><br><span class="line">  // 设置场景背景</span><br><span class="line">  scene.background = skyEnvMap;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 初始化相机</span><br><span class="line">const initCamera = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  camera = new THREE.PerspectiveCamera(cameraFov, width / height, 1, 1000);</span><br><span class="line"></span><br><span class="line">  cameraPostion = new THREE.Vector3(0, -13, 48);</span><br><span class="line">  camera.position.copy(cameraPostion);</span><br><span class="line"></span><br><span class="line">  scene.add(camera);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 初始化渲染器</span><br><span class="line">const initRenderer = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  renderer = new THREE.WebGLRenderer(&#123;</span><br><span class="line">    antialias: true, // 抗锯齿</span><br><span class="line">  &#125;);</span><br><span class="line">  renderer.setSize(width, height);</span><br><span class="line">  // 指定输出编码格式，当设置renderer.outputEncoding为sRGBEncoding时，渲染器会将输出的颜色值转换为sRGB格式，以便正确呈现在屏幕上</span><br><span class="line">  renderer.outputEncoding = THREE.sRGBEncoding;</span><br><span class="line">  canvas.value.appendChild(renderer.domElement);</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 初始化灯光</span><br><span class="line">const initLight = (): void =&gt; &#123;</span><br><span class="line">  // 环境光</span><br><span class="line">  const ambientLight: THREE.AmbientLight = new THREE.AmbientLight(</span><br><span class="line">    new THREE.Color(&quot;rgb(255, 255, 255)&quot;)</span><br><span class="line">  );</span><br><span class="line">  // 平行光</span><br><span class="line">  const directionalLight: THREE.DirectionalLight = new THREE.DirectionalLight(</span><br><span class="line">    new THREE.Color(&quot;rgb(255, 99, 71)&quot;),</span><br><span class="line">    2 // 光照强度为2</span><br><span class="line">  );</span><br><span class="line">  directionalLight.position.set(-220, 30, 50);</span><br><span class="line"></span><br><span class="line">  scene.add(ambientLight, directionalLight);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><img src="https://bu.dusays.com/2023/05/29/64745f2d205d2.png" width="100%"><h3 id="模型加载"><a href="#模型加载" class="headerlink" title="模型加载"></a>模型加载</h3><p>模型加载需要使用<strong>three.js</strong>里面的<strong>DRACOLoader</strong>、<strong>GLTFLoader</strong>两个类，需要从<strong>node_modules</strong>中把<strong>draco</strong>拷贝出来放到项目的<strong>public</strong>目录中</p><img src="https://bu.dusays.com/2023/05/29/64744ffebd422.png" width="50%"><p>使用<strong>DRACOLoader</strong>是因为<strong>glTF 模型</strong>使用了<strong>DRACO</strong>压缩算法进行了压缩</p><p><strong>DRACO</strong>是一种用于压缩 3D 几何数据的算法，它可以将 3D 模型文件的大小减小到原来的 10%到 30%之间，从而提高加载和渲染速度。在使用<strong>DRACO</strong>进行压缩后，模型文件将被转换为<strong>DRACO 格式</strong>，这意味着<strong>Three.js</strong>需要使用<strong>DRACOLoader</strong>来读取和解压缩模型文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">const dracoLoader: DRACOLoader = new DRACOLoader();</span><br><span class="line">dracoLoader.setDecoderPath(&quot;draco/&quot;);</span><br><span class="line">dracoLoader.preload();</span><br><span class="line"></span><br><span class="line">const gltfLoader: GLTFLoader = new GLTFLoader();</span><br><span class="line">gltfLoader.setDRACOLoader(dracoLoader);</span><br><span class="line"></span><br><span class="line">// 加载建筑模型</span><br><span class="line">const loadBuildingModel = (): void =&gt; &#123;</span><br><span class="line">  gltfLoader.load(getAssetsFile(&quot;building/building.glb&quot;), (gltf) =&gt; &#123;</span><br><span class="line">    // 保存模型初始位置</span><br><span class="line">    originalModelPos.value = new THREE.Vector3(14, -40.8, 0);</span><br><span class="line">    // 设置模型位置</span><br><span class="line">    gltf.scene.position.copy(originalModelPos.value);</span><br><span class="line">    // 设置模型旋转角度</span><br><span class="line">    const currentRotation = gltf.scene.rotation.clone();</span><br><span class="line">    const newRotation = new THREE.Euler(</span><br><span class="line">      currentRotation.x,</span><br><span class="line">      currentRotation.y - (131 * Math.PI) / 180,</span><br><span class="line">      currentRotation.z,</span><br><span class="line">      currentRotation.order</span><br><span class="line">    );</span><br><span class="line">    gltf.scene.rotation.copy(newRotation);</span><br><span class="line"></span><br><span class="line">    // 循环模型内Mesh并找到窗户所属的Mesh，设置该Mesh中材质的环境贴图以及环境贴图的强度</span><br><span class="line">    const ObjectGroup = gltf.scene.children;</span><br><span class="line">    for (let i = 0; i &lt; ObjectGroup.length; i++) &#123;</span><br><span class="line">      if (</span><br><span class="line">        ObjectGroup[i] instanceof THREE.Group &amp;&amp;</span><br><span class="line">        ObjectGroup[i].name === &quot;AB1_OBJ_02&quot;</span><br><span class="line">      ) &#123;</span><br><span class="line">        ObjectGroup[i].children &amp;&amp;</span><br><span class="line">          ObjectGroup[i].children.forEach((item) =&gt; &#123;</span><br><span class="line">            if (item instanceof THREE.Mesh &amp;&amp; item.name === &quot;AB1_OBJ_02_1&quot;) &#123;</span><br><span class="line">              item.material.envMap = skyEnvMap;</span><br><span class="line">              item.material.envMapIntensity = 0.5;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 保存模型数据，后面设置动画会直接使用到</span><br><span class="line">    buildingModel = gltf.scene;</span><br><span class="line"></span><br><span class="line">    scene.add(buildingModel);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><img src="https://bu.dusays.com/2023/05/29/647466b037606.png" width="100%"><h3 id="模型动画，模型根据页面滚动设置动画"><a href="#模型动画，模型根据页面滚动设置动画" class="headerlink" title="模型动画，模型根据页面滚动设置动画"></a>模型动画，模型根据页面滚动设置动画</h3><p>在切换页面的同时，我们需要让模型做出相应动画来进行滚动交互</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">// 滚动时相机和模型动画</span><br><span class="line">const handingScrolling = (): void =&gt; &#123;</span><br><span class="line">  // 判断是否滚动到最后一页，因为第3、4页模型的位置是不需要改变，也就是没有相对应地模型动画，所以当前页面是最后一页时，那么只能玩上滚动，并且需要执行第二页的模型动画</span><br><span class="line">  const pos = pageScrollingData.ending ? 2 - 1 : pageScrollingData.currentPage - 1;</span><br><span class="line">  // 计算新的模型位置</span><br><span class="line">  const newModelPos: THREE.Vector3 = originalModelPos.value &amp;&amp; originalModelPos.value.clone().add(new THREE.Vector3(pos * 10, pos * 8.6, pos * 13));</span><br><span class="line">  // 当前为第一页时，模型位置设置为初始值</span><br><span class="line">  if (pageScrollingData.currentPage === 1) &#123;</span><br><span class="line">    newModelPos.copy(originalModelPos.value);</span><br><span class="line">  &#125;</span><br><span class="line">  if (pageScrollingData.currentPage &lt;= 2 || pageScrollingData.ending) &#123; // 当前页码 &lt;= 第2页时 或者 页面滚动到最底部，执行该动画</span><br><span class="line">    gsap.to(camera.position, &#123;</span><br><span class="line">      x: pos * 18,</span><br><span class="line">      y: cameraPostion.y + pos * 14,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    gsap.to(buildingModel.position, &#123;</span><br><span class="line">      x: newModelPos.x,</span><br><span class="line">      y: newModelPos.y,</span><br><span class="line">      z: newModelPos.z,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    pageScrollingData.ending = false;</span><br><span class="line">  &#125; else if (pageScrollingData.currentPage === 5) &#123; // 当前页码 === 第5页时，执行该动画</span><br><span class="line">    gsap.to(camera.position, &#123;</span><br><span class="line">      x: -24,</span><br><span class="line">      y: -30,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    gsap.to(buildingModel.position, &#123;</span><br><span class="line">      x: -6,</span><br><span class="line">      y: -59,</span><br><span class="line">      z: 18,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    pageScrollingData.ending = true;</span><br><span class="line">  &#125;</span><br><span class="line">  // 控制页面元素显示隐藏</span><br><span class="line">  handingElementshow();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>配合上面的<strong>pageMove</strong>函数，可以达到以下效果：</p><img src="https://bu.dusays.com/2023/05/30/647559081f5ea.gif" width="100%"><h3 id="模型探索与退出探索"><a href="#模型探索与退出探索" class="headerlink" title="模型探索与退出探索"></a>模型探索与退出探索</h3><p>模型探索所做的操作就是将页面三维容器层级设置到最高，同时设置相机和模型的动画，并开启控制器交互</p><p>退出探索则是把相机模型位置设置回第5页时的状态，并且把控制器属性设置回原来的状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">// 探索模型</span><br><span class="line">const explorarModel = (): void =&gt; &#123;</span><br><span class="line">  // 设置三维容器层级</span><br><span class="line">  canvas.value.style.zIndex = 1;</span><br><span class="line"></span><br><span class="line">  // 相机动画改变相机位置</span><br><span class="line">  const cameraGasp: gsap.core.Tween = gsap.to(camera.position, &#123;</span><br><span class="line">    x: -6,</span><br><span class="line">    y: 6,</span><br><span class="line">    z: 80,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 2,</span><br><span class="line">  &#125;);</span><br><span class="line">  // 模型动画改变模型位置</span><br><span class="line">  const buildingGasp: gsap.core.Tween = gsap.to(buildingModel.position, &#123;</span><br><span class="line">    x: 0,</span><br><span class="line">    y: -22,</span><br><span class="line">    z: 0,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 2,</span><br><span class="line">  &#125;);</span><br><span class="line">  // 等待执行</span><br><span class="line">  const delayedCall: Promise&lt;unknown&gt; = new Promise((resolve) =&gt; &#123;</span><br><span class="line">    gsap.delayedCall(1, resolve);</span><br><span class="line">  &#125;);</span><br><span class="line">  // 当所有动画执行完成时的操作</span><br><span class="line">  Promise.all([cameraGasp, buildingGasp, delayedCall])</span><br><span class="line">    .then(() =&gt; &#123;</span><br><span class="line">      elementStatus.quitButton = true; // 展示退出探索按钮</span><br><span class="line">      controls.enabled = true; // 开启控制器交互</span><br><span class="line">      controls.maxPolarAngle = Math.PI / 2 - 0.01; // 设置垂直旋转的角度的上限</span><br><span class="line">      controls.autoRotate = true; // 开启自动旋转</span><br><span class="line">      controls.minDistance = 40; // 设置相机向内移动上限</span><br><span class="line">      controls.maxDistance = 86; // 设置相机向外移动上限</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      console.log(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 退出探索模型</span><br><span class="line">const quitExporarModel = (key: number): void =&gt; &#123;</span><br><span class="line">  // 移除标点</span><br><span class="line">  scene.remove(pointGroup);</span><br><span class="line">  // 设置三维容器层级</span><br><span class="line">  canvas.value.style.zIndex = -1;</span><br><span class="line">  // 隐藏退出按钮</span><br><span class="line">  elementStatus.quitButton = false;</span><br><span class="line">  // 把控制器一些参数设置回初始值</span><br><span class="line">  controls.maxPolarAngle = Math.PI;</span><br><span class="line">  controls.enabled = false;</span><br><span class="line">  controls.autoRotate = false;</span><br><span class="line">  controls.minDistance = 0;</span><br><span class="line">  controls.maxDistance = Infinity;</span><br><span class="line">  // 执行动画操作</span><br><span class="line">  gsap.to(camera.position, &#123;</span><br><span class="line">    x: -24,</span><br><span class="line">    y: -30,</span><br><span class="line">    z: 48,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 1,</span><br><span class="line">  &#125;);</span><br><span class="line">  gsap.to(buildingModel.position, &#123;</span><br><span class="line">    x: -6,</span><br><span class="line">    y: -59,</span><br><span class="line">    z: 18,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 1,</span><br><span class="line">  &#125;);</span><br><span class="line">  gsap.to(controls.target, &#123;</span><br><span class="line">    x: 0,</span><br><span class="line">    y: 0,</span><br><span class="line">    z: 0,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 1,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>得到当前如下效果：</p><img src="https://bu.dusays.com/2023/05/30/647574da5325f.gif" width="100%"><h3 id="给模型添加标点"><a href="#给模型添加标点" class="headerlink" title="给模型添加标点"></a>给模型添加标点</h3><p>在开发时我在项目中写了一个方法利用<strong>three.js</strong>中的<strong>Raycaster</strong>类拾取了3个坐标，下面直接看方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">// 给模型添加标点</span><br><span class="line">const addPointWithModel = (): void =&gt; &#123;</span><br><span class="line">  // 标点数据</span><br><span class="line">  const pointArr: PointType[] = [</span><br><span class="line">    &#123;</span><br><span class="line">      x: -16.979381448617573,</span><br><span class="line">      y: -19.167911412787436,</span><br><span class="line">      z: 1.4417293738365617,</span><br><span class="line">      text: &quot;aaaaa&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      x: 4.368890112320235,</span><br><span class="line">      y: -12.020210823358955,</span><br><span class="line">      z: 10.590562296036955,</span><br><span class="line">      text: &quot;bbbbb&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      x: -4.655517564465063,</span><br><span class="line">      y: 12.146541899849993,</span><br><span class="line">      z: 11.879293977258593,</span><br><span class="line">      ware: true, // 是否展示涟漪动画</span><br><span class="line">      otherScene: true, // 是否可以前往下一个场景</span><br><span class="line">      text: &quot;ccccc&quot;,  // 弹框展示的文字</span><br><span class="line">    &#125;,</span><br><span class="line">  ];</span><br><span class="line">  // 贴图加载</span><br><span class="line">  const circleTexture: THREE.Texture = textureLoader.load(</span><br><span class="line">    getAssetsFile(&quot;building/sprite.png&quot;)</span><br><span class="line">  );</span><br><span class="line">  const waveTexture: THREE.Texture = textureLoader.load(</span><br><span class="line">    getAssetsFile(&quot;wave.png&quot;)</span><br><span class="line">  );</span><br><span class="line">  // 遍历标点数据创建精灵标点</span><br><span class="line">  pointArr.forEach((item: PointType) =&gt; &#123;</span><br><span class="line">    const spriteMaterial: THREE.SpriteMaterial = new THREE.SpriteMaterial(&#123;</span><br><span class="line">      map: circleTexture,</span><br><span class="line">    &#125;);</span><br><span class="line">    const sprite: THREE.Sprite &amp; Info = new THREE.Sprite(spriteMaterial);</span><br><span class="line">    sprite.name = &quot;point&quot;;</span><br><span class="line">    sprite.text = item.text;</span><br><span class="line">    sprite.otherScene = item.otherScene;</span><br><span class="line">    sprite.position.set(item.x, item.y + 0.2, item.z + 2);</span><br><span class="line">    sprite.scale.set(1.4, 1.4, 1);</span><br><span class="line"></span><br><span class="line">    // 需要涟漪动画则要创建一个涟漪精灵</span><br><span class="line">    if (item.ware) &#123;</span><br><span class="line">      const waveMaterial: THREE.SpriteMaterial = new THREE.SpriteMaterial(&#123;</span><br><span class="line">        map: waveTexture,</span><br><span class="line">        color: new THREE.Color(&quot;rgb(255, 255, 255)&quot;),</span><br><span class="line">        transparent: true,</span><br><span class="line">        opacity: 1.0,</span><br><span class="line">        side: THREE.DoubleSide,</span><br><span class="line">        depthWrite: false,</span><br><span class="line">      &#125;);</span><br><span class="line">      let waveSprite: THREE.Sprite &amp; Info = new THREE.Sprite(waveMaterial);</span><br><span class="line">      waveSprite.name = &quot;wave&quot;;</span><br><span class="line">      waveSprite.text = item.text;</span><br><span class="line">      waveSprite.otherScene = item.otherScene;</span><br><span class="line">      waveSprite.size = 8 * 0.3;</span><br><span class="line">      waveSprite._s = Math.random() * 1.0 + 1.0;</span><br><span class="line"></span><br><span class="line">      waveSprite.position.set(item.x, item.y + 0.2, item.z + 2);</span><br><span class="line"></span><br><span class="line">      pointGroup.add(waveSprite);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pointGroup.add(sprite);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  scene.add(pointGroup);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在<strong>render</strong>函数中我们需要添加如下代码，来实现涟漪动画</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 涟漪动画</span><br><span class="line">const pointGroup = scene.children.find((item) =&gt; item.name === &quot;pointGroup&quot;); // 查找标点组合</span><br><span class="line">if (pointGroup) &#123; // 组合存在</span><br><span class="line">  const wave: any = pointGroup.children.length &amp;&amp; pointGroup.children.find((sprite) =&gt; sprite.name === &quot;wave&quot;); // 找到涟漪精灵</span><br><span class="line">  if (wave) &#123;</span><br><span class="line">    // 修改精灵的大小和材质的透明度达到涟漪的效果</span><br><span class="line">    wave._s += 0.01;</span><br><span class="line">    wave.scale.set(</span><br><span class="line">      wave.size * wave._s,</span><br><span class="line">      wave.size * wave._s,</span><br><span class="line">      wave.size * wave._s</span><br><span class="line">    );</span><br><span class="line">    if (wave._s &lt;= 1.5) &#123;</span><br><span class="line">      //mesh._s=1，透明度=0 mesh._s=1.5，透明度=1</span><br><span class="line">      wave.material.opacity = (wave._s - 1) * 2;</span><br><span class="line">    &#125; else if (wave._s &gt; 1.5 &amp;&amp; wave._s &lt;= 2) &#123;</span><br><span class="line">      //mesh._s=1.5，透明度=1 mesh._s=2，透明度=0</span><br><span class="line">      wave.material.opacity = 1 - (wave._s - 1.5) * 2;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      wave._s = 1.0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下图：</p><img src="https://bu.dusays.com/2023/05/30/6475a043f029f.gif" width="100%"><h3 id="建筑遮挡隐藏标点"><a href="#建筑遮挡隐藏标点" class="headerlink" title="建筑遮挡隐藏标点"></a>建筑遮挡隐藏标点</h3><p>当建筑遮挡标点时，因为精灵是一个总是面朝着摄像机的平面，所以即便被建筑遮挡，射线依旧能选中这个标点，这不利于后面的功能</p><p>在<strong>three.js</strong>中，<strong>Raycaster</strong>可以用于检测鼠标或者屏幕上某个点是否与场景中的物体相交</p><p>Raycaster的原理是基于3D空间中的射线投射，它会从一个起点（例如相机位置）发出一条射线，直到它与场景中的某个物体相交。Raycaster并不会遮挡检测，但是通过检测物体与射线相交的顺序，可以判断它们之间是否存在遮挡关系</p><p>在这个功能中，我们把标点作为射线的起点，相机为终点，当射线检测到的对象是不是精灵标点<strong>sprite</strong>，则隐藏标点，具体原理如下图</p><img src="https://bu.dusays.com/2023/05/30/64761c8f4590e.png" width="60%"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">// 判断模型是否遮挡精灵</span><br><span class="line">const spriteVisible = (): void =&gt; &#123;</span><br><span class="line">  // 创建一个Raycaster对象</span><br><span class="line">  const raycaster = new THREE.Raycaster();</span><br><span class="line">  raycaster.camera = camera;</span><br><span class="line"></span><br><span class="line">  // 精灵标点集合</span><br><span class="line">  const spriteArr: THREE.Object3D&lt;THREE.Event&gt;[] = [];</span><br><span class="line">  pointGroup.children.forEach((sprite) =&gt; &#123;</span><br><span class="line">    spriteArr.push(sprite);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  for (let i = 0; i &lt; spriteArr.length; i++) &#123;</span><br><span class="line">    const sprite: THREE.Object3D&lt;THREE.Event&gt; = spriteArr[i];</span><br><span class="line"></span><br><span class="line">    // 将Sprite的位置作为射线的起点</span><br><span class="line">    // 创建一个新的 Vector3 对象，然后使用 setFromMatrixPosition 方法将该对象设置为 Sprite 对象在世界坐标系下的位置</span><br><span class="line">    // 最终得到一个 Vector3 对象，表示了 Sprite 对象在世界坐标系下的位置。这个位置可以用于计算精灵与相机的相对位置，或者用于计算精灵的旋转方向</span><br><span class="line">    const spritePosition: THREE.Vector3 = new THREE.Vector3().setFromMatrixPosition(</span><br><span class="line">      sprite.matrixWorld</span><br><span class="line">    );</span><br><span class="line">    const rayOrigin: THREE.Vector3 = spritePosition.clone();</span><br><span class="line"></span><br><span class="line">    // 将摄像机位置作为射线的终点</span><br><span class="line">    const cameraPosition: THREE.Vector3 = new THREE.Vector3().setFromMatrixPosition(</span><br><span class="line">      camera.matrixWorld</span><br><span class="line">    );</span><br><span class="line">    // 计算spritePosition指向cameraPosition的单位向量代码</span><br><span class="line">    // ameraPosition.clone() 将 cameraPosition 对象进行克隆，得到一个新的 Vector3 对象。这么做是为了避免修改原始的 cameraPosition 对象</span><br><span class="line">    // sub(spritePosition) 将 spritePosition 对象从上一步得到的新的 Vector3 对象中减去，得到一个指向 spritePosition 的向量</span><br><span class="line">    // normalize()：将上一步得到的指向 spritePosition 的向量进行标准化，得到一个单位向量，即长度为 1 的向量</span><br><span class="line">    const rayDirection: THREE.Vector3 = cameraPosition.clone().sub(spritePosition).normalize();</span><br><span class="line"></span><br><span class="line">    // 设置射线的起点和方向</span><br><span class="line">    raycaster.set(rayOrigin, rayDirection);</span><br><span class="line"></span><br><span class="line">    // 检查是否存在与Sprite相交的物体</span><br><span class="line">    const intersects = raycaster.intersectObjects(buildingModel.children, true);</span><br><span class="line">    let isOccluded = false;</span><br><span class="line"></span><br><span class="line">    for (let j = 0; j &lt; intersects.length; j++) &#123;</span><br><span class="line">      const intersection = intersects[j];</span><br><span class="line">      const object = intersection.object;</span><br><span class="line">      if (object !== sprite &amp;&amp; object.name !== &quot;Plane&quot;) &#123;</span><br><span class="line">        // 当前相交对象不是Sprite，那Sprite被遮挡了</span><br><span class="line">        isOccluded = true;</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 如果Sprite被遮挡了，将其隐藏，因为不能直接用gasp操作sprite.visible属性，所以只能改变opacity属性，并且当执行完成时需要隐藏精灵，要不然射线还会选到</span><br><span class="line">    if (isOccluded) &#123;</span><br><span class="line">      gsap.to((sprite as THREE.Sprite).material, &#123;</span><br><span class="line">        opacity: 0,</span><br><span class="line">        ease: &quot;Power0.inOut&quot;,</span><br><span class="line">        duration: 0.5,</span><br><span class="line">        onComplete: () =&gt; &#123;</span><br><span class="line">          sprite.visible = false;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      gsap.to((sprite as THREE.Sprite).material, &#123;</span><br><span class="line">        opacity: 1,</span><br><span class="line">        ease: &quot;Power0.inOut&quot;,</span><br><span class="line">        duration: 0.5,</span><br><span class="line">        onComplete: () =&gt; &#123;</span><br><span class="line">          sprite.visible = true;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><img src="https://bu.dusays.com/2023/05/31/6476f155d3075.gif" width="100%"><h3 id="鼠标移到标点出弹出信息框"><a href="#鼠标移到标点出弹出信息框" class="headerlink" title="鼠标移到标点出弹出信息框"></a>鼠标移到标点出弹出信息框</h3><p>在上面的标点数据中已经存在了信息框数据，这边主要是操作<strong>document</strong>元素来创建或移除元素，然后监听鼠标的移动事件，配合<strong>Raycaster</strong>射线拾取来实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">// 检测鼠标与模型标点相交</span><br><span class="line">const detectionMouseIntersectPoint = (event: any): void =&gt; &#123;</span><br><span class="line">  if (!elementStatus.quitButton) return;</span><br><span class="line">  // 创建射线</span><br><span class="line">  const raycaster = new THREE.Raycaster();</span><br><span class="line">  // 将终点设置为固定的点</span><br><span class="line">  const rayEndpoint = new THREE.Vector3(0, 0, 0);</span><br><span class="line">  // 创建鼠标向量</span><br><span class="line">  const mouse = new THREE.Vector2();</span><br><span class="line">  // 计算鼠标点击位置的归一化设备坐标（NDC）</span><br><span class="line">  // NDC 坐标系的范围是 [-1, 1]，左下角为 (-1, -1)，右上角为 (1, 1)</span><br><span class="line">  if (!canvas.value) return;</span><br><span class="line">  mouse.x = (event.clientX / canvas.value.clientWidth) * 2 - 1;</span><br><span class="line">  mouse.y = -(event.clientY / canvas.value.clientHeight) * 2 + 1;</span><br><span class="line"></span><br><span class="line">  // 更新射线的起点和方向</span><br><span class="line">  raycaster.setFromCamera(mouse, camera);</span><br><span class="line">  // 将终点设置为距离相机100的位置</span><br><span class="line">  raycaster.ray.at(100, rayEndpoint);</span><br><span class="line"></span><br><span class="line">  // 计算射线与场景中的所有标点相交</span><br><span class="line">  const intersects = raycaster.intersectObjects(pointGroup.children, true);</span><br><span class="line"></span><br><span class="line">  // 如果存在相交点，则获取第一个相交点的坐标</span><br><span class="line">  if (intersects.length &gt; 0) &#123;</span><br><span class="line">    const object: NewObject3d = intersects[0].object;</span><br><span class="line">    // 获取标点在屏幕上的位置</span><br><span class="line">    const point = new THREE.Vector3().copy(object.position);</span><br><span class="line">    // 标点从三维空间投影到二维屏幕上</span><br><span class="line">    point.project(camera);</span><br><span class="line"></span><br><span class="line">    // 判断下如果标点是隐藏状态就不做任何操作</span><br><span class="line">    if(!object.visible) return</span><br><span class="line">    </span><br><span class="line">    addTipElementOrRemove(object, point, true);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    if (isClick) return;</span><br><span class="line">    addTipElementOrRemove(null, null, false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 添加或移除提示信息框</span><br><span class="line">const addTipElementOrRemove = (</span><br><span class="line">  object: NewObject3d | null, // 鼠标拾取到的对象</span><br><span class="line">  point: THREE.Vector3 | null, // 对象在屏幕上的位置</span><br><span class="line">  status: boolean // 状态 添加true  移除false</span><br><span class="line">): void =&gt; &#123;</span><br><span class="line">  // 获取文档中ID为tooltip的元素</span><br><span class="line">  const tooltipElement: HTMLElement | null = document.getElementById(&quot;tooltip&quot;);</span><br><span class="line">  // 状态是true并且元素已存在，就不再执行添加操作</span><br><span class="line">  if (status &amp;&amp; tooltipElement) return;</span><br><span class="line">  // 状态是true并且元素不存在执行添加操作</span><br><span class="line">  if (!tooltipElement &amp;&amp; status) &#123;</span><br><span class="line">    const tooltipDiv: HTMLElement = document.createElement(&quot;div&quot;);</span><br><span class="line">    tooltipDiv.innerHTML = (object &amp;&amp; object.text) || &quot;&quot;;</span><br><span class="line">    tooltipDiv.setAttribute(&quot;id&quot;, &quot;tooltip&quot;);</span><br><span class="line">    tooltipDiv.style.position = &quot;absolute&quot;;</span><br><span class="line">    tooltipDiv.style.left = `$&#123;</span><br><span class="line">      point &amp;&amp; ((point.x + 1) * canvas.value.clientWidth) / 2 + 10</span><br><span class="line">    &#125;px`;</span><br><span class="line">    tooltipDiv.style.top = `$&#123;</span><br><span class="line">      point &amp;&amp; ((-point.y + 1) * canvas.value.clientHeight) / 2 + 10</span><br><span class="line">    &#125;px`;</span><br><span class="line">    tooltipDiv.style.zIndex = &quot;100&quot;;</span><br><span class="line">    tooltipDiv.style.padding = &quot;4px 6px&quot;;</span><br><span class="line">    tooltipDiv.style.fontSize = &quot;12px&quot;;</span><br><span class="line">    tooltipDiv.style.backgroundColor = &quot;rgba(0, 0, 0, 0.7)&quot;;</span><br><span class="line">    tooltipDiv.style.border = &quot;1px solid #ffffff&quot;;</span><br><span class="line">    tooltipDiv.style.borderRadius = &quot;6px&quot;;</span><br><span class="line"></span><br><span class="line">    canvas.value.appendChild(tooltipDiv);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 状态为false并且元素存在执行移除操作</span><br><span class="line">    if (!status &amp;&amp; tooltipElement) &#123;</span><br><span class="line">      canvas.value.removeChild(tooltipElement);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 监听鼠标移动事件</span><br><span class="line">window.addEventListener(&quot;mousemove&quot;, detectionMouseIntersectPoint, false);</span><br></pre></td></tr></table></figure><img src="https://bu.dusays.com/2023/05/31/64771f8e6cd91.gif" width="100%"><h3 id="点击前往第二场景"><a href="#点击前往第二场景" class="headerlink" title="点击前往第二场景"></a>点击前往第二场景</h3><p>前往第二场景，主要操作是通过修改相机位置来实现，下面直接看代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">// 点击前往第二个场景</span><br><span class="line">const goOtherScene = (object: NewObject3d): void =&gt; &#123;</span><br><span class="line">  // 设置控制器属性</span><br><span class="line">  controls.enabled = false;</span><br><span class="line">  controls.enableZoom = false;</span><br><span class="line">  controls.autoRotate = false;</span><br><span class="line">  controls.minDistance = 0;</span><br><span class="line">  controls.maxDistance = Infinity;</span><br><span class="line"></span><br><span class="line">  // 遍历建筑模型，找到第二场景的位置</span><br><span class="line">  buildingModel.traverse((child) =&gt; &#123;</span><br><span class="line">    if (child.name === &quot;Area002&quot;) &#123;</span><br><span class="line">      const newPosition = new THREE.Vector3();</span><br><span class="line">      child.updateMatrixWorld();</span><br><span class="line"></span><br><span class="line">      newPosition.setFromMatrixPosition(child.matrixWorld);</span><br><span class="line"></span><br><span class="line">      // 设置controls的中心点</span><br><span class="line">      controls.target.set(newPosition.x, newPosition.y, newPosition.z);</span><br><span class="line"></span><br><span class="line">      elementStatus.quitButton = false;</span><br><span class="line">      </span><br><span class="line">      // 相机动画</span><br><span class="line">      gsap.to(camera.position, &#123;</span><br><span class="line">        x: newPosition.x - 4,</span><br><span class="line">        y: newPosition.y + 2,</span><br><span class="line">        z: newPosition.z,</span><br><span class="line">        ease: &quot;Power0.inOut&quot;,</span><br><span class="line">        duration: 1,</span><br><span class="line">        onUpdate: () =&gt; &#123;</span><br><span class="line">          // 设置相机的广角</span><br><span class="line">          if (cameraFov &lt; 50) &#123;</span><br><span class="line">            cameraFov += 1;</span><br><span class="line">            camera.fov = cameraFov;</span><br><span class="line">            camera.updateProjectionMatrix();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        onComplete: () =&gt; &#123;</span><br><span class="line">          controls.enabled = true;</span><br><span class="line">          elementStatus.quitButton = true;</span><br><span class="line">          buttonText.key = 2;</span><br><span class="line">          buttonText.value = &quot;OUT&quot;;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><img src="https://bu.dusays.com/2023/06/01/64784f8c11330.gif" width="100%"><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;transition name=&quot;loading&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;loading&quot; v-if=&quot;loading&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;process&quot; :style=&quot;&#123; width: `$&#123;process&#125;%` &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123; `$&#123;process&#125;%` &#125;&#125; Loading......&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line">  &lt;div id=&quot;canvas&quot; ref=&quot;canvas&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&quot;website-view&quot;</span><br><span class="line">    ref=&quot;scrollview&quot;</span><br><span class="line">    @mousewheel=&quot;mouseWheelHandle&quot;</span><br><span class="line">    @DOMMouseScroll=&quot;mouseWheelHandle&quot;</span><br><span class="line">    @scroll=&quot;handingScrolling&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;div class=&quot;view-page&quot;&gt;</span><br><span class="line">      &lt;transition name=&quot;left&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot; v-if=&quot;elementStatus.pageOnetitle&quot;&gt;</span><br><span class="line">          𝟥𝒟 𝒲𝑒𝒷𝒮𝒾𝓉𝑒&lt;br /&gt;</span><br><span class="line">          𝒹𝑒𝓂𝑜</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">      &lt;transition name=&quot;top&quot;&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          class=&quot;start&quot;</span><br><span class="line">          v-if=&quot;elementStatus.pageOneStart&quot;</span><br><span class="line">          @click=&quot;goNextPage&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          ↓</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;view-page&quot;&gt;</span><br><span class="line">      &lt;transition name=&quot;text-fade&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;text&quot; v-if=&quot;elementStatus.pageTwoText&quot;&gt;</span><br><span class="line">          𝑨 𝑻𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫 𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐, 𝑨 𝑻𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫 𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐, 𝑨 𝑻𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫</span><br><span class="line">          𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐, 𝑨 𝑻𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫 𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐, 𝑨 𝑻𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫 𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐, 𝑨</span><br><span class="line">          𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫 𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐, 𝑨 𝑻𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫 𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐, 𝑨 𝑻𝒉𝒓𝒆𝒆𝒋𝒔 3𝑫</span><br><span class="line">          𝑾𝒆𝒃𝑺𝒊𝒕𝒆 𝑫𝒆𝒎𝒐</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;view-page&quot;&gt;</span><br><span class="line">      &lt;transition name=&quot;left-image-fade&quot;&gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          v-if=&quot;elementStatus.pageThreeLeftImage&quot;</span><br><span class="line">          class=&quot;left-image&quot;</span><br><span class="line">          src=&quot;https://bu.dusays.com/2023/05/22/646b1f90b338e.jpeg&quot;</span><br><span class="line">          alt=&quot;image&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">      &lt;transition name=&quot;header-image-fade&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;header-pic&quot; v-if=&quot;elementStatus.pageThreeHeader&quot;&gt;</span><br><span class="line">          &lt;img</span><br><span class="line">            src=&quot;https://p3-passport.byteimg.com/img/user-avatar/e883ad00f4c080eae18ebdb3c35aa9d8~180x180.awebp&quot;</span><br><span class="line">            alt=&quot;header-pic&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">          &lt;p&gt;Caliis Lin&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">      &lt;transition name=&quot;right-text-fade&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;right-text&quot; v-if=&quot;elementStatus.pageThreeRightText&quot;&gt;</span><br><span class="line">          𝑨 𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆, 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆, 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆, 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆, 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆, 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆, 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆, 𝑨</span><br><span class="line">          𝒕𝒉𝒓𝒆𝒆 𝒋𝒔 𝒅𝒆𝒎𝒐𝒏𝒔𝒕𝒓𝒂𝒕𝒊𝒐𝒏 𝒑𝒓𝒐𝒋𝒆𝒄𝒕 𝒃𝒂𝒔𝒆𝒅 𝒐𝒏 𝑽𝒖𝒆 + 𝑻𝒚𝒑𝒆𝒔𝒄𝒓𝒊𝒑𝒕 + 𝑽𝒊𝒕𝒆</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;view-page&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;background&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;transition name=&quot;a-left-text-fade&quot;&gt;</span><br><span class="line">        &lt;a</span><br><span class="line">          v-if=&quot;elementStatus.pageFourALeftText&quot;</span><br><span class="line">          href=&quot;https://ljn1998codeing.love&quot;</span><br><span class="line">          target=&quot;_blank&quot;</span><br><span class="line">          class=&quot;my-blog&quot;</span><br><span class="line">          &gt;Visite my blog: https://ljn1998codeing.love&lt;/a</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">      &lt;transition name=&quot;a-right-text-fade&quot;&gt;</span><br><span class="line">        &lt;a</span><br><span class="line">          v-if=&quot;elementStatus.pageFourArightText&quot;</span><br><span class="line">          href=&quot;https://juejin.cn/user/4274499823866622&quot;</span><br><span class="line">          target=&quot;_blank&quot;</span><br><span class="line">          class=&quot;juejin&quot;</span><br><span class="line">          &gt;Visite juejin: https://juejin.cn/user/4274499823866622&lt;/a</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/transition&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;view-page&quot;&gt;</span><br><span class="line">      &lt;button class=&quot;explorar&quot; @click=&quot;explorarModel&quot;&gt;EXPLORAR&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button</span><br><span class="line">    class=&quot;quit&quot;</span><br><span class="line">    @click=&quot;quitExporarModel(buttonText.key)&quot;</span><br><span class="line">    v-if=&quot;elementStatus.quitButton&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &#123;&#123; buttonText.value &#125;&#125;</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">import * as THREE from &quot;three&quot;;</span><br><span class="line">import Stats from &quot;stats.js&quot;;</span><br><span class="line">import &#123; OrbitControls &#125; from &quot;three/examples/jsm/controls/OrbitControls&quot;;</span><br><span class="line">import &#123; GLTFLoader &#125; from &quot;three/examples/jsm/loaders/GLTFLoader&quot;;</span><br><span class="line">import &#123; DRACOLoader &#125; from &quot;three/examples/jsm/loaders/DRACOLoader&quot;;</span><br><span class="line">import &#123; nextTick, ref, reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; getAssetsFile &#125; from &quot;../utils&quot;;</span><br><span class="line">import gsap from &quot;gsap&quot;;</span><br><span class="line"></span><br><span class="line">type Info = &#123;</span><br><span class="line">  text?: string;</span><br><span class="line">  otherScene?: boolean;</span><br><span class="line">  ware?: boolean;</span><br><span class="line">  size?: number;</span><br><span class="line">  _s?: number;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">type PointType = &#123;</span><br><span class="line">  x: number;</span><br><span class="line">  y: number;</span><br><span class="line">  z: number;</span><br><span class="line">&#125; &amp; Info;</span><br><span class="line"></span><br><span class="line">type NewObject3d = THREE.Object3D&lt;THREE.Event&gt; &amp; Info;</span><br><span class="line"></span><br><span class="line">const canvas = ref&lt;any&gt;(null); // 画布</span><br><span class="line">const scrollview = ref&lt;any&gt;(null); // 滚动视图</span><br><span class="line">// 页面滚动数据</span><br><span class="line">const pageScrollingData = reactive(&#123;</span><br><span class="line">  scrollviewHeight: 0, // 滚动视图高度</span><br><span class="line">  pageHeight: 0, // 每页高度</span><br><span class="line">  totalPage: 5, // 总页数</span><br><span class="line">  currentPage: 1, // 当前页面</span><br><span class="line">  isScrolling: false, // 是否正在滚动</span><br><span class="line">  scrollPos: 0, // 滚轮滚动位置</span><br><span class="line">  ending: false, // 是否滚动到底部</span><br><span class="line">&#125;);</span><br><span class="line">let scene: THREE.Scene; // 场景</span><br><span class="line"></span><br><span class="line">let camera: THREE.PerspectiveCamera; // 相机</span><br><span class="line">let cameraPostion: THREE.Vector3; // 相机位置</span><br><span class="line">let cameraFov: number = 45; // 相机广角</span><br><span class="line"></span><br><span class="line">let renderer: THREE.WebGLRenderer; // 渲染器</span><br><span class="line">let controls: any; // 控制器</span><br><span class="line">let stats: any;</span><br><span class="line"></span><br><span class="line">let buildingModel: THREE.Group; // 建筑模型</span><br><span class="line">let originalModelPos = ref&lt;THREE.Vector3&gt;(new THREE.Vector3(0, 0, 0));</span><br><span class="line">const pointGroup: THREE.Group = new THREE.Group(); // 标点</span><br><span class="line">pointGroup.name = &quot;pointGroup&quot;;</span><br><span class="line">const angle = ref(0);</span><br><span class="line"></span><br><span class="line">const manager = new THREE.LoadingManager(); // 加载器管理器</span><br><span class="line">const textureLoader: THREE.TextureLoader = new THREE.TextureLoader(manager); // 纹理加载器</span><br><span class="line">let skyEnvMap: THREE.CubeTexture;</span><br><span class="line"></span><br><span class="line">const dracoLoader: DRACOLoader = new DRACOLoader();</span><br><span class="line">dracoLoader.setDecoderPath(&quot;draco/&quot;);</span><br><span class="line">dracoLoader.preload();</span><br><span class="line"></span><br><span class="line">const gltfLoader: GLTFLoader = new GLTFLoader(manager);</span><br><span class="line">gltfLoader.setDRACOLoader(dracoLoader);</span><br><span class="line"></span><br><span class="line">// 控制页面元素数据</span><br><span class="line">const elementStatus = reactive(&#123;</span><br><span class="line">  pageOnetitle: false,</span><br><span class="line">  pageOneStart: false,</span><br><span class="line">  pageTwoText: false,</span><br><span class="line">  pageThreeLeftImage: false,</span><br><span class="line">  pageThreeHeader: false,</span><br><span class="line">  pageThreeRightText: false,</span><br><span class="line">  pageFourALeftText: false,</span><br><span class="line">  pageFourArightText: false,</span><br><span class="line">  quitButton: false,</span><br><span class="line">&#125;);</span><br><span class="line">const buttonText = reactive(&#123;</span><br><span class="line">  key: 1,</span><br><span class="line">  value: &quot;QUIT&quot;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const process = ref&lt;number&gt;(0); // 加载进度</span><br><span class="line">const loading = ref&lt;boolean&gt;(true); // 加载中</span><br><span class="line"></span><br><span class="line">manager.onProgress = function (item, loaded, total) &#123;</span><br><span class="line">  let value = Math.round((loaded / total) * 100);</span><br><span class="line">  process.value = Math.ceil(value);</span><br><span class="line"></span><br><span class="line">  if (value === 100) &#123;</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      loading.value = false;</span><br><span class="line">      handingElementshow();</span><br><span class="line">    &#125;, 1500);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">nextTick(() =&gt; &#123;</span><br><span class="line">  initScrollViewData();</span><br><span class="line">  initScene();</span><br><span class="line">  initCamera(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  initRenderer(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  // initAxesHelper();</span><br><span class="line">  initControls();</span><br><span class="line">  // initStats();</span><br><span class="line">  render();</span><br><span class="line">  initLight();</span><br><span class="line">  loadBuildingModel();</span><br><span class="line">&#125;);</span><br><span class="line">// 初始化滚动视图数据</span><br><span class="line">const initScrollViewData = (): void =&gt; &#123;</span><br><span class="line">  // 每一页高度 = 浏览器窗口viewport的高度</span><br><span class="line">  pageScrollingData.pageHeight = window.innerHeight;</span><br><span class="line">  // 滚动视图总高度 = 每页高度 * 总页数</span><br><span class="line">  pageScrollingData.scrollviewHeight =</span><br><span class="line">    pageScrollingData.pageHeight * pageScrollingData.totalPage;</span><br><span class="line">&#125;;</span><br><span class="line">// 初始化场景</span><br><span class="line">const initScene = (): void =&gt; &#123;</span><br><span class="line">  scene = new THREE.Scene();</span><br><span class="line">  // 天空图图片集合，指定顺序pos-x, neg-x, pos-y, neg-y, pos-z, neg-z</span><br><span class="line">  const skyBg = [</span><br><span class="line">    getAssetsFile(&quot;sky/px.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nx.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/py.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/ny.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/pz.jpg&quot;),</span><br><span class="line">    getAssetsFile(&quot;sky/nz.jpg&quot;),</span><br><span class="line">  ];</span><br><span class="line">  const cubeLoader: THREE.CubeTextureLoader = new THREE.CubeTextureLoader(</span><br><span class="line">    manager</span><br><span class="line">  );</span><br><span class="line">  skyEnvMap = cubeLoader.load(skyBg);</span><br><span class="line">  // 设置场景背景</span><br><span class="line">  scene.background = skyEnvMap;</span><br><span class="line">&#125;;</span><br><span class="line">// 初始化相机</span><br><span class="line">const initCamera = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  camera = new THREE.PerspectiveCamera(cameraFov, width / height, 1, 1000);</span><br><span class="line"></span><br><span class="line">  cameraPostion = new THREE.Vector3(0, -13, 48);</span><br><span class="line">  camera.position.copy(cameraPostion);</span><br><span class="line"></span><br><span class="line">  scene.add(camera);</span><br><span class="line">&#125;;</span><br><span class="line">// 初始化渲染器</span><br><span class="line">const initRenderer = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  renderer = new THREE.WebGLRenderer(&#123;</span><br><span class="line">    antialias: true, // 抗锯齿</span><br><span class="line">  &#125;);</span><br><span class="line">  renderer.setSize(width, height);</span><br><span class="line">  // 指定输出编码格式，当设置renderer.outputEncoding为sRGBEncoding时，渲染器会将输出的颜色值转换为sRGB格式，以便正确呈现在屏幕上</span><br><span class="line">  renderer.outputEncoding = THREE.sRGBEncoding;</span><br><span class="line">  canvas.value.appendChild(renderer.domElement);</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line">&#125;;</span><br><span class="line">// 初始化轴辅助线</span><br><span class="line">const initAxesHelper = (): void =&gt; &#123;</span><br><span class="line">  const axesHelper: THREE.AxesHelper = new THREE.AxesHelper(50);</span><br><span class="line">  scene.add(axesHelper);</span><br><span class="line">&#125;;</span><br><span class="line">// 初始化灯光</span><br><span class="line">const initLight = (): void =&gt; &#123;</span><br><span class="line">  // 环境光</span><br><span class="line">  const ambientLight: THREE.AmbientLight = new THREE.AmbientLight(</span><br><span class="line">    new THREE.Color(&quot;rgb(255, 255, 255)&quot;)</span><br><span class="line">  );</span><br><span class="line">  // 平行光</span><br><span class="line">  const directionalLight: THREE.DirectionalLight = new THREE.DirectionalLight(</span><br><span class="line">    new THREE.Color(&quot;rgb(255, 99, 71)&quot;),</span><br><span class="line">    2 // 光照强度为2</span><br><span class="line">  );</span><br><span class="line">  directionalLight.position.set(-220, 30, 50);</span><br><span class="line"></span><br><span class="line">  scene.add(ambientLight, directionalLight);</span><br><span class="line">&#125;;</span><br><span class="line">// 加载建筑模型</span><br><span class="line">const loadBuildingModel = (): void =&gt; &#123;</span><br><span class="line">  gltfLoader.load(getAssetsFile(&quot;building/building.glb&quot;), (gltf) =&gt; &#123;</span><br><span class="line">    // 保存模型初始位置</span><br><span class="line">    originalModelPos.value = new THREE.Vector3(14, -40.8, 0);</span><br><span class="line">    // 设置模型位置</span><br><span class="line">    gltf.scene.position.copy(originalModelPos.value);</span><br><span class="line">    // 设置模型旋转角度</span><br><span class="line">    const currentRotation = gltf.scene.rotation.clone();</span><br><span class="line">    const newRotation = new THREE.Euler(</span><br><span class="line">      currentRotation.x,</span><br><span class="line">      currentRotation.y - (131 * Math.PI) / 180,</span><br><span class="line">      currentRotation.z,</span><br><span class="line">      currentRotation.order</span><br><span class="line">    );</span><br><span class="line">    gltf.scene.rotation.copy(newRotation);</span><br><span class="line"></span><br><span class="line">    // 循环模型内Mesh并找到窗户所属的Mesh，设置该Mesh中材质的环境贴图以及环境贴图的强度</span><br><span class="line">    const ObjectGroup = gltf.scene.children;</span><br><span class="line">    for (let i = 0; i &lt; ObjectGroup.length; i++) &#123;</span><br><span class="line">      if (</span><br><span class="line">        ObjectGroup[i] instanceof THREE.Group &amp;&amp;</span><br><span class="line">        ObjectGroup[i].name === &quot;AB1_OBJ_02&quot;</span><br><span class="line">      ) &#123;</span><br><span class="line">        ObjectGroup[i].children &amp;&amp;</span><br><span class="line">          ObjectGroup[i].children.forEach((item) =&gt; &#123;</span><br><span class="line">            if (item instanceof THREE.Mesh &amp;&amp; item.name === &quot;AB1_OBJ_02_1&quot;) &#123;</span><br><span class="line">              item.material.envMap = skyEnvMap;</span><br><span class="line">              item.material.envMapIntensity = 0.5;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 保存模型数据，后面设置动画会直接使用到</span><br><span class="line">    buildingModel = gltf.scene;</span><br><span class="line"></span><br><span class="line">    scene.add(buildingModel);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">// 初始化控制器</span><br><span class="line">const initControls = (): void =&gt; &#123;</span><br><span class="line">  controls = new OrbitControls(camera, renderer.domElement);</span><br><span class="line"></span><br><span class="line">  // 控制器是否相应</span><br><span class="line">  controls.enabled = false;</span><br><span class="line">  // 使动画循环使用时阻尼或自转 意思是否有惯性</span><br><span class="line">  controls.enableDamping = true;</span><br><span class="line">  // 是否可以缩放</span><br><span class="line">  controls.enableZoom = true;</span><br><span class="line">  // 是否自动旋转</span><br><span class="line">  controls.autoRotate = false;</span><br><span class="line">  // 自转速度</span><br><span class="line">  controls.autoRotateSpeed = 0.1;</span><br><span class="line">  // 是否开启右键拖拽</span><br><span class="line">  controls.enablePan = true;</span><br><span class="line">  // 摄像机缩放的速度</span><br><span class="line">  controls.zoomSpeed = 1;</span><br><span class="line">&#125;;</span><br><span class="line">// 初始化状态监控</span><br><span class="line">const initStats = (): void =&gt; &#123;</span><br><span class="line">  stats = new Stats();</span><br><span class="line">  canvas.value.appendChild(stats.dom);</span><br><span class="line">&#125;;</span><br><span class="line">// 渲染</span><br><span class="line">const render = (): void =&gt; &#123;</span><br><span class="line">  stats &amp;&amp; stats.update();</span><br><span class="line"></span><br><span class="line">  controls.update();</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line"></span><br><span class="line">  // 涟漪动画</span><br><span class="line">  const pointGroup = scene.children.find((item) =&gt; item.name === &quot;pointGroup&quot;); // 查找标点组合</span><br><span class="line">  if (pointGroup) &#123;</span><br><span class="line">    // 组合存在</span><br><span class="line">    const wave: any =</span><br><span class="line">      pointGroup.children.length &amp;&amp;</span><br><span class="line">      pointGroup.children.find((sprite) =&gt; sprite.name === &quot;wave&quot;); // 找到涟漪精灵</span><br><span class="line">    if (wave) &#123;</span><br><span class="line">      // 修改精灵的大小和材质的透明度达到涟漪的效果</span><br><span class="line">      wave._s += 0.01;</span><br><span class="line">      wave.scale.set(</span><br><span class="line">        wave.size * wave._s,</span><br><span class="line">        wave.size * wave._s,</span><br><span class="line">        wave.size * wave._s</span><br><span class="line">      );</span><br><span class="line">      if (wave._s &lt;= 1.5) &#123;</span><br><span class="line">        //mesh._s=1，透明度=0 mesh._s=1.5，透明度=1</span><br><span class="line">        wave.material.opacity = (wave._s - 1) * 2;</span><br><span class="line">      &#125; else if (wave._s &gt; 1.5 &amp;&amp; wave._s &lt;= 2) &#123;</span><br><span class="line">        //mesh._s=1.5，透明度=1 mesh._s=2，透明度=0</span><br><span class="line">        wave.material.opacity = 1 - (wave._s - 1.5) * 2;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        wave._s = 1.0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if (elementStatus.quitButton) &#123;</span><br><span class="line">    spriteVisible();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  requestAnimationFrame(render);</span><br><span class="line">&#125;;</span><br><span class="line">// 页面移动方向处理</span><br><span class="line">const pageTurning = (direction: boolean): void =&gt; &#123;</span><br><span class="line">  if (direction) &#123;</span><br><span class="line">    // 往上滚动时，判断当前页码 + 1 是否 &lt;= 总页码 ?？ 页码 + 1，执行页面滚动操作，</span><br><span class="line">    if (pageScrollingData.currentPage + 1 &lt;= pageScrollingData.totalPage) &#123;</span><br><span class="line">      pageScrollingData.currentPage += 1;</span><br><span class="line">      pageMove(pageScrollingData.currentPage);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 同样往下滚动时，判断当前页码 - 1 是否 &gt; 0 ?? 页码 - 1，执行页面滚动操作</span><br><span class="line">    if (pageScrollingData.currentPage - 1 &gt; 0) &#123;</span><br><span class="line">      pageScrollingData.currentPage -= 1;</span><br><span class="line">      pageMove(pageScrollingData.currentPage);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 页面滚动</span><br><span class="line">const pageMove = (pageNo: number): void =&gt; &#123;</span><br><span class="line">  // 设置滚动状态</span><br><span class="line">  pageScrollingData.isScrolling = true;</span><br><span class="line">  // 计算滚动高度</span><br><span class="line">  const scrollHeight = -(pageNo - 1) * pageScrollingData.pageHeight + &quot;px&quot;;</span><br><span class="line">  // 设置css样式</span><br><span class="line">  scrollview.value.style.transform = `translateY($&#123;scrollHeight&#125;)`;</span><br><span class="line">  // 重新设置下当前页码</span><br><span class="line">  pageScrollingData.currentPage = pageNo;</span><br><span class="line">  handingScrolling();</span><br><span class="line">  // 定时器做一个防抖，避免一秒内多次触发</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    pageScrollingData.isScrolling = false;</span><br><span class="line">  &#125;, 1500);</span><br><span class="line">&#125;;</span><br><span class="line">// 鼠标滚轮滚动控制</span><br><span class="line">const mouseWheelHandle = (event: any): void | boolean =&gt; &#123;</span><br><span class="line">  const evt = event || window.event;</span><br><span class="line">  // 阻止默认事件</span><br><span class="line">  if (evt.stopPropagation) &#123;</span><br><span class="line">    evt.stopPropagation();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    evt.returnValue = false;</span><br><span class="line">  &#125;</span><br><span class="line">  // 当前正在滚动中则不做任何操作</span><br><span class="line">  if (pageScrollingData.isScrolling) &#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">  const e = event.originalEvent || event;</span><br><span class="line">  // 记录滚动位置</span><br><span class="line">  pageScrollingData.scrollPos = e.deltaY || e.detail;</span><br><span class="line">  if (pageScrollingData.scrollPos &gt; 0) &#123;</span><br><span class="line">    // 当鼠标滚轮向上滚动时</span><br><span class="line">    pageTurning(true);</span><br><span class="line">  &#125; else if (pageScrollingData.scrollPos &lt; 0) &#123;</span><br><span class="line">    // 当鼠标滚轮向下滚动时</span><br><span class="line">    pageTurning(false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 点击下一页</span><br><span class="line">const goNextPage = (): void =&gt; &#123;</span><br><span class="line">  pageScrollingData.currentPage += 1;</span><br><span class="line">  pageMove(pageScrollingData.currentPage);</span><br><span class="line">&#125;;</span><br><span class="line">// 滚动时相机和模型动画</span><br><span class="line">const handingScrolling = (): void =&gt; &#123;</span><br><span class="line">  // 判断是否滚动到最后一页，因为第3、4页模型的位置是不需要改变，也就是没有相对应地模型动画，所以当前页面是最后一页时，那么只能玩上滚动，并且需要执行第二页的模型动画</span><br><span class="line">  const pos = pageScrollingData.ending</span><br><span class="line">    ? 2 - 1</span><br><span class="line">    : pageScrollingData.currentPage - 1;</span><br><span class="line">  // 计算新的模型位置</span><br><span class="line">  const newModelPos: THREE.Vector3 =</span><br><span class="line">    originalModelPos.value &amp;&amp;</span><br><span class="line">    originalModelPos.value</span><br><span class="line">      .clone()</span><br><span class="line">      .add(new THREE.Vector3(pos * 10, pos * 8.6, pos * 13));</span><br><span class="line">  // 当前为第一页时，模型位置设置为初始值</span><br><span class="line">  if (pageScrollingData.currentPage === 1) &#123;</span><br><span class="line">    newModelPos.copy(originalModelPos.value);</span><br><span class="line">  &#125;</span><br><span class="line">  if (pageScrollingData.currentPage &lt;= 2 || pageScrollingData.ending) &#123;</span><br><span class="line">    // 当前页码 &lt;= 第2页时 或者 页面滚动到最底部，执行该动画</span><br><span class="line">    gsap.to(camera.position, &#123;</span><br><span class="line">      x: pos * 18,</span><br><span class="line">      y: cameraPostion.y + pos * 14,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    gsap.to(buildingModel.position, &#123;</span><br><span class="line">      x: newModelPos.x,</span><br><span class="line">      y: newModelPos.y,</span><br><span class="line">      z: newModelPos.z,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    pageScrollingData.ending = false;</span><br><span class="line">  &#125; else if (pageScrollingData.currentPage === 5) &#123;</span><br><span class="line">    // 当前页码 === 第5页时，执行该动画</span><br><span class="line">    gsap.to(camera.position, &#123;</span><br><span class="line">      x: -24,</span><br><span class="line">      y: -30,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    gsap.to(buildingModel.position, &#123;</span><br><span class="line">      x: -6,</span><br><span class="line">      y: -59,</span><br><span class="line">      z: 18,</span><br><span class="line">      ease: &quot;Power2.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    pageScrollingData.ending = true;</span><br><span class="line">  &#125;</span><br><span class="line">  // 控制页面元素显示隐藏</span><br><span class="line">  handingElementshow();</span><br><span class="line">&#125;;</span><br><span class="line">// 处理元素出现或隐藏</span><br><span class="line">const handingElementshow = (): void =&gt; &#123;</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    switch (pageScrollingData.currentPage) &#123;</span><br><span class="line">      case 1:</span><br><span class="line">        elementStatus.pageOnetitle = true;</span><br><span class="line">        elementStatus.pageOneStart = true;</span><br><span class="line">        elementStatus.pageTwoText = false;</span><br><span class="line">        break;</span><br><span class="line">      case 2:</span><br><span class="line">        elementStatus.pageOnetitle = false;</span><br><span class="line">        elementStatus.pageOneStart = false;</span><br><span class="line">        elementStatus.pageTwoText = true;</span><br><span class="line">        elementStatus.pageThreeLeftImage = false;</span><br><span class="line">        elementStatus.pageThreeHeader = false;</span><br><span class="line">        elementStatus.pageThreeRightText = false;</span><br><span class="line">        break;</span><br><span class="line">      case 3:</span><br><span class="line">        elementStatus.pageTwoText = false;</span><br><span class="line">        elementStatus.pageThreeLeftImage = true;</span><br><span class="line">        elementStatus.pageThreeHeader = true;</span><br><span class="line">        elementStatus.pageThreeRightText = true;</span><br><span class="line">        elementStatus.pageFourALeftText = false;</span><br><span class="line">        elementStatus.pageFourArightText = false;</span><br><span class="line">        break;</span><br><span class="line">      case 4:</span><br><span class="line">        elementStatus.pageThreeLeftImage = false;</span><br><span class="line">        elementStatus.pageThreeHeader = false;</span><br><span class="line">        elementStatus.pageThreeRightText = false;</span><br><span class="line">        elementStatus.pageFourALeftText = true;</span><br><span class="line">        elementStatus.pageFourArightText = true;</span><br><span class="line">        break;</span><br><span class="line">      case 5:</span><br><span class="line">        elementStatus.pageFourALeftText = false;</span><br><span class="line">        elementStatus.pageFourArightText = false;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, 1000);</span><br><span class="line">&#125;;</span><br><span class="line">// 探索模型</span><br><span class="line">const explorarModel = (): void =&gt; &#123;</span><br><span class="line">  // 设置三维容器层级</span><br><span class="line">  canvas.value.style.zIndex = 1;</span><br><span class="line"></span><br><span class="line">  // 相机动画改变相机位置</span><br><span class="line">  const cameraGasp: gsap.core.Tween = gsap.to(camera.position, &#123;</span><br><span class="line">    x: -6,</span><br><span class="line">    y: 6,</span><br><span class="line">    z: 80,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 2,</span><br><span class="line">    onUpdate: () =&gt; &#123;</span><br><span class="line">      // 因为在第二场景设置了相机的fov属性，所以这里需要将fov属性恢复到原来的状态</span><br><span class="line">      if (cameraFov &lt; 50 &amp;&amp; buttonText.key === 2) &#123;</span><br><span class="line">        cameraFov -= 1;</span><br><span class="line">        camera.fov = cameraFov;</span><br><span class="line">        camera.updateProjectionMatrix();</span><br><span class="line"></span><br><span class="line">        elementStatus.quitButton = true;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onComplete: () =&gt; &#123;</span><br><span class="line">      if (buttonText.key === 2) &#123;</span><br><span class="line">        buttonText.key = 1;</span><br><span class="line">        buttonText.value = &quot;QUIT&quot;;</span><br><span class="line">        elementStatus.quitButton = true;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  // 模型动画改变模型位置</span><br><span class="line">  const buildingGasp: gsap.core.Tween = gsap.to(buildingModel.position, &#123;</span><br><span class="line">    x: 0,</span><br><span class="line">    y: -22,</span><br><span class="line">    z: 0,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 2,</span><br><span class="line">  &#125;);</span><br><span class="line">  // 控制器中心点</span><br><span class="line">  const controlsGasp: gsap.core.Tween = gsap.to(controls.target, &#123;</span><br><span class="line">    x: 0,</span><br><span class="line">    y: 0,</span><br><span class="line">    z: 0,</span><br><span class="line">    ease: &quot;Power0.inOut&quot;,</span><br><span class="line">    duration: 1,</span><br><span class="line">  &#125;);</span><br><span class="line">  // 等待执行</span><br><span class="line">  const delayedCall: Promise&lt;unknown&gt; = new Promise((resolve) =&gt; &#123;</span><br><span class="line">    gsap.delayedCall(1, resolve);</span><br><span class="line">  &#125;);</span><br><span class="line">  // 当所有动画执行完成时的操作</span><br><span class="line">  Promise.all([cameraGasp, buildingGasp, controlsGasp, delayedCall])</span><br><span class="line">    .then(() =&gt; &#123;</span><br><span class="line">      elementStatus.quitButton = true; // 展示退出探索按钮</span><br><span class="line">      controls.enabled = true; // 开启控制器交互</span><br><span class="line">      controls.maxPolarAngle = Math.PI / 2 - 0.01; // 设置垂直旋转的角度的上限</span><br><span class="line">      controls.autoRotate = true; // 开启自动旋转</span><br><span class="line">      controls.minDistance = 40; // 设置相机向内移动上限</span><br><span class="line">      controls.maxDistance = 86; // 设置相机向外移动上限</span><br><span class="line">      addPointWithModel();</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      console.log(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">// 给模型添加标点</span><br><span class="line">const addPointWithModel = (): void =&gt; &#123;</span><br><span class="line">  // 标点数据</span><br><span class="line">  const pointArr: PointType[] = [</span><br><span class="line">    &#123;</span><br><span class="line">      x: -16.979381448617573,</span><br><span class="line">      y: -19.167911412787436,</span><br><span class="line">      z: 1.4417293738365617,</span><br><span class="line">      text: &quot;aaaaa&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      x: 4.368890112320235,</span><br><span class="line">      y: -12.020210823358955,</span><br><span class="line">      z: 10.590562296036955,</span><br><span class="line">      text: &quot;bbbbb&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      x: -4.655517564465063,</span><br><span class="line">      y: 12.146541899849993,</span><br><span class="line">      z: 11.879293977258593,</span><br><span class="line">      ware: true, // 是否展示涟漪动画</span><br><span class="line">      otherScene: true, // 是否可以前往下一个场景</span><br><span class="line">      text: &quot;ccccc&quot;, // 弹框展示的文字</span><br><span class="line">    &#125;,</span><br><span class="line">  ];</span><br><span class="line">  // 贴图加载</span><br><span class="line">  const circleTexture: THREE.Texture = textureLoader.load(</span><br><span class="line">    getAssetsFile(&quot;building/sprite.png&quot;)</span><br><span class="line">  );</span><br><span class="line">  const waveTexture: THREE.Texture = textureLoader.load(</span><br><span class="line">    getAssetsFile(&quot;wave.png&quot;)</span><br><span class="line">  );</span><br><span class="line">  // 遍历标点数据创建精灵标点</span><br><span class="line">  pointArr.forEach((item: PointType) =&gt; &#123;</span><br><span class="line">    const spriteMaterial: THREE.SpriteMaterial = new THREE.SpriteMaterial(&#123;</span><br><span class="line">      map: circleTexture,</span><br><span class="line">    &#125;);</span><br><span class="line">    const sprite: THREE.Sprite &amp; Info = new THREE.Sprite(spriteMaterial);</span><br><span class="line">    sprite.name = &quot;point&quot;;</span><br><span class="line">    sprite.text = item.text;</span><br><span class="line">    sprite.otherScene = item.otherScene;</span><br><span class="line">    sprite.position.set(item.x, item.y + 0.2, item.z + 2);</span><br><span class="line">    sprite.scale.set(1.4, 1.4, 1);</span><br><span class="line"></span><br><span class="line">    // 需要涟漪动画则要创建一个涟漪精灵</span><br><span class="line">    if (item.ware) &#123;</span><br><span class="line">      const waveMaterial: THREE.SpriteMaterial = new THREE.SpriteMaterial(&#123;</span><br><span class="line">        map: waveTexture,</span><br><span class="line">        color: new THREE.Color(&quot;rgb(255, 255, 255)&quot;),</span><br><span class="line">        transparent: true,</span><br><span class="line">        opacity: 1.0,</span><br><span class="line">        side: THREE.DoubleSide,</span><br><span class="line">        depthWrite: false,</span><br><span class="line">      &#125;);</span><br><span class="line">      let waveSprite: THREE.Sprite &amp; Info = new THREE.Sprite(waveMaterial);</span><br><span class="line">      waveSprite.name = &quot;wave&quot;;</span><br><span class="line">      waveSprite.text = item.text;</span><br><span class="line">      waveSprite.otherScene = item.otherScene;</span><br><span class="line">      waveSprite.size = 8 * 0.3;</span><br><span class="line">      waveSprite._s = Math.random() * 1.0 + 1.0;</span><br><span class="line"></span><br><span class="line">      waveSprite.position.set(item.x, item.y + 0.2, item.z + 2);</span><br><span class="line"></span><br><span class="line">      pointGroup.add(waveSprite);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pointGroup.add(sprite);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  scene.add(pointGroup);</span><br><span class="line">&#125;;</span><br><span class="line">// 退出探索模型</span><br><span class="line">const quitExporarModel = (key: number): void =&gt; &#123;</span><br><span class="line">  if (key === 1) &#123;</span><br><span class="line">    // 探索模型处于第一个场景时</span><br><span class="line">    // 移除标点</span><br><span class="line">    scene.remove(pointGroup);</span><br><span class="line">    // 设置三维容器层级</span><br><span class="line">    canvas.value.style.zIndex = -1;</span><br><span class="line">    // 隐藏退出按钮</span><br><span class="line">    elementStatus.quitButton = false;</span><br><span class="line">    // 把控制器一些参数设置回初始值</span><br><span class="line">    controls.maxPolarAngle = Math.PI;</span><br><span class="line">    controls.enabled = false;</span><br><span class="line">    controls.autoRotate = false;</span><br><span class="line">    controls.minDistance = 0;</span><br><span class="line">    controls.maxDistance = Infinity;</span><br><span class="line">    // 执行动画操作</span><br><span class="line">    gsap.to(camera.position, &#123;</span><br><span class="line">      x: -24,</span><br><span class="line">      y: -30,</span><br><span class="line">      z: 48,</span><br><span class="line">      ease: &quot;Power0.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    gsap.to(buildingModel.position, &#123;</span><br><span class="line">      x: -6,</span><br><span class="line">      y: -59,</span><br><span class="line">      z: 18,</span><br><span class="line">      ease: &quot;Power0.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">    gsap.to(controls.target, &#123;</span><br><span class="line">      x: 0,</span><br><span class="line">      y: 0,</span><br><span class="line">      z: 0,</span><br><span class="line">      ease: &quot;Power0.inOut&quot;,</span><br><span class="line">      duration: 1,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else if (key === 2) &#123;</span><br><span class="line">    // 探索模型处于第二个场景时</span><br><span class="line">    elementStatus.quitButton = false;</span><br><span class="line">    explorarModel();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 检测鼠标与模型标点相交</span><br><span class="line">const detectionMouseIntersectPoint = (</span><br><span class="line">  event: any, // 鼠标事件参数</span><br><span class="line">  isClick?: boolean // 是否点击，用于判断是mousemove还是mouseclick</span><br><span class="line">): void =&gt; &#123;</span><br><span class="line">  if (!elementStatus.quitButton) return;</span><br><span class="line">  // 创建射线</span><br><span class="line">  const raycaster = new THREE.Raycaster();</span><br><span class="line">  // 将终点设置为固定的点</span><br><span class="line">  const rayEndpoint = new THREE.Vector3(0, 0, 0);</span><br><span class="line">  // 创建鼠标向量</span><br><span class="line">  const mouse = new THREE.Vector2();</span><br><span class="line">  // 计算鼠标点击位置的归一化设备坐标（NDC）</span><br><span class="line">  // NDC 坐标系的范围是 [-1, 1]，左下角为 (-1, -1)，右上角为 (1, 1)</span><br><span class="line">  if (!canvas.value) return;</span><br><span class="line">  mouse.x = (event.clientX / canvas.value.clientWidth) * 2 - 1;</span><br><span class="line">  mouse.y = -(event.clientY / canvas.value.clientHeight) * 2 + 1;</span><br><span class="line"></span><br><span class="line">  // 更新射线的起点和方向</span><br><span class="line">  raycaster.setFromCamera(mouse, camera);</span><br><span class="line">  // 将终点设置为距离相机100的位置</span><br><span class="line">  raycaster.ray.at(100, rayEndpoint);</span><br><span class="line"></span><br><span class="line">  // 计算射线与场景中的所有标点相交</span><br><span class="line">  const intersects = raycaster.intersectObjects(pointGroup.children, true);</span><br><span class="line"></span><br><span class="line">  // 如果存在相交点，则获取第一个相交点的坐标</span><br><span class="line">  if (intersects.length &gt; 0) &#123;</span><br><span class="line">    const object: NewObject3d = intersects[0].object;</span><br><span class="line">    // 获取标点在屏幕上的位置</span><br><span class="line">    const point = new THREE.Vector3().copy(object.position);</span><br><span class="line">    // 标点从三维空间投影到二维屏幕上</span><br><span class="line">    point.project(camera);</span><br><span class="line">    // 判断下如果标点是隐藏状态就不做任何操作</span><br><span class="line">    if (!object.visible) return;</span><br><span class="line"></span><br><span class="line">    // isClick判断是否是点击事件，buttonText.key判断当前在第一场景还是第二场景</span><br><span class="line">    if (isClick &amp;&amp; buttonText.key !== 2) &#123;</span><br><span class="line">      // 监听点击事件所执行逻辑</span><br><span class="line">      if (!object.otherScene) return;</span><br><span class="line">      goOtherScene(object);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      if (buttonText.key !== 2) &#123;</span><br><span class="line">        addTipElementOrRemove(object, point, true);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    if (isClick) return;</span><br><span class="line">    addTipElementOrRemove(null, null, false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 添加或移除提示信息框</span><br><span class="line">const addTipElementOrRemove = (</span><br><span class="line">  object: NewObject3d | null, // 鼠标拾取到的对象</span><br><span class="line">  point: THREE.Vector3 | null, // 对象在屏幕上的位置</span><br><span class="line">  status: boolean // 状态 添加true  移除false</span><br><span class="line">): void =&gt; &#123;</span><br><span class="line">  // 获取文档中ID为tooltip的元素</span><br><span class="line">  const tooltipElement: HTMLElement | null = document.getElementById(&quot;tooltip&quot;);</span><br><span class="line">  // 状态是true并且元素已存在，就不再执行添加操作</span><br><span class="line">  if (status &amp;&amp; tooltipElement) return;</span><br><span class="line">  // 状态是true并且元素不存在执行添加操作</span><br><span class="line">  if (!tooltipElement &amp;&amp; status) &#123;</span><br><span class="line">    const tooltipDiv: HTMLElement = document.createElement(&quot;div&quot;);</span><br><span class="line">    tooltipDiv.innerHTML = (object &amp;&amp; object.text) || &quot;&quot;;</span><br><span class="line">    tooltipDiv.setAttribute(&quot;id&quot;, &quot;tooltip&quot;);</span><br><span class="line">    tooltipDiv.style.position = &quot;absolute&quot;;</span><br><span class="line">    tooltipDiv.style.left = `$&#123;</span><br><span class="line">      point &amp;&amp; ((point.x + 1) * canvas.value.clientWidth) / 2 + 10</span><br><span class="line">    &#125;px`;</span><br><span class="line">    tooltipDiv.style.top = `$&#123;</span><br><span class="line">      point &amp;&amp; ((-point.y + 1) * canvas.value.clientHeight) / 2 + 10</span><br><span class="line">    &#125;px`;</span><br><span class="line">    tooltipDiv.style.zIndex = &quot;100&quot;;</span><br><span class="line">    tooltipDiv.style.padding = &quot;4px 6px&quot;;</span><br><span class="line">    tooltipDiv.style.fontSize = &quot;12px&quot;;</span><br><span class="line">    tooltipDiv.style.backgroundColor = &quot;rgba(0, 0, 0, 0.7)&quot;;</span><br><span class="line">    tooltipDiv.style.border = &quot;1px solid #ffffff&quot;;</span><br><span class="line">    tooltipDiv.style.borderRadius = &quot;6px&quot;;</span><br><span class="line"></span><br><span class="line">    canvas.value.appendChild(tooltipDiv);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 状态为false并且元素存在执行移除操作</span><br><span class="line">    if (!status &amp;&amp; tooltipElement) &#123;</span><br><span class="line">      canvas.value.removeChild(tooltipElement);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 判断模型是否遮挡精灵</span><br><span class="line">const spriteVisible = (): void =&gt; &#123;</span><br><span class="line">  // 创建一个Raycaster对象</span><br><span class="line">  const raycaster = new THREE.Raycaster();</span><br><span class="line">  raycaster.camera = camera;</span><br><span class="line"></span><br><span class="line">  // 精灵标点集合</span><br><span class="line">  const spriteArr: THREE.Object3D&lt;THREE.Event&gt;[] = [];</span><br><span class="line">  pointGroup.children.forEach((sprite) =&gt; &#123;</span><br><span class="line">    spriteArr.push(sprite);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  for (let i = 0; i &lt; spriteArr.length; i++) &#123;</span><br><span class="line">    const sprite: THREE.Object3D&lt;THREE.Event&gt; = spriteArr[i];</span><br><span class="line"></span><br><span class="line">    // 将Sprite的位置作为射线的起点</span><br><span class="line">    // 创建一个新的 Vector3 对象，然后使用 setFromMatrixPosition 方法将该对象设置为 Sprite 对象在世界坐标系下的位置</span><br><span class="line">    // 最终得到一个 Vector3 对象，表示了 Sprite 对象在世界坐标系下的位置。这个位置可以用于计算精灵与相机的相对位置，或者用于计算精灵的旋转方向</span><br><span class="line">    const spritePosition: THREE.Vector3 =</span><br><span class="line">      new THREE.Vector3().setFromMatrixPosition(sprite.matrixWorld);</span><br><span class="line">    const rayOrigin: THREE.Vector3 = spritePosition.clone();</span><br><span class="line"></span><br><span class="line">    // 将摄像机位置作为射线的终点</span><br><span class="line">    const cameraPosition: THREE.Vector3 =</span><br><span class="line">      new THREE.Vector3().setFromMatrixPosition(camera.matrixWorld);</span><br><span class="line">    // 计算spritePosition指向cameraPosition的单位向量代码</span><br><span class="line">    // ameraPosition.clone() 将 cameraPosition 对象进行克隆，得到一个新的 Vector3 对象。这么做是为了避免修改原始的 cameraPosition 对象</span><br><span class="line">    // sub(spritePosition) 将 spritePosition 对象从上一步得到的新的 Vector3 对象中减去，得到一个指向 spritePosition 的向量</span><br><span class="line">    // normalize()：将上一步得到的指向 spritePosition 的向量进行标准化，得到一个单位向量，即长度为 1 的向量</span><br><span class="line">    const rayDirection: THREE.Vector3 = cameraPosition</span><br><span class="line">      .clone()</span><br><span class="line">      .sub(spritePosition)</span><br><span class="line">      .normalize();</span><br><span class="line"></span><br><span class="line">    // 设置射线的起点和方向</span><br><span class="line">    raycaster.set(rayOrigin, rayDirection);</span><br><span class="line"></span><br><span class="line">    // 检查是否存在与Sprite相交的物体</span><br><span class="line">    const intersects = raycaster.intersectObjects(buildingModel.children, true);</span><br><span class="line">    let isOccluded = false;</span><br><span class="line"></span><br><span class="line">    for (let j = 0; j &lt; intersects.length; j++) &#123;</span><br><span class="line">      const intersection = intersects[j];</span><br><span class="line">      const object = intersection.object;</span><br><span class="line">      if (object !== sprite &amp;&amp; object.name !== &quot;Plane&quot;) &#123;</span><br><span class="line">        // 当前相交对象不是Sprite，那Sprite被遮挡了</span><br><span class="line">        isOccluded = true;</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 如果Sprite被遮挡了，将其隐藏，因为不能直接用gasp操作sprite.visible属性，所以只能改变opacity属性，并且当执行完成时需要隐藏精灵，要不然射线还会选到</span><br><span class="line">    if (isOccluded) &#123;</span><br><span class="line">      gsap.to((sprite as THREE.Sprite).material, &#123;</span><br><span class="line">        opacity: 0,</span><br><span class="line">        ease: &quot;Power0.inOut&quot;,</span><br><span class="line">        duration: 0.5,</span><br><span class="line">        onComplete: () =&gt; &#123;</span><br><span class="line">          sprite.visible = false;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      gsap.to((sprite as THREE.Sprite).material, &#123;</span><br><span class="line">        opacity: 1,</span><br><span class="line">        ease: &quot;Power0.inOut&quot;,</span><br><span class="line">        duration: 0.5,</span><br><span class="line">        onComplete: () =&gt; &#123;</span><br><span class="line">          sprite.visible = true;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 点击前往第二个场景</span><br><span class="line">const goOtherScene = (object: NewObject3d): void =&gt; &#123;</span><br><span class="line">  // 设置控制器属性</span><br><span class="line">  controls.enabled = false;</span><br><span class="line">  controls.enableZoom = false;</span><br><span class="line">  controls.autoRotate = false;</span><br><span class="line">  controls.minDistance = 0;</span><br><span class="line">  controls.maxDistance = Infinity;</span><br><span class="line"></span><br><span class="line">  // 遍历建筑模型，找到第二场景的位置</span><br><span class="line">  buildingModel.traverse((child) =&gt; &#123;</span><br><span class="line">    if (child.name === &quot;Area002&quot;) &#123;</span><br><span class="line">      const newPosition = new THREE.Vector3();</span><br><span class="line">      child.updateMatrixWorld();</span><br><span class="line"></span><br><span class="line">      newPosition.setFromMatrixPosition(child.matrixWorld);</span><br><span class="line"></span><br><span class="line">      // 设置controls的中心点</span><br><span class="line">      controls.target.set(newPosition.x, newPosition.y, newPosition.z);</span><br><span class="line"></span><br><span class="line">      elementStatus.quitButton = false;</span><br><span class="line"></span><br><span class="line">      // 相机动画</span><br><span class="line">      gsap.to(camera.position, &#123;</span><br><span class="line">        x: newPosition.x - 4,</span><br><span class="line">        y: newPosition.y + 2,</span><br><span class="line">        z: newPosition.z,</span><br><span class="line">        ease: &quot;Power0.inOut&quot;,</span><br><span class="line">        duration: 1,</span><br><span class="line">        onUpdate: () =&gt; &#123;</span><br><span class="line">          // 设置相机的广角</span><br><span class="line">          if (cameraFov &lt; 50) &#123;</span><br><span class="line">            cameraFov += 1;</span><br><span class="line">            camera.fov = cameraFov;</span><br><span class="line">            camera.updateProjectionMatrix();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        onComplete: () =&gt; &#123;</span><br><span class="line">          controls.enabled = true;</span><br><span class="line">          elementStatus.quitButton = true;</span><br><span class="line">          buttonText.key = 2;</span><br><span class="line">          buttonText.value = &quot;OUT&quot;;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 监听鼠标移动事件</span><br><span class="line">window.addEventListener(&quot;mousemove&quot;, detectionMouseIntersectPoint, false);</span><br><span class="line"></span><br><span class="line">// 监听鼠标点击事件</span><br><span class="line">window.addEventListener(</span><br><span class="line">  &quot;click&quot;,</span><br><span class="line">  (event) =&gt; detectionMouseIntersectPoint(event, true),</span><br><span class="line">  false</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">window.addEventListener(&quot;resize&quot;, () =&gt; &#123;</span><br><span class="line">  // 更新摄像机</span><br><span class="line">  camera.aspect = canvas.value.clientWidth / canvas.value.clientHeight;</span><br><span class="line">  // 更新摄像机投影矩阵</span><br><span class="line">  camera.updateProjectionMatrix();</span><br><span class="line">  // 更新渲染器</span><br><span class="line">  renderer.setSize(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  // 设置渲染器的像素比</span><br><span class="line">  renderer.setPixelRatio(window.devicePixelRatio);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">#canvas &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  z-index: -1;</span><br><span class="line">&#125;</span><br><span class="line">.website-view &#123;</span><br><span class="line">  width: 100vw;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  transition: all linear 1s;</span><br><span class="line">  .view-page &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 100vw;</span><br><span class="line">    height: 100vh;</span><br><span class="line">    .title &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 50%;</span><br><span class="line">      left: 10%;</span><br><span class="line">      transform: translateY(-50%);</span><br><span class="line">      font-size: 8vw;</span><br><span class="line">      letter-spacing: -2px;</span><br><span class="line">      line-height: 8vw;</span><br><span class="line">      color: #a5a2a2;</span><br><span class="line">      user-select: none;</span><br><span class="line">    &#125;</span><br><span class="line">    .start &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 70%;</span><br><span class="line">      left: 14%;</span><br><span class="line">      width: 4vw;</span><br><span class="line">      height: 4vw;</span><br><span class="line">      text-align: center;</span><br><span class="line">      line-height: 4vw;</span><br><span class="line">      color: #a5a2a2;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">      border: 1px solid #724b40;</span><br><span class="line">      border-radius: 100%;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      user-select: none;</span><br><span class="line">    &#125;</span><br><span class="line">    .text &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 6%;</span><br><span class="line">      top: 50%;</span><br><span class="line">      transform: translateY(-50%);</span><br><span class="line">      width: 40%;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">      font-family: &quot;Archivo&quot;;</span><br><span class="line">      font-weight: 100;</span><br><span class="line">      font-size: 26px;</span><br><span class="line">      color: #304150;</span><br><span class="line">    &#125;</span><br><span class="line">    .left-image &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 10%;</span><br><span class="line">      top: 50%;</span><br><span class="line">      transform: translateY(-50%);</span><br><span class="line">      width: 36%;</span><br><span class="line">    &#125;</span><br><span class="line">    .header-pic &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 40%;</span><br><span class="line">      top: 50%;</span><br><span class="line">      transform: translateY(-50%) scale(1);</span><br><span class="line">      width: 14%;</span><br><span class="line">      color: #c6c0be;</span><br><span class="line">      img &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        background-color: rgb(215, 215, 215);</span><br><span class="line">      &#125;</span><br><span class="line">      p &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .right-text &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 10%;</span><br><span class="line">      width: 32%;</span><br><span class="line">      color: #f9f0ec;</span><br><span class="line">      font-size: 26px;</span><br><span class="line">    &#125;</span><br><span class="line">    .background &#123;</span><br><span class="line">      width: 100vw;</span><br><span class="line">      height: 100vh;</span><br><span class="line">      background-color: #2c242efa;</span><br><span class="line">      opacity: 0.8;</span><br><span class="line">    &#125;</span><br><span class="line">    .my-blog,</span><br><span class="line">    .juejin &#123;</span><br><span class="line">      font-size: 36px;</span><br><span class="line">      font-weight: bold;</span><br><span class="line">      font-family: &quot;Archivo&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    .my-blog &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 40%;</span><br><span class="line">      left: 10%;</span><br><span class="line">      color: #ffffff;</span><br><span class="line">    &#125;</span><br><span class="line">    .juejin &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      bottom: 40%;</span><br><span class="line">      right: 10%;</span><br><span class="line">      color: #d2a884;</span><br><span class="line">    &#125;</span><br><span class="line">    .explorar &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 50%;</span><br><span class="line">      left: 50%;</span><br><span class="line">      transform: translate(-50%, -50%) scale(1);</span><br><span class="line">      width: 160px;</span><br><span class="line">      height: 160px;</span><br><span class="line">      line-height: 50px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      border-radius: 100%;</span><br><span class="line">      background-color: #ffffff;</span><br><span class="line">      font-family: &quot;Archivo&quot;;</span><br><span class="line">      color: #000000;</span><br><span class="line">      transition: 1.1s cubic-bezier(0.19, 1, 0.22, 1);</span><br><span class="line">      outline: 0;</span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        transform: translate(-50%, -50%) scale(1.2);</span><br><span class="line">        cursor: pointer;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.quit &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  bottom: 4%;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translateX(-50%);</span><br><span class="line">  width: 70px;</span><br><span class="line">  height: 70px;</span><br><span class="line">  background-color: #ffffff;</span><br><span class="line">  color: #000000;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  font-weight: bolder;</span><br><span class="line">  border-radius: 100%;</span><br><span class="line">  transition: 1.1s cubic-bezier(0.19, 1, 0.22, 1);</span><br><span class="line">  outline: 0;</span><br><span class="line">  z-index: 10;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    transform: translateX(-50%) scale(1.2);</span><br><span class="line">    cursor: pointer;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.left-enter-active &#123;</span><br><span class="line">  animation: leftEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.left-leave-active &#123;</span><br><span class="line">  animation: leftLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes leftEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    transform: translate(-100px, -50%);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    transform: translate(0, -50%);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes leftLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    transform: translate(0, -50%);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    transform: translate(-100px, -50%);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.top-enter-active &#123;</span><br><span class="line">  animation: topEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.top-leave-active &#123;</span><br><span class="line">  animation: topLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes topEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    top: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    top: 70%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes topLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    top: 70%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    top: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.text-fade-enter-active &#123;</span><br><span class="line">  animation: textFadeEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.text-fade-leave-active &#123;</span><br><span class="line">  animation: textFadeLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes textFadeEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    left: 20%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    left: 6%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes textFadeLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    left: 6%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    left: 20%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.left-image-fade-enter-active &#123;</span><br><span class="line">  animation: leftImageFadeEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.left-image-fade-leave-active &#123;</span><br><span class="line">  animation: leftImageFadeLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes leftImageFadeEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    left: -6%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    left: 8%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    left: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes leftImageFadeLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    left: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    left: 8%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    left: -6%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.header-image-fade-enter-active &#123;</span><br><span class="line">  animation: headerImageFadeEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.header-image-fade-leave-active &#123;</span><br><span class="line">  animation: headerImageFadeLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes headerImageFadeEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    transform: translateY(-50%) scale(2);</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    transform: translateY(-50%) scale(1.5);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    transform: translateY(-50%) scale(1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes headerImageFadeLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    transform: translateY(-50%) scale(1);</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    transform: translateY(-50%) scale(1.5);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    transform: translateY(-50%) scale(2);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.right-text-fade-enter-active &#123;</span><br><span class="line">  animation: rightTextFadeEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.right-text-fade-leave-active &#123;</span><br><span class="line">  animation: rightTextFadeLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes rightTextFadeEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    right: -10%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    right: 0%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    right: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes rightTextFadeLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    right: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    right: 0%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    right: -10%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.a-left-text-fade-enter-active &#123;</span><br><span class="line">  animation: aLeftTextFadeEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.a-left-text-fade-leave-active &#123;</span><br><span class="line">  animation: aLeftTextFadeLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes aLeftTextFadeEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    left: -10%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    left: 0%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    left: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes aLeftTextFadeLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    left: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    left: 0%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    left: -10%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.a-right-text-fade-enter-active &#123;</span><br><span class="line">  animation: aRightTextFadeEnter 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">.a-right-text-fade-leave-active &#123;</span><br><span class="line">  animation: aRightTextFadeLeave 1s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes aRightTextFadeEnter &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    right: -10%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    right: 0%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    right: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes aLeftTextFadeLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    right: 10%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    right: 0%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    right: -10%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.loading &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  right: 0;</span><br><span class="line">  background: #333333;</span><br><span class="line">  z-index: 100000;</span><br><span class="line"></span><br><span class="line">  .content &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 50%;</span><br><span class="line">    transform: translate(-50%, -50%);</span><br><span class="line">    width: 30%;</span><br><span class="line"></span><br><span class="line">    .box &#123;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 30px;</span><br><span class="line">      background: #1e1d1d;</span><br><span class="line">      border-radius: 30px;</span><br><span class="line">      box-shadow: 0 0 4px 4px #ffffff3c;</span><br><span class="line">      overflow: hidden;</span><br><span class="line"></span><br><span class="line">      .process &#123;</span><br><span class="line">        width: 0%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        background-image: linear-gradient(45deg, #0a9798 0%, #0b75cf 100%);</span><br><span class="line">        transition: all 1s;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.loading-leave-active &#123;</span><br><span class="line">  animation: loadingLeave 2s linear 0s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes loadingLeave &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    top: 0%;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    opacity: 0.5;</span><br><span class="line">    top: -50%;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    top: -100%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="资源文件"><a href="#资源文件" class="headerlink" title="资源文件"></a>资源文件</h1><p>链接: <a href="https://pan.baidu.com/s/1BJCOx2CS20MR_qR0eMu4zg?pwd=7xc6">https://pan.baidu.com/s/1BJCOx2CS20MR_qR0eMu4zg?pwd=7xc6</a> 提取码: 7xc6<br>–来自百度网盘超级会员v5的分享</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文暂时就到这了，在文章中我贴了大量的代码加上注释以及效果图，在需要讲解的地方我也加上了自己的理解，希望大家能看明白，不明白之处或者觉得处理的不好的地方可以评论区留言，期待和各位大佬的交流😊</p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三维地球：使用threejs从基础开始构建3D地球</title>
      <link href="/posts/469465b/"/>
      <url>/posts/469465b/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>该项目是我个人练习 threejs 所实现的 3D 地球 demo，该 demo 中所用到的模型包括贴图都会放到文末的百度云链接中，若有错误请指正，感谢大佬。<br>在该 demo 中各位能学到什么：</p><ul><li>使用粒子效果模拟宇宙星空</li><li>贴图、模型等资源的加载</li><li>加载资源的监听</li><li>效果合成器<strong>EffectComposer</strong>的初级使用</li><li>在地球上设置坐标以及坐标涟漪动画</li><li>标点间建立飞线</li><li>以及一些简单动画</li></ul><p><a href="https://ljnmeow.github.io/threejs-demo/dist/#/earth">演示地址(在 github 上有点卡，请见谅)</a></p><img src='https://bu.dusays.com/2023/03/04/6402fa273b65a.gif' width="100%" /><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="场景创建"><a href="#场景创建" class="headerlink" title="场景创建"></a>场景创建</h2><p>略，场景创建相关在<a href="https://ljn1998codeing.love/posts/2bf9290d/">下雨场景的文章中已详细讲解，不了解的朋友请跳转</a></p><p>接下来我们继续开始正文！</p><h2 id="粒子星空"><a href="#粒子星空" class="headerlink" title="粒子星空"></a>粒子星空</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> createStar = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">geometry</span>: <span class="variable constant_">THREE</span>.<span class="property">BufferGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  <span class="comment">// 顶点集合</span></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">vertices</span>: <span class="title class_">Float32Array</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(starCount * <span class="number">3</span>);</span><br><span class="line">  <span class="comment">// 随机颜色集合</span></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">colors</span>: <span class="title class_">Float32Array</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(starCount * <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; starCount; i++) &#123;</span><br><span class="line">    <span class="comment">// -500 ～ 500</span></span><br><span class="line">    <span class="keyword">let</span> x = (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">let</span> y = (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">let</span> z = (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) * <span class="number">1000</span>;</span><br><span class="line">    <span class="comment">// 解释下这个算法</span></span><br><span class="line">    <span class="comment">// [</span></span><br><span class="line">    <span class="comment">//  x1,y1,z1,</span></span><br><span class="line">    <span class="comment">//  x2,y2,z2,</span></span><br><span class="line">    <span class="comment">//  x3,y3,z3</span></span><br><span class="line">    <span class="comment">// ]</span></span><br><span class="line">    <span class="comment">// 因为每个顶点都是一个三元组，所以[1 * 3 + 0]则是第一组的x轴，[2 * 3 + 0]则是第二组的x轴，以此类推，其他也是一样的算法</span></span><br><span class="line"></span><br><span class="line">    vertices[i * <span class="number">3</span> + <span class="number">0</span>] = x;</span><br><span class="line">    vertices[i * <span class="number">3</span> + <span class="number">1</span>] = y;</span><br><span class="line">    vertices[i * <span class="number">3</span> + <span class="number">2</span>] = z;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 随机颜色</span></span><br><span class="line">    <span class="keyword">let</span> <span class="attr">color</span>: <span class="variable constant_">THREE</span>.<span class="property">Color</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>();</span><br><span class="line">    <span class="comment">// setHSL(‘色调&#x27;, &#x27;亮度&#x27;, ‘饱和‘) 三个参数皆在[0, 1]之间</span></span><br><span class="line">    color.<span class="title function_">setHSL</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.2</span> + <span class="number">0.5</span>, <span class="number">0.55</span>, <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.25</span> + <span class="number">0.55</span>);</span><br><span class="line">    colors[i * <span class="number">3</span> + <span class="number">0</span>] = color.<span class="property">r</span>;</span><br><span class="line">    colors[i * <span class="number">3</span> + <span class="number">1</span>] = color.<span class="property">g</span>;</span><br><span class="line">    colors[i * <span class="number">3</span> + <span class="number">2</span>] = color.<span class="property">b</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(vertices, <span class="number">3</span>));</span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">starTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(</span><br><span class="line">    <span class="title function_">getAssetsFile</span>(<span class="string">&quot;star.png&quot;</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">let</span> starMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: starTexture,</span><br><span class="line">    <span class="attr">size</span>: <span class="number">1</span>, <span class="comment">// 点大小</span></span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>, <span class="comment">// 材质透明</span></span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">1</span>, <span class="comment">// 透明度</span></span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">// 顶点着色</span></span><br><span class="line">    <span class="attr">depthTest</span>: <span class="literal">true</span>, <span class="comment">// 是否在渲染此材质时启用深度测试</span></span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>, <span class="comment">// 渲染此材质是否对深度缓冲区有任何影响</span></span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>, <span class="comment">// 材质混合</span></span><br><span class="line">    <span class="attr">sizeAttenuation</span>: <span class="literal">true</span>, <span class="comment">// 点的大小是否因相机深度而衰减</span></span><br><span class="line">  &#125;);</span><br><span class="line">  stars = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, starMaterial);</span><br><span class="line"></span><br><span class="line">  scene.<span class="title function_">add</span>(stars);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="地球创建"><a href="#地球创建" class="headerlink" title="地球创建"></a>地球创建</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">createEarth</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 地球</span></span><br><span class="line">  <span class="comment">// 创建球形几何体</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">earthGeo</span>: <span class="variable constant_">THREE</span>.<span class="property">SphereGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line">  <span class="comment">// 贴图加载</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">earthTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(</span><br><span class="line">    <span class="title function_">getAssetsFile</span>(<span class="string">&quot;earth/earth.png&quot;</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">earthBumpTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(</span><br><span class="line">    <span class="title function_">getAssetsFile</span>(<span class="string">&quot;earth/earth_bump.png&quot;</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">earthSpecTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(</span><br><span class="line">    <span class="title function_">getAssetsFile</span>(<span class="string">&quot;earth/earth_spec.png&quot;</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="comment">// 高光材质</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">earthMaterial</span>: <span class="variable constant_">THREE</span>.<span class="property">MeshPhongMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshPhongMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: earthTexture, <span class="comment">// 贴图</span></span><br><span class="line">    <span class="attr">bumpMap</span>: earthBumpTexture, <span class="comment">// 凹凸贴图纹理</span></span><br><span class="line">    <span class="attr">bumpScale</span>: <span class="number">0.15</span>, <span class="comment">// 凹凸贴图会对材质产生多大影响 0～1</span></span><br><span class="line">    <span class="attr">specularMap</span>: earthSpecTexture, <span class="comment">// 镜面反射贴图</span></span><br><span class="line">    <span class="attr">specular</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="string">&quot;#909090&quot;</span>), <span class="comment">// 材质的高光颜色</span></span><br><span class="line">    <span class="attr">shininess</span>: <span class="number">5</span>, <span class="comment">// 高亮的程度，越高越亮</span></span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>, <span class="comment">// 材质透明</span></span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>, <span class="comment">// 定义将要渲染哪一面，THREE.DoubleSide是两面</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">earth</span>: <span class="variable constant_">THREE</span>.<span class="property">Mesh</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(earthGeo, earthMaterial);</span><br><span class="line">  earthGroup.<span class="title function_">add</span>(earth);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 大气层</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">cloudGeo</span>: <span class="variable constant_">THREE</span>.<span class="property">SphereGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5.1</span>, <span class="number">40</span>, <span class="number">40</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">cloudTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(</span><br><span class="line">    <span class="title function_">getAssetsFile</span>(<span class="string">&quot;earth/earth_cloud.png&quot;</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">cloudMaterial</span>: <span class="variable constant_">THREE</span>.<span class="property">MeshPhongMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshPhongMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: cloudTexture,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">cloud</span>: <span class="variable constant_">THREE</span>.<span class="property">Mesh</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(cloudGeo, cloudMaterial);</span><br><span class="line">  earthGroup.<span class="title function_">add</span>(cloud);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置地球组转向</span></span><br><span class="line">  earthGroup.<span class="property">rotation</span>.<span class="title function_">set</span>(<span class="number">0.5</span>, <span class="number">0</span>, -<span class="number">0.4</span>);</span><br><span class="line"></span><br><span class="line">  meshGroup.<span class="title function_">add</span>(earthGroup);</span><br><span class="line">  scene.<span class="title function_">add</span>(meshGroup);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建星轨环"><a href="#创建星轨环" class="headerlink" title="创建星轨环"></a>创建星轨环</h2><p>有关效果合成器通道的使用在 R149 版本中文档并无介绍，所以选择直接查看代码</p><p><a href="https://github.com/mrdoob/three.js/blob/r149/examples/jsm/postprocessing/RenderPass.js">RenderPass</a></p><p><a href="https://github.com/mrdoob/three.js/blob/r149/examples/jsm/postprocessing/OutlinePass.js">OutlinePass</a></p><p><a href="https://github.com/mrdoob/three.js/tree/r149/examples/jsm/postprocessing">其他一些通道</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> createStarOrbit = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 创建环形几何体</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">torusGeo</span>: <span class="variable constant_">THREE</span>.<span class="property">TorusGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TorusGeometry</span>(</span><br><span class="line">    <span class="number">8.0</span>,</span><br><span class="line">    <span class="number">0.2</span>,</span><br><span class="line">    <span class="number">2</span>,</span><br><span class="line">    <span class="number">200</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">torusMaterial</span>: <span class="variable constant_">THREE</span>.<span class="property">MeshBasicMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">color</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="string">&quot;rgb(147, 181, 207)&quot;</span>),</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">0.4</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  torus = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(torusGeo, torusMaterial);</span><br><span class="line">  torus.<span class="property">rotation</span>.<span class="title function_">set</span>(<span class="number">1.7</span>, <span class="number">0.5</span>, <span class="number">1</span>);</span><br><span class="line">  torus.<span class="title function_">updateMatrix</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 效果合成器，是Three.js中的一个后期处理效果库。EffectComposer允许您将多个RenderPass组合在一起，以创建复杂的后期处理效果</span></span><br><span class="line">  composer = <span class="keyword">new</span> <span class="title class_">EffectComposer</span>(renderer);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通用的渲染器通道，用于将场景渲染到纹理或屏幕上</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">renderPass</span>: <span class="title class_">RenderPass</span> = <span class="keyword">new</span> <span class="title class_">RenderPass</span>(scene, camera);</span><br><span class="line">  composer.<span class="title function_">addPass</span>(renderPass);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 后期处理通道，可以在场景中的对象周围创建一个轮廓线</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">outlinePass</span>: <span class="title class_">OutlinePass</span> = <span class="keyword">new</span> <span class="title class_">OutlinePass</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(canvas.<span class="property">value</span>.<span class="property">clientWidth</span>, canvas.<span class="property">value</span>.<span class="property">clientHeight</span>),</span><br><span class="line">    scene,</span><br><span class="line">    camera</span><br><span class="line">  );</span><br><span class="line">  composer.<span class="title function_">addPass</span>(outlinePass);</span><br><span class="line"></span><br><span class="line">  outlinePass.<span class="property">pulsePeriod</span> = <span class="number">0</span>; <span class="comment">// 数值越大，律动越慢</span></span><br><span class="line">  outlinePass.<span class="property">visibleEdgeColor</span>.<span class="title function_">set</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="string">&quot;rgb(147, 181, 207)&quot;</span>)); <span class="comment">// 高光颜色</span></span><br><span class="line">  outlinePass.<span class="property">usePatternTexture</span> = <span class="literal">false</span>; <span class="comment">// 使用纹理覆盖</span></span><br><span class="line">  outlinePass.<span class="property">edgeStrength</span> = <span class="number">2</span>; <span class="comment">// 高光边缘强度</span></span><br><span class="line">  outlinePass.<span class="property">edgeGlow</span> = <span class="number">1</span>; <span class="comment">// 边缘微光强度</span></span><br><span class="line">  outlinePass.<span class="property">edgeThickness</span> = <span class="number">1</span>; <span class="comment">// 高光厚度</span></span><br><span class="line">  outlinePass.<span class="property">selectedObjects</span> = [torus]; <span class="comment">// 需要后期的Mesh</span></span><br><span class="line"></span><br><span class="line">  meshGroup.<span class="title function_">add</span>(torus);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建卫星移动轨迹"><a href="#创建卫星移动轨迹" class="headerlink" title="创建卫星移动轨迹"></a>创建卫星移动轨迹</h2><p>该方法主要是创建发圆环所需要的顶点以及圆环旋转后顶点的更新</p><p>如何的到圆上每个点的坐标？？？</p><p>根据三角函数正弦、余弦求得，假设圆心<strong>P(0, 0, 0)<strong>，半径</strong>r(9)<strong>，一共</strong>length300</strong>个点，循环长度的到坐标位置<strong>i</strong></p><ul><li>x &#x3D; r _ Math.sin(Math.PI _ 2 * i &#x2F; length) + p.x</li><li>y &#x3D; r _ Math.cos(Math.PI _ 2 * i &#x2F; length) + p.y</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> createMoveTrack = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// number 轨迹环总长度  radius 轨迹环半径   centerPoint 圆心   pointsArr 向量组合</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">length</span>: number = <span class="number">300</span>,</span><br><span class="line">    <span class="attr">radius</span>: number = <span class="number">9</span>,</span><br><span class="line">    centerPoint = &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    <span class="attr">pointsArr</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span>[] = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过三角函数计算圆上点坐标</span></span><br><span class="line">  <span class="comment">// 根据三角函数正弦、余弦求得，假设圆心P(0, 0, 0)，半径r(9)，一共length300个点，循环长度的到坐标位置i</span></span><br><span class="line">  <span class="comment">// x = r * Math.sin(Math.PI * 2 * i / length) + p.x</span></span><br><span class="line">  <span class="comment">// y = r * Math.cos(Math.PI * 2 * i / length) + p.y</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= length; i++) &#123;</span><br><span class="line">    pointsArr.<span class="title function_">push</span>(</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>((<span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * i) / length) + centerPoint.<span class="property">x</span>,</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>((<span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * i) / length) + centerPoint.<span class="property">y</span>,</span><br><span class="line">        centerPoint.<span class="property">z</span></span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 3阶段贝塞尔曲线</span></span><br><span class="line">  curve = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CatmullRomCurve3</span>(pointsArr, <span class="literal">true</span>, <span class="string">&quot;catmullrom&quot;</span>, <span class="number">0.5</span>);</span><br><span class="line">  <span class="comment">// 分成50个点</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">points</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span>[] = curve.<span class="title function_">getPoints</span>(<span class="number">50</span>);</span><br><span class="line">  <span class="comment">// 建立轨迹线并设置完全透明隐藏起来</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">lineGeo</span>: <span class="variable constant_">THREE</span>.<span class="property">BufferGeometry</span> =</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>().<span class="title function_">setFromPoints</span>(points);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">lineMaterial</span>: <span class="variable constant_">THREE</span>.<span class="property">LineBasicMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(lineGeo, lineMaterial);</span><br><span class="line">  <span class="comment">// 设置跟星轨一样的转向，这样到卫星看起来就会在轨迹环边运动</span></span><br><span class="line">  line.<span class="property">rotation</span>.<span class="title function_">set</span>(<span class="number">1.7</span>, <span class="number">0.5</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 物体旋转移动后顶点不更新</span></span><br><span class="line">  <span class="comment">// 创建一个四维矩阵</span></span><br><span class="line">  <span class="comment">// 然后将torus.rotation创建一个旋转矩阵并赋值给matrix</span></span><br><span class="line">  <span class="comment">// 最后将旋转矩阵应用于curve的顶点</span></span><br><span class="line">  <span class="comment">// 通过applyMatrix4(matrix)方法，curve.points[i]对象的坐标会根据旋转矩阵matrix进行变换，从而实现旋转效果</span></span><br><span class="line">  <span class="keyword">const</span> matrix = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Matrix4</span>();</span><br><span class="line">  matrix.<span class="title function_">makeRotationFromEuler</span>(torus.<span class="property">rotation</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; curve.<span class="property">points</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    curve.<span class="property">points</span>[i].<span class="title function_">applyMatrix4</span>(matrix);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  meshGroup.<span class="title function_">add</span>(line);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建卫星"><a href="#创建卫星" class="headerlink" title="创建卫星"></a>创建卫星</h2><p>卫星我直接从网上嫖了个免费模型</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> createSatellite = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  mTLLoader.<span class="title function_">load</span>(<span class="title function_">getAssetsFile</span>(<span class="string">&quot;satellite/Satellite.mtl&quot;</span>), <span class="function">(<span class="params">material</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 预加载材质所需的所有纹理、贴图</span></span><br><span class="line">    material.<span class="title function_">preload</span>();</span><br><span class="line"></span><br><span class="line">    objLoader</span><br><span class="line">      .<span class="title function_">setMaterials</span>(material)</span><br><span class="line">      .<span class="title function_">load</span>(<span class="title function_">getAssetsFile</span>(<span class="string">&quot;satellite/Satellite.obj&quot;</span>), <span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 将轨迹路线的第一个坐标设置成卫星的初始位置</span></span><br><span class="line">        obj.<span class="property">position</span>.<span class="title function_">copy</span>(curve.<span class="property">points</span>[<span class="number">0</span>]);</span><br><span class="line">        satellite = obj;</span><br><span class="line">        meshGroup.<span class="title function_">add</span>(satellite);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="二维经纬度坐标转三维球坐标"><a href="#二维经纬度坐标转三维球坐标" class="headerlink" title="二维经纬度坐标转三维球坐标"></a>二维经纬度坐标转三维球坐标</h2><p><a href="https://blog.csdn.net/whl0071/article/details/126271442">参考文章 WGS84 坐标系</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> lglnToxyz = (<span class="attr">lg</span>: number, <span class="attr">lt</span>: number, <span class="attr">radius</span>: number): <span class="variable constant_">THREE</span>.<span class="property">Vector3</span> =&gt; &#123;</span><br><span class="line">  <span class="comment">// theta是俯仰面（竖直面）内的角度，范围0~180度</span></span><br><span class="line">  <span class="keyword">const</span> theta = (<span class="number">90</span> + lg) * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>);</span><br><span class="line">  <span class="comment">// phi是方位面（水平面）内的角度，范围0~360度</span></span><br><span class="line">  <span class="keyword">const</span> phi = (<span class="number">90</span> - lt) * (<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>);</span><br><span class="line">  <span class="comment">// 球坐标</span></span><br><span class="line">  <span class="keyword">const</span> spherical = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Spherical</span>(radius, phi, theta);</span><br><span class="line">  <span class="comment">// 三维向量</span></span><br><span class="line">  <span class="keyword">const</span> xyz = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>();</span><br><span class="line">  <span class="comment">// 从球坐标中设置该向量</span></span><br><span class="line">  xyz.<span class="title function_">setFromSpherical</span>(spherical);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> xyz;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建标点"><a href="#创建标点" class="headerlink" title="创建标点"></a>创建标点</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> createEarthPoint = (<span class="attr">localton</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span>, <span class="attr">color</span>: string): <span class="variable constant_">THREE</span>.<span class="property">Group</span> =&gt; &#123;</span><br><span class="line">  <span class="comment">// 新建一个标点组合</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">pointGroup</span>: <span class="variable constant_">THREE</span>.<span class="property">Group</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Group</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 涟漪圈圈</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">waveGeo</span>: <span class="variable constant_">THREE</span>.<span class="property">PlaneGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneGeometry</span>( <span class="number">0.3</span>, <span class="number">0.3</span> );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">waveTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(<span class="title function_">getAssetsFile</span>(<span class="string">&quot;wave.png&quot;</span>));</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">waveMaterial</span>: <span class="variable constant_">THREE</span>.<span class="property">MeshBasicMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: waveTexture,</span><br><span class="line">    <span class="attr">color</span>: color,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">waveMesh</span>: <span class="variable constant_">THREE</span>.<span class="property">Mesh</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(waveGeo, waveMaterial);</span><br><span class="line">  <span class="comment">// 设置后期控制涟漪动画的大小和透明度阀值</span></span><br><span class="line">  (waveMesh <span class="keyword">as</span> any).<span class="property">size</span> = <span class="number">5.1</span> * <span class="number">0.3</span>;</span><br><span class="line">  (waveMesh <span class="keyword">as</span> any).<span class="property">_s</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1.0</span> + <span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line">  wareArr.<span class="title function_">push</span>(waveMesh)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 标点光柱</span></span><br><span class="line">  <span class="comment">// 使用CylinderGeometry创建一个圆锥形圆柱体</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">lightGeo</span>: <span class="variable constant_">THREE</span>.<span class="property">CylinderGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CylinderGeometry</span>(<span class="number">0</span>, <span class="number">0.05</span>, <span class="number">0.5</span>, <span class="number">32</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">lightTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(<span class="title function_">getAssetsFile</span>(<span class="string">&quot;lightray.png&quot;</span>))</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">lightMaterial</span>: <span class="variable constant_">THREE</span>.<span class="property">MeshBasicMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: lightTexture,</span><br><span class="line">    <span class="attr">color</span>: color,</span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">lightMesh</span>: <span class="variable constant_">THREE</span>.<span class="property">Mesh</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(lightGeo, lightMaterial)</span><br><span class="line">  <span class="comment">// 设置光柱的旋转和位置，让他竖立在涟漪圈上边</span></span><br><span class="line">  lightMesh.<span class="title function_">rotateX</span>(<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>)</span><br><span class="line">  lightMesh.<span class="property">position</span>.<span class="property">z</span> = <span class="number">0.25</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  pointGroup.<span class="title function_">add</span>(waveMesh, lightMesh)</span><br><span class="line"></span><br><span class="line">  pointGroup.<span class="property">position</span>.<span class="title function_">set</span>(localton.<span class="property">x</span>, localton.<span class="property">y</span>, localton.<span class="property">z</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用normalize方法归一化向量，好处是保留了原向量信息而长度为1，在计算中更方便</span></span><br><span class="line">  <span class="keyword">const</span> coordVec3 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>( localton.<span class="property">x</span>, localton.<span class="property">y</span>, localton.<span class="property">z</span> ).<span class="title function_">normalize</span>();</span><br><span class="line">  <span class="keyword">const</span> meshNormal = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>( <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span> );</span><br><span class="line">  <span class="comment">// setFromUnitVectors方法根据这两个向量计算并设置旋转四元数，使pointGroup中的物体朝向目标点</span></span><br><span class="line">  pointGroup.<span class="property">quaternion</span>.<span class="title function_">setFromUnitVectors</span>( meshNormal, coordVec3 );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> pointGroup</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="绘制飞线"><a href="#绘制飞线" class="headerlink" title="绘制飞线"></a>绘制飞线</h2><p>两点一线，所以最先打算用二阶贝塞尔曲线实现，去两点之间的中点为控制点，后面随机去点时发现当起始点和终止点分别在两极，也就是两点连线为直径时，控制点在无穷远，故这里使用三阶贝塞尔曲线</p><p>这里的难点是在于如何通过起始点和终止点算出其他两个控制点，在参考其他大佬的方案以及 chatgpt 的答疑，最终整理出如下方法，如下图所示</p><img src="https://bu.dusays.com/2023/09/20/650a505c480b4.jpg" width="40%" /><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> createFlyLine = (<span class="attr">v0</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span>, <span class="attr">v3</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span>): <span class="variable constant_">THREE</span>.<span class="property">Line</span> =&gt; &#123;</span><br><span class="line">  <span class="comment">// v0.angleTo(v3)计算v0和v3之间的夹角，单位为弧度，(弧度 * 180) / Math.PI 将弧度转化为角度，单位为度</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">angle</span>: number = (v0.<span class="title function_">angleTo</span>(v3) * <span class="number">180</span>) / <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">  <span class="comment">// 计算控制点的水平距离，将夹角 * 常数(这个常数是个经验值，根据实际情况调整，它的作用是控制曲线的弯曲程度)</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">horizontal</span>: number = angle * <span class="number">0.04</span>;</span><br><span class="line">  <span class="comment">// 计算了控制点的垂直距离，将夹角的平方 * 常数(这个常数是个经验值，根据实际情况调整，它的作用是控制曲线的高度)</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">vertical</span>: number = angle * angle * <span class="number">0.1</span>;</span><br><span class="line">  <span class="comment">// 法线向量，球心</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">p0</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="comment">// 计算起始点到终止点两点间的中间点，即两向量的平均值</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">centerPoint</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span> = v0.<span class="title function_">clone</span>().<span class="title function_">add</span>(v3.<span class="title function_">clone</span>()).<span class="title function_">divideScalar</span>(<span class="number">2</span>);</span><br><span class="line">  <span class="comment">// 从圆心到中间点形成无穷远的射线</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">rayLine</span>: <span class="variable constant_">THREE</span>.<span class="property">Ray</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Ray</span>(p0, centerPoint);</span><br><span class="line">  <span class="comment">// rayLine.at需要传两个参数，所以这里创建一个临时变量</span></span><br><span class="line">  <span class="keyword">const</span> temp = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>();</span><br><span class="line">  <span class="comment">// rayLine.at获取Ray对象起点与终点之间的向量并储存在temp中</span></span><br><span class="line">  <span class="comment">// 从给定点p0开始，沿着给定方向（由Ray对象表示）上的一条射线上，到该射线与垂线所在平面的交点的计算</span></span><br><span class="line">  <span class="keyword">let</span> vtop = rayLine.<span class="title function_">at</span>( vertical / rayLine.<span class="title function_">at</span>( <span class="number">1</span>, temp ).<span class="title function_">distanceTo</span>( p0 ), temp );</span><br><span class="line"></span><br><span class="line">  <span class="comment">// lerp方法v0到vtop和horizontal / v0.clone().distanceTo(vtop)之间进行插值</span></span><br><span class="line">  <span class="comment">// v0.clone().distanceTo(vtop) 表示向量 v0 到向量 vtop 之间的距离，也就是线段 v0 和 vtop 的长度</span></span><br><span class="line">  <span class="comment">// 将 horizontal 除以线段的长度，实际上是在计算一个在 v0 到 vtop 这条线段上的相对位置，这个相对位置是以 horizontal 所表示的距离来度量的</span></span><br><span class="line">  <span class="comment">// 具体来说，horizontal 可以看作是线段长度的一个比例因子。当 horizontal 的值为 0 时</span></span><br><span class="line">  <span class="comment">// 所得到的向量就是 v0，当 horizontal 的值为线段长度时，所得到的向量就是 vtop。当 horizontal 的值为线段长度的一半时</span></span><br><span class="line">  <span class="comment">// 所得到的向量就是线段的中点。因此，horizontal / v0.clone().distanceTo(vtop) 表示在 v0 到 vtop 这条线段上的相对位置</span></span><br><span class="line">  <span class="comment">// 这个位置是由 horizontal 和线段长度共同决定的</span></span><br><span class="line">  <span class="keyword">let</span> v1 = v0.<span class="title function_">clone</span>().<span class="title function_">lerp</span>(vtop, horizontal / v0.<span class="title function_">clone</span>().<span class="title function_">distanceTo</span>(vtop));</span><br><span class="line">  <span class="keyword">let</span> v2 = v3.<span class="title function_">clone</span>().<span class="title function_">lerp</span>(vtop, horizontal / v3.<span class="title function_">clone</span>().<span class="title function_">distanceTo</span>(vtop));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">curve</span>: <span class="variable constant_">THREE</span>.<span class="property">CubicBezierCurve3</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CubicBezierCurve3</span>( v0, v1, v2, v3 );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">points</span>: <span class="variable constant_">THREE</span>.<span class="property">Vector3</span>[] = curve.<span class="title function_">getSpacedPoints</span>( <span class="number">100</span> );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">lineGeo</span>: <span class="variable constant_">THREE</span>.<span class="property">BufferGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>().<span class="title function_">setFromPoints</span>(points)</span><br><span class="line">  <span class="keyword">const</span> lineMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>( &#123;</span><br><span class="line">    <span class="attr">color</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="string">&#x27;rgb(255, 255, 255)&#x27;</span>),</span><br><span class="line">    <span class="attr">linewidth</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">0</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">line</span>: <span class="variable constant_">THREE</span>.<span class="property">Line</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(lineGeo, lineMaterial)</span><br><span class="line">  scene.<span class="title function_">add</span>(line)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从0开始，每次取5个点的数量</span></span><br><span class="line">  <span class="keyword">const</span> index = <span class="number">0</span>, num = <span class="number">5</span></span><br><span class="line">  <span class="comment">// 从曲线上取一段</span></span><br><span class="line">  <span class="keyword">let</span> flyLinePoints = points.<span class="title function_">splice</span>(index, index + num)</span><br><span class="line">  <span class="keyword">let</span> flyLineGeo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>().<span class="title function_">setFromPoints</span>(flyLinePoints);</span><br><span class="line">  (flyLineGeo <span class="keyword">as</span> any).<span class="property">points</span> = points;</span><br><span class="line">  (flyLineGeo <span class="keyword">as</span> any).<span class="property">num</span> = num;</span><br><span class="line">  (flyLineGeo <span class="keyword">as</span> any).<span class="property">_index</span> = index;</span><br><span class="line">  <span class="keyword">var</span> flyLineMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">linewidth</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">color</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="string">&#x27;rgb(254, 215, 26)&#x27;</span>)</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> flyLine = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(flyLineGeo, flyLineMaterial);</span><br><span class="line">  flyLineArr.<span class="title function_">push</span>(flyLine);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> flyLine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在地球上绘制标点和飞线"><a href="#在地球上绘制标点和飞线" class="headerlink" title="在地球上绘制标点和飞线"></a>在地球上绘制标点和飞线</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> drawPointOnEarth = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 标点集合</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">localtionGroup</span>: <span class="variable constant_">THREE</span>.<span class="property">Group</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Group</span>();</span><br><span class="line">  <span class="comment">// 飞线集合</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">flyLineGroup</span>: <span class="variable constant_">THREE</span>.<span class="property">Group</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Group</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lnglatData.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    lnglatData[i].<span class="property">lnglat</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">lnglat: number[]</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> xyz = <span class="title function_">lglnToxyz</span>(lnglat[<span class="number">0</span>], lnglat[<span class="number">1</span>], <span class="number">5.1</span>);</span><br><span class="line">      localtionGroup.<span class="title function_">add</span>(<span class="title function_">createEarthPoint</span>(xyz, lnglatData[i].<span class="property">color</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">from</span> = <span class="title function_">lglnToxyz</span>(</span><br><span class="line">      lnglatData[i].<span class="property">lnglat</span>[<span class="number">0</span>][<span class="number">0</span>],</span><br><span class="line">      lnglatData[i].<span class="property">lnglat</span>[<span class="number">0</span>][<span class="number">1</span>],</span><br><span class="line">      <span class="number">5.1</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">const</span> to = <span class="title function_">lglnToxyz</span>(</span><br><span class="line">      lnglatData[i].<span class="property">lnglat</span>[<span class="number">1</span>][<span class="number">0</span>],</span><br><span class="line">      lnglatData[i].<span class="property">lnglat</span>[<span class="number">1</span>][<span class="number">1</span>],</span><br><span class="line">      <span class="number">5.1</span></span><br><span class="line">    );</span><br><span class="line">    flyLineGroup.<span class="title function_">add</span>(<span class="title function_">createFlyLine</span>(<span class="keyword">from</span>, to));</span><br><span class="line">  &#125;</span><br><span class="line">  earthGroup.<span class="title function_">add</span>(localtionGroup, flyLineGroup);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>一般在执行完上述方法后能看到如下图的效果：</p><p><img src="https://bu.dusays.com/2023/09/20/650a505e8fe58.jpg" alt="WechatIMG154.png"></p><p>最后加上动画效果</p><h2 id="动画实现"><a href="#动画实现" class="headerlink" title="动画实现"></a>动画实现</h2><p>飞线这部分感觉还可以继续优化，希望大佬们可以指点指点 🙏</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> render = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  controls.<span class="title function_">update</span>();</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="keyword">if</span> (stats) &#123;</span><br><span class="line">    stats.<span class="title function_">update</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(composer) &#123;</span><br><span class="line">    composer.<span class="title function_">render</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(stars)&#123;</span><br><span class="line">    stars.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">0.0009</span>;</span><br><span class="line">    stars.<span class="property">rotation</span>.<span class="property">z</span> -= <span class="number">0.0003</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 卫星公转</span></span><br><span class="line">  <span class="keyword">if</span>(satellite) &#123;</span><br><span class="line">    <span class="keyword">if</span> (progress &lt;= <span class="number">1</span> - velocity) &#123;</span><br><span class="line">      <span class="keyword">const</span> satelliteMovePosition  = curve.<span class="title function_">getPointAt</span>(progress + velocity)</span><br><span class="line">      progress += velocity</span><br><span class="line">      satellite.<span class="property">position</span>.<span class="title function_">copy</span>(satelliteMovePosition)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      progress = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 飞线动画</span></span><br><span class="line">  <span class="keyword">if</span>(flyLineArr.<span class="property">length</span>) &#123;</span><br><span class="line">    flyLineArr.<span class="title function_">forEach</span>(<span class="function"><span class="params">flyLine</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> flyLineGeo = flyLine.<span class="property">geometry</span></span><br><span class="line">      <span class="keyword">let</span> points = (flyLineGeo <span class="keyword">as</span> any).<span class="property">points</span></span><br><span class="line">      <span class="keyword">let</span> p = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(points))</span><br><span class="line">      <span class="keyword">let</span> num = (flyLineGeo <span class="keyword">as</span> any).<span class="property">num</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> flyLinePoints = p.<span class="title function_">splice</span>((flyLineGeo <span class="keyword">as</span> any).<span class="property">_index</span>, (flyLineGeo <span class="keyword">as</span> any).<span class="property">_index</span> + num)</span><br><span class="line">      flyLineGeo.<span class="title function_">setFromPoints</span>(flyLinePoints)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>((flyLineGeo <span class="keyword">as</span> any).<span class="property">_index</span> &lt; points.<span class="property">length</span>) &#123;</span><br><span class="line">        (flyLineGeo <span class="keyword">as</span> any).<span class="property">_index</span> += <span class="number">1</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        (flyLineGeo <span class="keyword">as</span> any).<span class="property">_index</span> = <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 涟漪动画</span></span><br><span class="line">  <span class="keyword">if</span>(wareArr.<span class="property">length</span>) &#123;</span><br><span class="line">    wareArr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ware: any</span>) =&gt;</span> &#123;</span><br><span class="line">      ware.<span class="property">_s</span> += <span class="number">0.01</span>;</span><br><span class="line">      ware.<span class="property">scale</span>.<span class="title function_">set</span>( ware.<span class="property">size</span> * ware.<span class="property">_s</span>, ware.<span class="property">size</span> * ware.<span class="property">_s</span>, ware.<span class="property">size</span> * ware.<span class="property">_s</span> );</span><br><span class="line">      <span class="keyword">if</span> (ware.<span class="property">_s</span> &lt;= <span class="number">1.5</span>) &#123;</span><br><span class="line">        <span class="comment">//mesh._s=1，透明度=0 mesh._s=1.5，透明度=1</span></span><br><span class="line">        ware.<span class="property">material</span>.<span class="property">opacity</span> = ( ware.<span class="property">_s</span> - <span class="number">1</span> ) * <span class="number">2</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ware.<span class="property">_s</span> &gt; <span class="number">1.5</span> &amp;&amp; ware.<span class="property">_s</span> &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">//mesh._s=1.5，透明度=1 mesh._s=2，透明度=0</span></span><br><span class="line">        ware.<span class="property">material</span>.<span class="property">opacity</span> = <span class="number">1</span> - ( ware.<span class="property">_s</span> - <span class="number">1.5</span> ) * <span class="number">2</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ware.<span class="property">_s</span> = <span class="number">1.0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="资源加载监听以及-loading-实现"><a href="#资源加载监听以及-loading-实现" class="headerlink" title="资源加载监听以及 loading 实现"></a>资源加载监听以及 loading 实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> manager = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LoadingManager</span>(); <span class="comment">// 加载器管理器</span></span><br><span class="line"></span><br><span class="line">manager.<span class="property">onProgress</span> = <span class="keyword">function</span> (<span class="params">item, loaded, total</span>) &#123;</span><br><span class="line">  <span class="comment">// 百分比</span></span><br><span class="line">  <span class="keyword">let</span> value = (loaded / total) * <span class="number">100</span>;</span><br><span class="line">  process.<span class="property">value</span> = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(value);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加载完成1s后执行下列操作</span></span><br><span class="line">  <span class="keyword">if</span> (value === <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 隐藏loading动画</span></span><br><span class="line">      loading.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 这边使用gsap实现一组动画</span></span><br><span class="line">      gsap.<span class="title function_">to</span>(meshGroup.<span class="property">position</span>, &#123;</span><br><span class="line">        <span class="attr">z</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">ease</span>: <span class="string">&quot;Power2.inOut&quot;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">1</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      gsap.<span class="title function_">to</span>(earthGroup.<span class="property">rotation</span>, &#123;</span><br><span class="line">        <span class="attr">y</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">ease</span>: <span class="string">&quot;Power2.inOut&quot;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="title function_">onComplete</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (flyLineArr.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="title function_">drawPointOnEarth</span>();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="完整代码-earth-vue"><a href="#完整代码-earth-vue" class="headerlink" title="完整代码 earth.vue"></a>完整代码 earth.vue</h1><p>以下是本案例完整代码，复制到项目中就能运行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Transition</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;loading&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;process&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; width: `$&#123;process&#125;%` &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; `$&#123;process&#125;%` &#125;&#125; Loading......<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Transition</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">import * as THREE from &quot;three&quot;</span><br><span class="line">import &#123; OrbitControls &#125; from &quot;three/examples/jsm/controls/OrbitControls&quot;</span><br><span class="line">import &#123; EffectComposer &#125; from &quot;three/examples/jsm/postprocessing/EffectComposer&quot;</span><br><span class="line">import &#123; RenderPass &#125; from &#x27;three/examples/jsm/postprocessing/RenderPass&#x27;</span><br><span class="line">import &#123; OutlinePass &#125; from &#x27;three/examples/jsm/postprocessing/OutlinePass&#x27;</span><br><span class="line">import &#123; OBJLoader &#125; from &#x27;three/examples/jsm/loaders/OBJLoader&#x27;</span><br><span class="line">import &#123; MTLLoader &#125; from &#x27;three/examples/jsm/loaders/MTLLoader&#x27;</span><br><span class="line">import Stats from &quot;stats.js&quot;</span><br><span class="line">import gsap from &quot;gsap&quot;;</span><br><span class="line">import &#123; nextTick, ref &#125; from &quot;vue&quot;</span><br><span class="line">import &#123; getAssetsFile &#125; from &quot;../utils&quot;</span><br><span class="line"></span><br><span class="line">const canvas = ref&lt;any&gt;(null); // 画布</span><br><span class="line">let scene: THREE.Scene; // 场景</span><br><span class="line">let camera: THREE.PerspectiveCamera; // 相机</span><br><span class="line">let renderer: THREE.WebGLRenderer; // 渲染器</span><br><span class="line">let controls: any; // 控制器</span><br><span class="line">let stats: any; // 性能监测器</span><br><span class="line">let stars: THREE.Points; // 星空</span><br><span class="line">const earthGroup: THREE.Group = new THREE.Group(); // 地球和大气层组合</span><br><span class="line">let torus: THREE.Mesh; // 星轨圆环</span><br><span class="line">let satellite: THREE.Group; // 卫星</span><br><span class="line">const meshGroup: THREE.Group = new THREE.Group(); // 场景内除星空、灯光外所有内容的组合</span><br><span class="line">const starCount: number = 10000; // 星星数量</span><br><span class="line">const manager = new THREE.LoadingManager(); // 加载器管理器</span><br><span class="line">const textureLoader: THREE.TextureLoader = new THREE.TextureLoader(manager); // 纹理加载器</span><br><span class="line">const objLoader: OBJLoader = new OBJLoader(manager) // OBJ模型加载器</span><br><span class="line">const mTLLoader: MTLLoader = new MTLLoader(manager) // MTL资源加载器</span><br><span class="line">const process = ref&lt;number&gt;(0); // 加载进度</span><br><span class="line">const loading = ref&lt;boolean&gt;(true); // 加载中</span><br><span class="line">let composer: EffectComposer; // 效果合成器</span><br><span class="line">let curve: THREE.CatmullRomCurve3; // 三维曲线</span><br><span class="line">let progress = 0; // 运动路径初始位置</span><br><span class="line">const velocity = 0.001 // 速度</span><br><span class="line">const wareArr: THREE.Mesh[] = []</span><br><span class="line">const lnglatData = [</span><br><span class="line">  &#123;</span><br><span class="line">    lnglat: [[116.40, 39.91], [109.51, 18.25]],</span><br><span class="line">    color: &#x27;rgb(192, 44, 56)&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    lnglat: [[116.40, 39.91], [169.14, 67.74]],</span><br><span class="line">    color: &#x27;rgb(129, 60, 133)&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    lnglat: [[116.40, 39.91], [22.90, 51.23]],</span><br><span class="line">    color: &#x27;rgb(32, 161, 98)&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    lnglat: [[116.40, 39.91], [35.75, -6.17]],</span><br><span class="line">    color: &#x27;rgb(255, 20, 147)&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    lnglat: [[116.40, 39.91], [-56.89, -14.54]],</span><br><span class="line">    color: &#x27;rgb(255, 153, 0)&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    lnglat: [[116.40, 39.91], [58.48, 40.74]],</span><br><span class="line">    color: &#x27;rgb(0, 255, 255)&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    lnglat: [[116.40, 39.91], [76.77, 12.93]],</span><br><span class="line">    color: &#x27;rgb(75, 0, 130)&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">const flyLineArr: THREE.Line[] = []</span><br><span class="line"></span><br><span class="line">manager.onProgress = function(item, loaded, total) &#123;</span><br><span class="line">  let value = loaded / total * 100</span><br><span class="line">  process.value = Math.ceil(value)</span><br><span class="line"></span><br><span class="line">  if(value === 100) &#123;</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      loading.value = false</span><br><span class="line"></span><br><span class="line">      gsap.to(meshGroup.position, &#123;</span><br><span class="line">        z: 0,</span><br><span class="line">        ease: &quot;Power2.inOut&quot;,</span><br><span class="line">        duration: 1,</span><br><span class="line">      &#125;)</span><br><span class="line">      gsap.to(earthGroup.rotation, &#123;</span><br><span class="line">        y: 10,</span><br><span class="line">        ease: &quot;Power2.inOut&quot;,</span><br><span class="line">        duration: 2,</span><br><span class="line">        onComplete() &#123;</span><br><span class="line">          if(flyLineArr.length === 0) &#123;</span><br><span class="line">            drawPointOnEarth();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, 1000)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">nextTick(() =&gt; &#123;</span><br><span class="line">  initScene();</span><br><span class="line">  initCamera(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  initRenderer(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  initControls();</span><br><span class="line">  render();</span><br><span class="line">  initStats();</span><br><span class="line">  // initAxesHelper();</span><br><span class="line">  initLight();</span><br><span class="line">  createStar();</span><br><span class="line">  createEarth();</span><br><span class="line">  createStarOrbit();</span><br><span class="line">  createMoveTrack();</span><br><span class="line">  createSatellite();</span><br><span class="line"></span><br><span class="line">  meshGroup.position.set(0, 0, -100)</span><br><span class="line">  scene.add(meshGroup)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const initScene = (): void =&gt; &#123;</span><br><span class="line">  scene = new THREE.Scene();</span><br><span class="line">  scene.background = new THREE.Color( 0x020924 );</span><br><span class="line">  scene.fog = new THREE.Fog( 0x020924, 200, 1000 );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const initCamera = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  camera = new THREE.PerspectiveCamera(75, width / height, 1, 1000);</span><br><span class="line">  camera.position.set(0, 0, 14);</span><br><span class="line">  scene.add(camera);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initRenderer = (width: number, height: number): void =&gt; &#123;</span><br><span class="line">  renderer = new THREE.WebGLRenderer(&#123;</span><br><span class="line">    antialias: true, // 抗锯齿</span><br><span class="line">  &#125;);</span><br><span class="line">  renderer.setSize(width, height);</span><br><span class="line">  canvas.value.appendChild(renderer.domElement);</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initStats = (): void =&gt; &#123;</span><br><span class="line">  stats = new Stats();</span><br><span class="line">  canvas.value.appendChild(stats.dom);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initAxesHelper = (): void =&gt; &#123;</span><br><span class="line">  const axesHelper: THREE.AxesHelper = new THREE.AxesHelper(50);</span><br><span class="line">  scene.add(axesHelper);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initControls = (): void =&gt; &#123;</span><br><span class="line">  controls = new OrbitControls(camera, renderer.domElement);</span><br><span class="line">  // 使动画循环使用时阻尼或自转 意思是否有惯性</span><br><span class="line">  controls.enableDamping = true;</span><br><span class="line">  //是否可以缩放</span><br><span class="line">  controls.enableZoom = true;</span><br><span class="line">  //是否自动旋转</span><br><span class="line">  controls.autoRotate = false;</span><br><span class="line">  //是否开启右键拖拽</span><br><span class="line">  controls.enablePan = true;</span><br><span class="line">  //摄像机缩放的速度</span><br><span class="line">  controls.zoomSpeed = 1.8;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const initLight = (): void =&gt; &#123;</span><br><span class="line">  const ambientLight: THREE.AmbientLight = new THREE.AmbientLight( new THREE.Color(&#x27;rgb(222, 237, 255)&#x27;));</span><br><span class="line">  scene.add(ambientLight);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const createStar = (): void =&gt; &#123;</span><br><span class="line">  let geometry: THREE.BufferGeometry = new THREE.BufferGeometry();</span><br><span class="line">  // 顶点集合</span><br><span class="line">  let vertices: Float32Array = new Float32Array(starCount * 3);</span><br><span class="line">  // 随机颜色集合</span><br><span class="line">  let colors: Float32Array = new Float32Array(starCount * 3);</span><br><span class="line"></span><br><span class="line">  for (let i = 0; i &lt; starCount; i++) &#123;</span><br><span class="line">    // -500 ～ 500之间随机数</span><br><span class="line">    let x = (Math.random() - 0.5) * 1000;</span><br><span class="line">    let y = (Math.random() - 0.5) * 1000;</span><br><span class="line">    let z = (Math.random() - 0.5) * 1000;</span><br><span class="line"></span><br><span class="line">    vertices[i * 3 + 0] = x;</span><br><span class="line">    vertices[i * 3 + 1] = y;</span><br><span class="line">    vertices[i * 3 + 2] = z;</span><br><span class="line"></span><br><span class="line">    // 随机颜色</span><br><span class="line">    let color: THREE.Color = new THREE.Color();</span><br><span class="line">    // setHSL(‘色调&#x27;, &#x27;亮度&#x27;, ‘饱和‘) 三个参数皆在[0, 1]之间</span><br><span class="line">    color.setHSL(Math.random() * 0.2 + 0.5, 0.55, Math.random() * 0.25 + 0.55);</span><br><span class="line">    colors[i * 3 + 0] = color.r;</span><br><span class="line">    colors[i * 3 + 1] = color.g;</span><br><span class="line">    colors[i * 3 + 2] = color.b;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  geometry.setAttribute(&quot;position&quot;, new THREE.BufferAttribute(vertices, 3));</span><br><span class="line">  geometry.setAttribute(&quot;color&quot;, new THREE.BufferAttribute(colors, 3));</span><br><span class="line"></span><br><span class="line">  let starTexture: THREE.Texture = textureLoader.load(getAssetsFile(&quot;star.png&quot;));</span><br><span class="line">  let starMaterial = new THREE.PointsMaterial(&#123;</span><br><span class="line">    map: starTexture,</span><br><span class="line">    size: 1, // 点大小</span><br><span class="line">    transparent: true, // 材质透明</span><br><span class="line">    opacity: 1, // 透明度</span><br><span class="line">    vertexColors: true, // 顶点着色</span><br><span class="line">    depthTest: true, // 是否在渲染此材质时启用深度测试</span><br><span class="line">    depthWrite: false, // 渲染此材质是否对深度缓冲区有任何影响</span><br><span class="line">    blending: THREE.AdditiveBlending, // 材质混合</span><br><span class="line">    sizeAttenuation: true, // 点的大小是否因相机深度而衰减</span><br><span class="line">  &#125;);</span><br><span class="line">  stars = new THREE.Points(geometry, starMaterial);</span><br><span class="line"></span><br><span class="line">  scene.add(stars);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const createEarth = () =&gt; &#123;</span><br><span class="line">  // 地球</span><br><span class="line">  // 创建球形几何体</span><br><span class="line">  const earthGeo: THREE.SphereGeometry = new THREE.SphereGeometry(5, 32, 32);</span><br><span class="line">  // 贴图加载</span><br><span class="line">  const earthTexture: THREE.Texture = textureLoader.load(getAssetsFile(&quot;earth/earth.png&quot;));</span><br><span class="line">  const earthBumpTexture: THREE.Texture = textureLoader.load(getAssetsFile(&quot;earth/earth_bump.png&quot;));</span><br><span class="line">  const earthSpecTexture: THREE.Texture = textureLoader.load(getAssetsFile(&quot;earth/earth_spec.png&quot;));</span><br><span class="line">  // 高光材质</span><br><span class="line">  const earthMaterial: THREE.MeshPhongMaterial = new THREE.MeshPhongMaterial(&#123;</span><br><span class="line">    map: earthTexture, // 贴图</span><br><span class="line">    bumpMap: earthBumpTexture, // 凹凸贴图纹理</span><br><span class="line">    bumpScale: 0.15, // 凹凸贴图会对材质产生多大影响 0～1</span><br><span class="line">    specularMap: earthSpecTexture, // 镜面反射贴图</span><br><span class="line">    specular: new THREE.Color(&quot;#909090&quot;), // 材质的高光颜色</span><br><span class="line">    shininess: 5, // 高亮的程度，越高越亮</span><br><span class="line">    transparent: true, // 材质透明</span><br><span class="line">    side: THREE.DoubleSide // 定义将要渲染哪一面，THREE.DoubleSide是两面</span><br><span class="line">  &#125;);</span><br><span class="line">  const earth: THREE.Mesh = new THREE.Mesh(earthGeo, earthMaterial)</span><br><span class="line">  earthGroup.add(earth)</span><br><span class="line"></span><br><span class="line">  // 大气层</span><br><span class="line">  const cloudGeo: THREE.SphereGeometry = new THREE.SphereGeometry(5.1, 40, 40)</span><br><span class="line">  const cloudTexture: THREE.Texture = textureLoader.load(getAssetsFile(&quot;earth/earth_cloud.png&quot;));</span><br><span class="line">  const cloudMaterial: THREE.MeshPhongMaterial = new THREE.MeshPhongMaterial(&#123;</span><br><span class="line">    map: cloudTexture,</span><br><span class="line">    transparent: true,</span><br><span class="line">    opacity: 1,</span><br><span class="line">    blending: THREE.AdditiveBlending,</span><br><span class="line">    side: THREE.DoubleSide</span><br><span class="line">  &#125;)</span><br><span class="line">  const cloud: THREE.Mesh = new THREE.Mesh(cloudGeo, cloudMaterial)</span><br><span class="line">  earthGroup.add(cloud)</span><br><span class="line"></span><br><span class="line">  // 设置地球组转向</span><br><span class="line">  earthGroup.rotation.set( 0.5, 0, -0.4 );</span><br><span class="line"></span><br><span class="line">  meshGroup.add(earthGroup)</span><br><span class="line">  scene.add(meshGroup)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const createStarOrbit = (): void =&gt; &#123;</span><br><span class="line">  // 创建环形几何体</span><br><span class="line">const torusGeo: THREE.TorusGeometry = new THREE.TorusGeometry(8.0, 0.2, 2, 200)</span><br><span class="line">  const torusMaterial: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial(&#123;</span><br><span class="line">    color: new THREE.Color(&quot;rgb(147, 181, 207)&quot;),</span><br><span class="line">    transparent: true,</span><br><span class="line">    opacity: 0.4</span><br><span class="line">  &#125;);</span><br><span class="line">  torus = new THREE.Mesh(torusGeo, torusMaterial);</span><br><span class="line">  torus.rotation.set( 1.7, 0.5, 1 );</span><br><span class="line">  torus.updateMatrix();</span><br><span class="line"></span><br><span class="line">  // 效果合成器，是Three.js中的一个后期处理效果库。EffectComposer允许您将多个RenderPass组合在一起，以创建复杂的后期处理效果</span><br><span class="line">  composer = new EffectComposer( renderer )</span><br><span class="line"></span><br><span class="line">  // 通用的渲染器通道，用于将场景渲染到纹理或屏幕上</span><br><span class="line">  const renderPass: RenderPass = new RenderPass( scene, camera );</span><br><span class="line">  composer.addPass( renderPass );</span><br><span class="line"></span><br><span class="line">  // 后期处理通道，可以在场景中的对象周围创建一个轮廓线</span><br><span class="line">  const outlinePass: OutlinePass = new OutlinePass( new THREE.Vector2( canvas.value.clientWidth, canvas.value.clientHeight ), scene, camera );</span><br><span class="line">  composer.addPass( outlinePass );</span><br><span class="line"></span><br><span class="line">  outlinePass.pulsePeriod = 0; // 数值越大，律动越慢</span><br><span class="line">  outlinePass.visibleEdgeColor.set( new THREE.Color(&quot;rgb(147, 181, 207)&quot;) ); // 高光颜色</span><br><span class="line">  outlinePass.usePatternTexture = false; // 使用纹理覆盖</span><br><span class="line">  outlinePass.edgeStrength = 2; // 高光边缘强度</span><br><span class="line">  outlinePass.edgeGlow = 1; // 边缘微光强度</span><br><span class="line">  outlinePass.edgeThickness = 1; // 高光厚度</span><br><span class="line">  outlinePass.selectedObjects = [torus]; // 需要后期的Mesh</span><br><span class="line"></span><br><span class="line">  meshGroup.add(torus)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const createMoveTrack = (): void =&gt; &#123;</span><br><span class="line">  // number 轨迹环总长度  radius 轨迹环半径   centerPoint 圆心   pointsArr 向量组合</span><br><span class="line">  const length: number = 300,</span><br><span class="line">        radius: number = 9,</span><br><span class="line">        centerPoint = &#123; x: 0, y: 0, z: 0 &#125;,</span><br><span class="line">        pointsArr: THREE.Vector3[] = [];</span><br><span class="line"></span><br><span class="line">  // 通过三角函数计算圆上点坐标</span><br><span class="line">  // 根据三角函数正弦、余弦求得，假设圆心**P(0, 0, 0)**，半径**r(9)**，一共**length300**个点，循环长度的到坐标位置**i**</span><br><span class="line">  // x = r * Math.sin(Math.PI * 2 * i / length) + p.x</span><br><span class="line">  // y = r * Math.cos(Math.PI * 2 * i / length) + p.y</span><br><span class="line">  for (let i = 0; i &lt;= length; i++) &#123;</span><br><span class="line">    pointsArr.push(</span><br><span class="line">      new THREE.Vector3(</span><br><span class="line">        radius * Math.sin(Math.PI * 2 * i / length) + centerPoint.x,</span><br><span class="line">        radius * Math.cos(Math.PI * 2 * i / length) + centerPoint.y,</span><br><span class="line">        centerPoint.z</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  // 3阶段贝塞尔曲线</span><br><span class="line">  curve = new THREE.CatmullRomCurve3(pointsArr, true, &#x27;catmullrom&#x27;, 0.5);</span><br><span class="line">  // 分成50个点</span><br><span class="line">  const points: THREE.Vector3[] = curve.getPoints(50);</span><br><span class="line">  // 建立轨迹线并设置完全透明隐藏起来</span><br><span class="line">const lineGeo: THREE.BufferGeometry = new THREE.BufferGeometry().setFromPoints(points);</span><br><span class="line">  const lineMaterial: THREE.LineBasicMaterial = new THREE.LineBasicMaterial(&#123; transparent: true, opacity: 0 &#125;)</span><br><span class="line">  const line = new THREE.Line(lineGeo, lineMaterial)</span><br><span class="line">  // 设置跟星轨一样的转向，这样到卫星看起来就会在轨迹环边运动</span><br><span class="line">  line.rotation.set( 1.7, 0.5, 1 );</span><br><span class="line"></span><br><span class="line">  // 物体旋转移动后顶点不更新</span><br><span class="line">  // 创建一个四维矩阵</span><br><span class="line">  // 然后将torus.rotation创建一个旋转矩阵并赋值给matrix</span><br><span class="line">  // 最后将旋转矩阵应用于curve的顶点</span><br><span class="line">  // 通过applyMatrix4(matrix)方法，curve.points[i]对象的坐标会根据旋转矩阵matrix进行变换，从而实现旋转效果</span><br><span class="line">  const matrix = new THREE.Matrix4();</span><br><span class="line">  matrix.makeRotationFromEuler(torus.rotation);</span><br><span class="line">  for (let i = 0; i &lt; curve.points.length; i++) &#123;</span><br><span class="line">    curve.points[i].applyMatrix4(matrix);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  meshGroup.add(line)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const createSatellite = (): void =&gt; &#123;</span><br><span class="line">  mTLLoader.load(getAssetsFile(&#x27;satellite/Satellite.mtl&#x27;), (material) =&gt; &#123;</span><br><span class="line">    // 预加载材质所需的所有纹理、贴图</span><br><span class="line">    material.preload()</span><br><span class="line"></span><br><span class="line">    objLoader.setMaterials(material).load(getAssetsFile(&#x27;satellite/Satellite.obj&#x27;), (obj) =&gt; &#123;</span><br><span class="line">      // 将轨迹路线的第一个坐标设置成卫星的初始位置</span><br><span class="line">      obj.position.copy(curve.points[0])</span><br><span class="line">      satellite = obj</span><br><span class="line">      meshGroup.add(satellite)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const lglnToxyz = (lg: number, lt: number, radius: number): THREE.Vector3 =&gt; &#123;</span><br><span class="line">  // theta是俯仰面（竖直面）内的角度，范围0~180度</span><br><span class="line">  const theta = (90 + lg) * (Math.PI / 180)</span><br><span class="line">  // phi是方位面（水平面）内的角度，范围0~360度</span><br><span class="line">  const phi = (90 - lt) * (Math.PI / 180)</span><br><span class="line">  // 球坐标</span><br><span class="line">  const spherical = new THREE.Spherical(radius, phi, theta)</span><br><span class="line">  // 三维向量</span><br><span class="line">  const xyz = new THREE.Vector3()</span><br><span class="line">  // 从球坐标中设置该向量</span><br><span class="line">  xyz.setFromSpherical(spherical)</span><br><span class="line"></span><br><span class="line">  return xyz</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const createEarthPoint = (localton: THREE.Vector3, color: string): THREE.Group =&gt; &#123;</span><br><span class="line">  // 新建一个标点组合</span><br><span class="line">  const pointGroup: THREE.Group = new THREE.Group();</span><br><span class="line"></span><br><span class="line">  // 涟漪圈圈</span><br><span class="line">  const waveGeo: THREE.PlaneGeometry = new THREE.PlaneGeometry( 0.3, 0.3 );</span><br><span class="line">  const waveTexture: THREE.Texture = textureLoader.load(getAssetsFile(&quot;wave.png&quot;));</span><br><span class="line">  const waveMaterial: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial(&#123;</span><br><span class="line">    map: waveTexture,</span><br><span class="line">    color: color,</span><br><span class="line">    transparent: true,</span><br><span class="line">    opacity: 1.0,</span><br><span class="line">    side: THREE.DoubleSide,</span><br><span class="line">    depthWrite: false,</span><br><span class="line">  &#125;)</span><br><span class="line">  let waveMesh: THREE.Mesh = new THREE.Mesh(waveGeo, waveMaterial);</span><br><span class="line">  // 设置后期控制涟漪动画的大小和透明度阀值</span><br><span class="line">  (waveMesh as any).size = 5.1 * 0.3;</span><br><span class="line">  (waveMesh as any)._s = Math.random() * 1.0 + 1.0;</span><br><span class="line"></span><br><span class="line">  wareArr.push(waveMesh)</span><br><span class="line"></span><br><span class="line">  // 标点光柱</span><br><span class="line">  // 使用CylinderGeometry创建一个圆锥形圆柱体</span><br><span class="line">  const lightGeo: THREE.CylinderGeometry = new THREE.CylinderGeometry(0, 0.05, 0.5, 32)</span><br><span class="line">  const lightTexture: THREE.Texture = textureLoader.load(getAssetsFile(&quot;lightray.png&quot;))</span><br><span class="line">  const lightMaterial: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial(&#123;</span><br><span class="line">    map: lightTexture,</span><br><span class="line">    color: color,</span><br><span class="line">    side: THREE.DoubleSide,</span><br><span class="line">    transparent: true,</span><br><span class="line">    opacity: 1.0,</span><br><span class="line">    depthWrite: false,</span><br><span class="line">  &#125;)</span><br><span class="line">  const lightMesh: THREE.Mesh = new THREE.Mesh(lightGeo, lightMaterial)</span><br><span class="line">  // 设置光柱的旋转和位置，让他竖立在涟漪圈上边</span><br><span class="line">  lightMesh.rotateX(Math.PI / 2)</span><br><span class="line">  lightMesh.position.z = 0.25</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  pointGroup.add(waveMesh, lightMesh)</span><br><span class="line"></span><br><span class="line">  pointGroup.position.set(localton.x, localton.y, localton.z)</span><br><span class="line"></span><br><span class="line">  // 调用normalize方法归一化向量，好处是保留了原向量信息而长度为1，在计算中更方便</span><br><span class="line">  const coordVec3 = new THREE.Vector3( localton.x, localton.y, localton.z ).normalize();</span><br><span class="line">  const meshNormal = new THREE.Vector3( 0, 0, 1 );</span><br><span class="line">  // setFromUnitVectors方法根据这两个向量计算并设置旋转四元数，使pointGroup中的物体朝向目标点</span><br><span class="line">  pointGroup.quaternion.setFromUnitVectors( meshNormal, coordVec3 );</span><br><span class="line"></span><br><span class="line">  return pointGroup</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const drawPointOnEarth = (): void =&gt; &#123;</span><br><span class="line">  // 标点集合</span><br><span class="line">  const localtionGroup: THREE.Group = new THREE.Group();</span><br><span class="line">  // 飞线集合</span><br><span class="line">  const flyLineGroup: THREE.Group = new THREE.Group()</span><br><span class="line">  for(let i  = 0; i &lt; lnglatData.length; i++) &#123;</span><br><span class="line">    lnglatData[i].lnglat.forEach((lnglat: number[]) =&gt; &#123;</span><br><span class="line">      const xyz = lglnToxyz(lnglat[0], lnglat[1], 5.1)</span><br><span class="line">      localtionGroup.add(createEarthPoint(xyz, lnglatData[i].color))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    const from = lglnToxyz(lnglatData[i].lnglat[0][0], lnglatData[i].lnglat[0][1], 5.1)</span><br><span class="line">    const to = lglnToxyz(lnglatData[i].lnglat[1][0], lnglatData[i].lnglat[1][1], 5.1)</span><br><span class="line">    flyLineGroup.add(createFlyLine(from, to))</span><br><span class="line">  &#125;</span><br><span class="line">  earthGroup.add(localtionGroup, flyLineGroup)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const createFlyLine = (v0: THREE.Vector3, v3: THREE.Vector3): THREE.Line =&gt; &#123;</span><br><span class="line">  // v0.angleTo(v3)计算v0和v3之间的夹角，单位为弧度，(弧度 * 180) / Math.PI 将弧度转化为角度，单位为度</span><br><span class="line">  const angle: number = (v0.angleTo(v3) * 180) / Math.PI;</span><br><span class="line">  // 计算控制点的水平距离，将夹角 * 常数(这个常数是个经验值，根据实际情况调整，它的作用是控制曲线的弯曲程度)</span><br><span class="line">  const horizontal: number = angle * 0.04;</span><br><span class="line">  // 计算了控制点的垂直距离，将夹角的平方 * 常数(这个常数是个经验值，根据实际情况调整，它的作用是控制曲线的高度)</span><br><span class="line">  const vertical: number = angle * angle * 0.1;</span><br><span class="line">  // 法线向量，球心</span><br><span class="line">  const p0: THREE.Vector3 = new THREE.Vector3(0, 0, 0);</span><br><span class="line">  // 计算起始点到终止点两点间的中间点，即两向量的平均值</span><br><span class="line">  const centerPoint: THREE.Vector3 = v0.clone().add(v3.clone()).divideScalar(2);</span><br><span class="line">  // 从圆心到中间点形成无穷远的射线</span><br><span class="line">  const rayLine: THREE.Ray = new THREE.Ray(p0, centerPoint);</span><br><span class="line">  // rayLine.at需要传两个参数，所以这里创建一个临时变量</span><br><span class="line">  const temp = new THREE.Vector3();</span><br><span class="line">  // rayLine.at获取Ray对象起点与终点之间的向量并储存在temp中</span><br><span class="line">  // 从给定点p0开始，沿着给定方向（由Ray对象表示）上的一条射线上，到该射线与垂线所在平面的交点的计算</span><br><span class="line">  let vtop = rayLine.at( vertical / rayLine.at( 1, temp ).distanceTo( p0 ), temp );</span><br><span class="line"></span><br><span class="line">  // lerp方法v0到vtop和horizontal / v0.clone().distanceTo(vtop)之间进行插值</span><br><span class="line">  // v0.clone().distanceTo(vtop) 表示向量 v0 到向量 vtop 之间的距离，也就是线段 v0 和 vtop 的长度</span><br><span class="line">  // 将 horizontal 除以线段的长度，实际上是在计算一个在 v0 到 vtop 这条线段上的相对位置，这个相对位置是以 horizontal 所表示的距离来度量的</span><br><span class="line">  // 具体来说，horizontal 可以看作是线段长度的一个比例因子。当 horizontal 的值为 0 时</span><br><span class="line">  // 所得到的向量就是 v0，当 horizontal 的值为线段长度时，所得到的向量就是 vtop。当 horizontal 的值为线段长度的一半时</span><br><span class="line">  // 所得到的向量就是线段的中点。因此，horizontal / v0.clone().distanceTo(vtop) 表示在 v0 到 vtop 这条线段上的相对位置</span><br><span class="line">  // 这个位置是由 horizontal 和线段长度共同决定的</span><br><span class="line">  let v1 = v0.clone().lerp(vtop, horizontal / v0.clone().distanceTo(vtop));</span><br><span class="line">  let v2 = v3.clone().lerp(vtop, horizontal / v3.clone().distanceTo(vtop));</span><br><span class="line"></span><br><span class="line">  const curve: THREE.CubicBezierCurve3 = new THREE.CubicBezierCurve3( v0, v1, v2, v3 );</span><br><span class="line">  const points: THREE.Vector3[] = curve.getSpacedPoints( 100 );</span><br><span class="line">  const lineGeo: THREE.BufferGeometry = new THREE.BufferGeometry().setFromPoints(points)</span><br><span class="line">  const lineMaterial = new THREE.LineBasicMaterial( &#123;</span><br><span class="line">    color: new THREE.Color(&#x27;rgb(255, 255, 255)&#x27;),</span><br><span class="line">    linewidth: 1,</span><br><span class="line">    transparent: true,</span><br><span class="line">    opacity: 0</span><br><span class="line">  &#125;);</span><br><span class="line">  const line: THREE.Line = new THREE.Line(lineGeo, lineMaterial)</span><br><span class="line">  scene.add(line)</span><br><span class="line"></span><br><span class="line">  // 从0开始，每次取5个点的数量</span><br><span class="line">  const index = 0, num = 5</span><br><span class="line">  // 从曲线上取一段</span><br><span class="line">  let flyLinePoints = points.splice(index, index + num)</span><br><span class="line">  let flyLineGeo = new THREE.BufferGeometry().setFromPoints(flyLinePoints);</span><br><span class="line">  (flyLineGeo as any).points = points;</span><br><span class="line">  (flyLineGeo as any).num = num;</span><br><span class="line">  (flyLineGeo as any)._index = index;</span><br><span class="line">  var flyLineMaterial = new THREE.LineBasicMaterial(&#123;</span><br><span class="line">    linewidth: 1,</span><br><span class="line">    color: new THREE.Color(&#x27;rgb(254, 215, 26)&#x27;)</span><br><span class="line">  &#125;);</span><br><span class="line">  var flyLine = new THREE.Line(flyLineGeo, flyLineMaterial);</span><br><span class="line">  flyLineArr.push(flyLine);</span><br><span class="line"></span><br><span class="line">  return flyLine;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const render = (): void =&gt; &#123;</span><br><span class="line">  controls.update();</span><br><span class="line">  renderer.render(scene, camera);</span><br><span class="line">  if (stats) &#123;</span><br><span class="line">    stats.update();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if(composer) &#123;</span><br><span class="line">    composer.render();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if(stars)&#123;</span><br><span class="line">    stars.rotation.y += 0.0009;</span><br><span class="line">    stars.rotation.z -= 0.0003;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 卫星公转</span><br><span class="line">  if(satellite) &#123;</span><br><span class="line">    if (progress &lt;= 1 - velocity) &#123;</span><br><span class="line">      const satelliteMovePosition  = curve.getPointAt(progress + velocity)</span><br><span class="line">      progress += velocity</span><br><span class="line">      satellite.position.copy(satelliteMovePosition)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      progress = 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 飞线动画</span><br><span class="line">  if(flyLineArr.length) &#123;</span><br><span class="line">    flyLineArr.forEach(flyLine =&gt; &#123;</span><br><span class="line">      let flyLineGeo = flyLine.geometry</span><br><span class="line">      let points = (flyLineGeo as any).points</span><br><span class="line">      let p = JSON.parse(JSON.stringify(points))</span><br><span class="line">      let num = (flyLineGeo as any).num</span><br><span class="line"></span><br><span class="line">      let flyLinePoints = p.splice((flyLineGeo as any)._index, (flyLineGeo as any)._index + num)</span><br><span class="line">      flyLineGeo.setFromPoints(flyLinePoints)</span><br><span class="line"></span><br><span class="line">      if((flyLineGeo as any)._index &lt; points.length) &#123;</span><br><span class="line">        (flyLineGeo as any)._index += 1</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        (flyLineGeo as any)._index = 0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 涟漪动画</span><br><span class="line">  if(wareArr.length) &#123;</span><br><span class="line">    wareArr.forEach((ware: any) =&gt; &#123;</span><br><span class="line">      ware._s += 0.01;</span><br><span class="line">      ware.scale.set( ware.size * ware._s, ware.size * ware._s, ware.size * ware._s );</span><br><span class="line">      if (ware._s &lt;= 1.5) &#123;</span><br><span class="line">        //mesh._s=1，透明度=0 mesh._s=1.5，透明度=1</span><br><span class="line">        ware.material.opacity = ( ware._s - 1 ) * 2;</span><br><span class="line">      &#125; else if (ware._s &gt; 1.5 &amp;&amp; ware._s &lt;= 2) &#123;</span><br><span class="line">        //mesh._s=1.5，透明度=1 mesh._s=2，透明度=0</span><br><span class="line">        ware.material.opacity = 1 - ( ware._s - 1.5 ) * 2;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ware._s = 1.0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  requestAnimationFrame(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">window.addEventListener(&quot;resize&quot;, () =&gt; &#123;</span><br><span class="line">  // 更新摄像机</span><br><span class="line">  camera.aspect = canvas.value.clientWidth / canvas.value.clientHeight;</span><br><span class="line">  // 更新摄像机投影矩阵</span><br><span class="line">  camera.updateProjectionMatrix();</span><br><span class="line">  // 更新渲染器</span><br><span class="line">  renderer.setSize(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">  // 设置渲染器的像素比</span><br><span class="line">  renderer.setPixelRatio(window.devicePixelRatio);</span><br><span class="line">  // 更新效果合成器</span><br><span class="line">  composer.setSize(canvas.value.clientWidth, canvas.value.clientHeight);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.loading &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  right: 0;</span><br><span class="line">  background: #333333;</span><br><span class="line">  z-index: 100000;</span><br><span class="line"></span><br><span class="line">  .content &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 50%;</span><br><span class="line">    transform: translate(-50%, -50%);</span><br><span class="line">    width: 30%;</span><br><span class="line"></span><br><span class="line">    .box &#123;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 30px;</span><br><span class="line">      background: #1e1d1d;</span><br><span class="line">      border-radius: 30px;</span><br><span class="line">      box-shadow: 0 0 4px 4px #ffffff3c;</span><br><span class="line">      overflow: hidden;</span><br><span class="line"></span><br><span class="line">      .process &#123;</span><br><span class="line">        width: 0%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        background-image: linear-gradient(45deg, #0a9798 0%, #0b75cf 100%);</span><br><span class="line">        transition: all 1s;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.v-enter-active,</span><br><span class="line">.v-leave-active &#123;</span><br><span class="line">  transition: opacity 0.5s ease;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.v-enter-from,</span><br><span class="line">.v-leave-to &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h1><p>链接: <a href="https://pan.baidu.com/s/1PmGlxrTgv_UM50FzVp2rzQ?pwd=c7ii">https://pan.baidu.com/s/1PmGlxrTgv_UM50FzVp2rzQ?pwd=c7ii</a> 提取码: c7ii<br>–来自百度网盘超级会员 v5 的分享</p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>threejs下雨场景</title>
      <link href="/posts/2bf9290d/"/>
      <url>/posts/2bf9290d/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>该实例是threejs制作的下雨场景，使用Points创建一个粒子集合，PointsMaterial加贴图方式美化粒子，项目是一个练习demo，若有错误请指正，感谢大佬。</p><p><a href="https://ljnmeow.github.io/threejs-demo/dist/#/raining">演示地址(在github上有点卡，请见谅)</a><br><img src="https://bu.dusays.com/2023/09/20/650a51c5d50c9.gif" alt="在这里插入图片描述"></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="场景创建"><a href="#场景创建" class="headerlink" title="场景创建"></a>场景创建</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">scene</span>: <span class="variable constant_">THREE</span>.<span class="property">Scene</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br></pre></td></tr></table></figure><h2 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h2><p>透视相机：PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )</p><ul><li>fov — 摄像机视锥体垂直视野角度</li><li>aspect — 摄像机视锥体长宽比</li><li>near — 摄像机视锥体近端面</li><li>far — 摄像机视锥体远端面</li></ul><p><a href="https://threejs.org/examples/#webgl_camera">若想了解正交相机与透视相机的区别请移步到官网demo</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initCamera = (<span class="attr">width</span>: number, <span class="attr">height</span>: number): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">75</span>, width / height, <span class="number">0.1</span>, <span class="number">40</span>);</span><br><span class="line">  <span class="comment">// 设置相机位置</span></span><br><span class="line">  camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">40</span>);</span><br><span class="line">  <span class="comment">// 将相机添加到场景中</span></span><br><span class="line">  scene.<span class="title function_">add</span>(camera);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="坐标辅助器"><a href="#坐标辅助器" class="headerlink" title="坐标辅助器"></a>坐标辅助器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initAxesHelper = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">axesHelper</span>: <span class="variable constant_">THREE</span>.<span class="property">AxesHelper</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">50</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(axesHelper);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="状态检测器"><a href="#状态检测器" class="headerlink" title="状态检测器"></a>状态检测器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initStats = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  stats = <span class="keyword">new</span> <span class="title class_">Stats</span>();</span><br><span class="line">  canvas.<span class="property">value</span>.<span class="title function_">appendChild</span>(stats.<span class="property">dom</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="渲染器"><a href="#渲染器" class="headerlink" title="渲染器"></a>渲染器</h2><p>这里说一下，有些同学在网上看的教程会有使用 <strong>WebGL1Renderer</strong> 来创建渲染器，那到底是使用<strong>WebGLRenderer</strong>还是<strong>WebGL1Renderer</strong>，接下来我们来了解下这两的区别</p><p>如果看过<strong>WebGL</strong>的同学应该知道<strong>WebGL</strong>有1和2两个版本，从<strong>r118</strong>起，<strong>WebGLRenderer</strong>会自动使用<strong>WebGL2</strong>来做渲染</p><p>那么这两个版本有何区别，简单说就是多了更多纹理格式、内置函数、3D 纹理贴图，同时还支持了非2的整数次方大小的图片。同时，<strong>WebGL2</strong> 与 <strong>WebGL1</strong> 在对浏览器的兼容性上有很大的差异，这两者对浏览器兼容产生的巨大差异会导致陈旧的<strong>WebGL1</strong>的系统崩溃，所以<strong>threejs</strong>给我们提供了<strong>WebGL1Renderer</strong>来进行适配兼容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initRenderer = (<span class="attr">width</span>: number, <span class="attr">height</span>: number): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(width, height);</span><br><span class="line">  canvas.<span class="property">value</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="轨道控制器"><a href="#轨道控制器" class="headerlink" title="轨道控制器"></a>轨道控制器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initControls = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">  <span class="comment">// 使动画循环使用时阻尼或自转 意思是否有惯性</span></span><br><span class="line">  controls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">//是否可以缩放</span></span><br><span class="line">  controls.<span class="property">enableZoom</span> = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">//是否自动旋转</span></span><br><span class="line">  controls.<span class="property">autoRotate</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">//是否开启右键拖拽</span></span><br><span class="line">  controls.<span class="property">enablePan</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建雨水粒子"><a href="#创建雨水粒子" class="headerlink" title="创建雨水粒子"></a>创建雨水粒子</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> createRaining = (</span><br><span class="line">  <span class="attr">size</span>: number,</span><br><span class="line">  <span class="attr">transparent</span>: boolean,</span><br><span class="line">  <span class="attr">opacity</span>: number,</span><br><span class="line">  <span class="attr">vertexColors</span>: boolean,</span><br><span class="line">  <span class="attr">sizeAttenuation</span>: boolean,</span><br><span class="line">  <span class="attr">color</span>: number,</span><br><span class="line">): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">geometry</span>: <span class="variable constant_">THREE</span>.<span class="property">BufferGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// pointCount * 3 共pointCount个点，每个点有x,y,z三个坐标，所以需要*3</span></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">positions</span>: <span class="title class_">Float32Array</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(pointCount * <span class="number">3</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pointCount * <span class="number">3</span>; i++) &#123;</span><br><span class="line">    positions[i] = (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) * <span class="number">100</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 设置顶点</span></span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>));</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 加载雨滴贴图</span></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">textureLoader</span>: <span class="variable constant_">THREE</span>.<span class="property">TextureLoader</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>();</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">rainTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(rainingPng);</span><br><span class="line">  <span class="comment">// 点材质</span></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">material</span>: <span class="variable constant_">THREE</span>.<span class="property">PointsMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">size</span>: size, <span class="comment">// 大小</span></span><br><span class="line">    <span class="attr">transparent</span>: transparent, <span class="comment">// 材质是否透明，配合opacity设置透明度</span></span><br><span class="line">    <span class="attr">opacity</span>: opacity, <span class="comment">// 透明度</span></span><br><span class="line">    <span class="attr">vertexColors</span>: vertexColors, <span class="comment">// 顶点着色</span></span><br><span class="line">    <span class="attr">sizeAttenuation</span>: sizeAttenuation, <span class="comment">// 指定点的大小是否因相机深度而衰减</span></span><br><span class="line">    <span class="attr">color</span>: color, <span class="comment">// 颜色</span></span><br><span class="line">    <span class="attr">depthTest</span>: <span class="literal">true</span>, <span class="comment">// 渲染此材质时启用深度测试</span></span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>, <span class="comment">// 渲染此材质是否对深度缓冲区有任何影响</span></span><br><span class="line">    <span class="attr">map</span>: rainTexture, <span class="comment">// 贴图</span></span><br><span class="line">    <span class="attr">alphaMap</span>: rainTexture, <span class="comment">// 贴图灰度</span></span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>, <span class="comment">// 材质混合模式</span></span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 生成点</span></span><br><span class="line">  point = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, material);</span><br><span class="line">  <span class="comment">// 添加到场景</span></span><br><span class="line">  scene.<span class="title function_">add</span>(point);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="调试器"><a href="#调试器" class="headerlink" title="调试器"></a>调试器</h2><p>创建调试器控制粒子数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initGui = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> datGui = <span class="keyword">new</span> dat.<span class="title function_">GUI</span>();</span><br><span class="line">  <span class="keyword">const</span> guiConfig = &#123;</span><br><span class="line">    <span class="attr">size</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">opacity</span>: <span class="number">0.5</span>,</span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">sizeAttenuation</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">color</span>: <span class="number">0xededed</span>,</span><br><span class="line">    <span class="attr">rotateSystem</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">reDraw</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 点存在时移除掉，避免创建相同的point导致性能变差</span></span><br><span class="line">      <span class="keyword">if</span> (point) &#123;</span><br><span class="line">        scene.<span class="title function_">remove</span>(point);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">createRaining</span>(</span><br><span class="line">        guiConfig.<span class="property">size</span>,</span><br><span class="line">        guiConfig.<span class="property">transparent</span>,</span><br><span class="line">        guiConfig.<span class="property">opacity</span>,</span><br><span class="line">        guiConfig.<span class="property">vertexColors</span>,</span><br><span class="line">        guiConfig.<span class="property">sizeAttenuation</span>,</span><br><span class="line">        guiConfig.<span class="property">color</span>,</span><br><span class="line">      );</span><br><span class="line">      controls.<span class="property">autoRotate</span> = guiConfig.<span class="property">rotateSystem</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;size&quot;</span>, <span class="number">0.1</span>, <span class="number">3</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span><br><span class="line">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;transparent&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span><br><span class="line">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;opacity&quot;</span>, <span class="number">0.1</span>, <span class="number">1</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span><br><span class="line">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;vertexColors&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span><br><span class="line">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;sizeAttenuation&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span><br><span class="line">  datGui.<span class="title function_">addColor</span>(guiConfig, <span class="string">&quot;color&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span><br><span class="line">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;rotateSystem&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span><br><span class="line"></span><br><span class="line">  guiConfig.<span class="title function_">reDraw</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> render = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  controls.<span class="title function_">update</span>();</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="keyword">if</span> (stats) &#123;</span><br><span class="line">    stats.<span class="title function_">update</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (point) &#123;</span><br><span class="line">    <span class="comment">// 雨水动画，修改顶点位置来模拟雨水降落效果</span></span><br><span class="line">    <span class="keyword">const</span> positions = (point.<span class="property">geometry</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;position&quot;</span>) <span class="keyword">as</span> any).<span class="property">array</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pointCount * <span class="number">3</span>; i += <span class="number">3</span>) &#123;</span><br><span class="line">      positions[i + <span class="number">1</span>] -= <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (positions[i + <span class="number">1</span>] &lt; -<span class="number">40</span>) &#123;</span><br><span class="line">        positions[i + <span class="number">1</span>] = <span class="number">40</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 更新顶点</span></span><br><span class="line">    point.<span class="property">geometry</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;position&quot;</span>).<span class="property">needsUpdate</span> = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 使用requestAnimationFrame函数进行帧渲染</span></span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="完整代码-raining-vue"><a href="#完整代码-raining-vue" class="headerlink" title="完整代码 raining.vue"></a>完整代码 raining.vue</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> dat <span class="keyword">from</span> <span class="string">&quot;dat.gui&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">Stats</span> <span class="keyword">from</span> <span class="string">&quot;stats.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; nextTick, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> rainingPng <span class="keyword">from</span> <span class="string">&quot;../assets/rain.png&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> canvas = ref&lt;any&gt;(<span class="literal">null</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> <span class="attr">scene</span>: <span class="variable constant_">THREE</span>.<span class="property">Scene</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> <span class="attr">camera</span>: <span class="variable constant_">THREE</span>.<span class="property">PerspectiveCamera</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> <span class="attr">renderer</span>: <span class="variable constant_">THREE</span>.<span class="property">WebGLRenderer</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> <span class="attr">controls</span>: any;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> <span class="attr">stats</span>: any;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> <span class="attr">point</span>: <span class="variable constant_">THREE</span>.<span class="property">Points</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="attr">pointCount</span>: number = <span class="number">5000</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">nextTick</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">initCamera</span>(canvas.<span class="property">value</span>.<span class="property">clientWidth</span>, canvas.<span class="property">value</span>.<span class="property">clientHeight</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">initRenderer</span>(canvas.<span class="property">value</span>.<span class="property">clientWidth</span>, canvas.<span class="property">value</span>.<span class="property">clientHeight</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// initAxesHelper();</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">initControls</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">render</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">initStats</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">initGui</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> initCamera = (<span class="attr">width</span>: number, <span class="attr">height</span>: number): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">75</span>, width / height, <span class="number">0.1</span>, <span class="number">40</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">40</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  scene.<span class="title function_">add</span>(camera);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> initRenderer = (<span class="attr">width</span>: number, <span class="attr">height</span>: number): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  renderer.<span class="title function_">setSize</span>(width, height);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  canvas.<span class="property">value</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  renderer.<span class="title function_">render</span>(scene, camera);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> initStats = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  stats = <span class="keyword">new</span> <span class="title class_">Stats</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  canvas.<span class="property">value</span>.<span class="title function_">appendChild</span>(stats.<span class="property">dom</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> initAxesHelper = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> <span class="attr">axesHelper</span>: <span class="variable constant_">THREE</span>.<span class="property">AxesHelper</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">50</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  scene.<span class="title function_">add</span>(axesHelper);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> initControls = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 使动画循环使用时阻尼或自转 意思是否有惯性</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  controls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">//是否可以缩放</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  controls.<span class="property">enableZoom</span> = <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">//是否自动旋转</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  controls.<span class="property">autoRotate</span> = <span class="literal">false</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">//是否开启右键拖拽</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  controls.<span class="property">enablePan</span> = <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> render = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  controls.<span class="title function_">update</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  renderer.<span class="title function_">render</span>(scene, camera);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (stats) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    stats.<span class="title function_">update</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (point) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> positions = (point.<span class="property">geometry</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;position&quot;</span>) <span class="keyword">as</span> any).<span class="property">array</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pointCount * <span class="number">3</span>; i += <span class="number">3</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      positions[i + <span class="number">1</span>] -= <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (positions[i + <span class="number">1</span>] &lt; -<span class="number">40</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        positions[i + <span class="number">1</span>] = <span class="number">40</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    point.<span class="property">geometry</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;position&quot;</span>).<span class="property">needsUpdate</span> = <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">requestAnimationFrame</span>(render);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> initGui = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> datGui = <span class="keyword">new</span> dat.<span class="title function_">GUI</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> guiConfig = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">size</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">opacity</span>: <span class="number">0.5</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">vertexColors</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">sizeAttenuation</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">color</span>: <span class="number">0xededed</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">rotateSystem</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">reDraw</span>: <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (point) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        scene.<span class="title function_">remove</span>(point);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">createRaining</span>(</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        guiConfig.<span class="property">size</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        guiConfig.<span class="property">transparent</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        guiConfig.<span class="property">opacity</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        guiConfig.<span class="property">vertexColors</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        guiConfig.<span class="property">sizeAttenuation</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        guiConfig.<span class="property">color</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      );</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      controls.<span class="property">autoRotate</span> = guiConfig.<span class="property">rotateSystem</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;size&quot;</span>, <span class="number">0.1</span>, <span class="number">3</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;transparent&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;opacity&quot;</span>, <span class="number">0.1</span>, <span class="number">1</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;vertexColors&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;sizeAttenuation&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  datGui.<span class="title function_">addColor</span>(guiConfig, <span class="string">&quot;color&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  datGui.<span class="title function_">add</span>(guiConfig, <span class="string">&quot;rotateSystem&quot;</span>).<span class="title function_">onChange</span>(guiConfig.<span class="property">reDraw</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  guiConfig.<span class="title function_">reDraw</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> createRaining = (</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">size</span>: number,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">transparent</span>: boolean,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">opacity</span>: number,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">vertexColors</span>: boolean,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">sizeAttenuation</span>: boolean,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">color</span>: number,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">let</span> <span class="attr">geometry</span>: <span class="variable constant_">THREE</span>.<span class="property">BufferGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">let</span> <span class="attr">positions</span>: <span class="title class_">Float32Array</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(pointCount * <span class="number">3</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pointCount * <span class="number">3</span>; i++) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    positions[i] = (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) * <span class="number">100</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">let</span> <span class="attr">textureLoader</span>: <span class="variable constant_">THREE</span>.<span class="property">TextureLoader</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">let</span> <span class="attr">rainTexture</span>: <span class="variable constant_">THREE</span>.<span class="property">Texture</span> = textureLoader.<span class="title function_">load</span>(rainingPng);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">let</span> <span class="attr">material</span>: <span class="variable constant_">THREE</span>.<span class="property">PointsMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">size</span>: size,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">transparent</span>: transparent,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">opacity</span>: opacity,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">vertexColors</span>: vertexColors,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">sizeAttenuation</span>: sizeAttenuation,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">color</span>: color,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">depthTest</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">map</span>: rainTexture,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">alphaMap</span>: rainTexture,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  point = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, material);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  scene.<span class="title function_">add</span>(point);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 监听画面变化更新渲染画面</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 更新摄像机</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  camera.<span class="property">aspect</span> = canvas.<span class="property">value</span>.<span class="property">clientWidth</span> / canvas.<span class="property">value</span>.<span class="property">clientHeight</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 更新摄像机投影矩阵</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  camera.<span class="title function_">updateProjectionMatrix</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 更新渲染器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  renderer.<span class="title function_">setSize</span>(canvas.<span class="property">value</span>.<span class="property">clientWidth</span>, canvas.<span class="property">value</span>.<span class="property">clientHeight</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 设置渲染器的像素比</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>企业内网服务访问高德地图</title>
      <link href="/posts/d56ac51e/"/>
      <url>/posts/d56ac51e/</url>
      
        <content type="html"><![CDATA[<p>最近需要部署一套分内外网的项目。各位大佬都知道，在内网环境中，我们是不能随便访问外网的，所以这个项目用到的高德地图web服务就歇菜了😖</p><p>由于项目时间紧凑，所以我们通过简单的方法实现内网服务访问外网的GIS服务</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>项目中使用高德地图一般有两种方式，直接script脚本加载或者使用@amap&#x2F;amap-jsapi-loader，两种方式都是通过访问 <code>https://webapi.amap.com/maps</code>，来获取js api文件，所以我们将会通过这个文件追踪之后访问链接</p><p>通过浏览器F12 Network和Sources分析能得到它主要调用以下链接：</p><ul><li>webapi.amap.com &amp;&amp; <a href="http://webapi.amap.com/">http://webapi.amap.com</a> &amp;&amp; <a href="https://webapi.amap.com/">https://webapi.amap.com</a></li><li>restapi.amap.com</li><li>a.amap.com</li><li>vdata.amap.com</li><li>vdata01.amap.com &amp;&amp; vdata02.amap.com &amp;&amp; vdata03.amap.com &amp;&amp; vdata04.amap.com</li><li>webst01.is.autonavi.com &amp;&amp; webst02.is.autonavi.com &amp;&amp; webst03.is.autonavi.com &amp;&amp; webst04.is.autonavi.com</li><li>wprd01.is.autonavi.com &amp;&amp; wprd02.is.autonavi.com &amp;&amp; wprd03.is.autonavi.com &amp;&amp; wprd04.is.autonavi.com</li></ul><h1 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h1><p>为了让我们获取到的js api通过代理去访问，我们需要用到<strong>Nginx</strong>的<strong>sub_filter</strong>模块，<a href="https://www.jianshu.com/p/0ce5ecf16944">安装方法请看</a></p><p>先把上面提到的链接做个代理，能正常在浏览器访问证明代理成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">location /webAmap/ &#123;</span><br><span class="line">  proxy_pass https://webapi.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /restAmap/ &#123;</span><br><span class="line">  proxy_pass https://restapi.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /amap/ &#123;</span><br><span class="line">  proxy_pass https://a.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /vdata/ &#123;</span><br><span class="line">  proxy_pass https://vdata.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /vdata01/ &#123;</span><br><span class="line">  proxy_pass https://vdata01.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /vdata02/ &#123;</span><br><span class="line">  proxy_pass https://vdata02.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /vdata03/ &#123;</span><br><span class="line">  proxy_pass https://vdata03.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /vdata04/ &#123;</span><br><span class="line">  proxy_pass https://vdata04.amap.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /webst01/ &#123;</span><br><span class="line">  proxy_pass https://webst01.is.autonavi.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /webst02/ &#123;</span><br><span class="line">  proxy_pass https://webst02.is.autonavi.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /webst03/ &#123;</span><br><span class="line">  proxy_pass https://webst03.is.autonavi.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /webst04/ &#123;</span><br><span class="line">  proxy_pass https://webst04.is.autonavi.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /wprd01/ &#123;</span><br><span class="line">  proxy_pass https://wprd01.is.autonavi.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /wprd02/ &#123;</span><br><span class="line">  proxy_pass https://wprd02.is.autonavi.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /wprd03/ &#123;</span><br><span class="line">  proxy_pass https://wprd03.is.autonavi.com/;</span><br><span class="line">&#125;</span><br><span class="line">location /wprd04/ &#123;</span><br><span class="line">  proxy_pass https://wprd04.is.autonavi.com/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来使用<strong>sub_filter</strong>模块增加配置替换js文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">location /maps &#123;</span><br><span class="line">  proxy_set_header Accept-Encoding &quot;&quot;; # 返回的js文件不经过GZip压缩，方便替换内容</span><br><span class="line">  proxy_pass https://webapi.amap.com/maps;</span><br><span class="line">  sub_filter_types *; # 文件类型 *为所有</span><br><span class="line">  sub_filter_once off; # 是否只替换一次 默认on 这里改为off</span><br><span class="line">  sub_filter &#x27;webapi.amap.com&#x27; &#x27;代理地址/webAmap&#x27;; # sub_filter &#x27;原来内容&#x27; &#x27;替换内容&#x27;</span><br><span class="line">  sub_filter &#x27;http://webapi.amap.com&#x27; &#x27;https://代理地址/webAmap&#x27;;</span><br><span class="line">  sub_filter &#x27;https://webapi.amap.com&#x27; &#x27;https://代理地址/webAmap&#x27;;</span><br><span class="line">  sub_filter &#x27;https://restapi.amap.com&#x27; &#x27;https://代理地址/restAmap&#x27;;</span><br><span class="line">  sub_filter &#x27;a.amap.com&#x27; &#x27;dev.bonahl.com/amap&#x27;;</span><br><span class="line">  sub_filter &#x27;vdata.amap.com&#x27; &#x27;代理地址/vdata&#x27;;</span><br><span class="line">  sub_filter &#x27;&#123;vdata,vdata01,vdata02,vdata03,vdata04&#125;.amap.com&#x27; &#x27;代理地址/&#123;vdata,vdata01,vdata02,vdata03,vdata04&#125;&#x27;;</span><br><span class="line">  sub_filter &#x27;webst0&#123;1,2,3,4&#125;.is.autonavi.com&#x27; &#x27;代理地址/webst0&#123;1,2,3,4&#125;&#x27;;</span><br><span class="line">  sub_filter &#x27;wprd0&#123;1,2,3,4&#125;.is.autonavi.com&#x27; &#x27;代理地址/wprd0&#123;1,2,3,4&#125;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里因为我的域名是使用https的，但是他有一个marker的icon文件使用http，所以我还需要加一个配置，把所有的http请求重写成https</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 代理地址;</span><br><span class="line">    rewrite ^/(.*)$ https://代理地址/$1 permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="项目修改"><a href="#项目修改" class="headerlink" title="项目修改"></a>项目修改</h1><ul><li>脚本引入方式<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;https://代理地址/maps?v=2.0&amp;key=您申请的key值&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>vue中通过@amap&#x2F;amap-jsapi-loader使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">hookSrcipt() &#123;</span><br><span class="line">  const mapsUrl = &#x27;https://webapi.amap.com/maps&#x27;</span><br><span class="line">  const webapiHttpsUrl = &#x27;https://webapi.amap.com&#x27;</span><br><span class="line">  const restApiUrl = &#x27;https://restapi.amap.com&#x27;</span><br><span class="line">  const property = Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, &#x27;src&#x27;)</span><br><span class="line">  const nativeSet = property.set</span><br><span class="line"></span><br><span class="line">  function customiseSrcSet(url) &#123;</span><br><span class="line">    console.log(&#x27;before&#x27;, url)</span><br><span class="line">    if (url.toString().search(mapsUrl) !== -1) &#123;</span><br><span class="line">      url = &#x27;https://代理地址/maps&#x27; + url.split(mapsUrl)[1]</span><br><span class="line">    &#125; else if (url.toString().search(webapiHttpsUrl) !== -1) &#123;</span><br><span class="line">      url = &#x27;https://代理地址/webAmap&#x27; + url.split(webapiHttpsUrl)[1]</span><br><span class="line">    &#125; else if (url.toString().search(restApiUrl) !== -1) &#123;</span><br><span class="line">      url = &#x27;https://代理地址/restAmap&#x27; + url.split(restApiUrl)[1]</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&#x27;end&#x27;, url)</span><br><span class="line">    nativeSet.call(this, url)</span><br><span class="line">  &#125;</span><br><span class="line">  Object.defineProperty(HTMLScriptElement.prototype, &#x27;src&#x27;, &#123;</span><br><span class="line">    set: customiseSrcSet</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>到此代理完成，打开F12强刷一下可以看到请求地址已经改成代理地址，该笔记记录为高德js地图2.0版本代理方法，参考这篇文件<a href="https://blog.csdn.net/cbb0201/article/details/111143619">1.4.15版本的代理方法</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>threejs实现简单全景看房demo</title>
      <link href="/posts/69577cfd/"/>
      <url>/posts/69577cfd/</url>
      
        <content type="html"><![CDATA[<p>各位大家好😊，最近一直在学习 <strong>threejs</strong> ，在学习过程中不断进步，在将来我会不断完善我的 <strong>threejs</strong> 案例库，希望能在学习路上帮到大家🌹</p><p>接下来为各位介绍的是一个全景看房的demo，我们先上地址：</p><ul><li>源码地址：<a href="https://github.com/ljnMeow/360-house-viewing.git">https://github.com/ljnMeow/360-house-viewing.git</a></li><li>预览地址：<a href="https://ljnmeow.github.io/360-house-viewing/dist">https://ljnmeow.github.io/360-house-viewing/dist</a></li><li>全景图切割工具：<a href="https://matheowis.github.io/HDRI-to-CubeMap/">https://matheowis.github.io/HDRI-to-CubeMap/</a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>threejs</strong> 是 <strong>javascript</strong> 编写的一个 <strong>WebGL</strong> 第三方库。在 <strong>threejs</strong> 中，我们通过 <strong>Scene(场景)</strong> 、 <strong>Camera(相机)</strong> 和 <strong>Renderer(渲染器)</strong> 来实现一个3d的场景，然后往里面添加各种光源、物体等等，形成一个3d世界。</p><h2 id="threejs支持程度"><a href="#threejs支持程度" class="headerlink" title="threejs支持程度"></a>threejs支持程度</h2><p>因为 <strong>threejs</strong> 是基于 <strong>webgl</strong> 写的，所以我们主要看设备是否支持 <strong>webgl</strong> 。据我所知目前主流最新版本的设备、浏览器都支持 <strong>webgl</strong>，但如果客服要在一些早期的设备上跑，例如某些超大屏大屏监控系统，跑这个的设备可能是早期的 <strong>IE</strong> 并且无法升级。我们还是需要权衡下早期 <strong>IE</strong> 和 安卓、苹果设备是否支持 <strong>webgl</strong>， 详情可见下图：</p><p><img src="https://bu.dusays.com/2023/09/20/650a544abf007.jpg" alt="image.png"></p><h1 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h1><p>要实现3d图形的展示，大致是以下思路：</p><ul><li>创建三维场景(Scene)</li><li>选择视觉点并确认视觉位置角度(Camera)</li><li>添加物体供观察</li><li>渲染场景(Renderer)</li></ul><h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><p>场景是我们所有物体的容器，通俗来讲就相当于我们的世界</p><h2 id="Camera"><a href="#Camera" class="headerlink" title="Camera"></a>Camera</h2><p>相机是我们这个世界的观察者，使用右手坐标系定位</p><p><img src="https://bu.dusays.com/2023/09/20/650a549cd1642.jpg" alt="image.png"></p><p><strong>threejs</strong> 常用的相机有两种，分别是 <strong>正交投影相机(OrthographicCamera)</strong> 和 <strong>透视投影相机(PerspectiveCamera)</strong> ，下面是我对这两种方式的理解，错了请各位大佬指点我一下🤞</p><h3 id="正交投影相机-OrthographicCamera"><a href="#正交投影相机-OrthographicCamera" class="headerlink" title="正交投影相机(OrthographicCamera)"></a>正交投影相机(OrthographicCamera)</h3><p>正交投影是一种相对简单的投影模式，我们可以把该模式看作看作一个长方形矩形，总共有6个面。该模式的特点是无论出于矩形中的哪个位置，其投影的大小都是一样的，通俗理解就是该模式跟常生活中的视觉效果不一样。我们平时看物体是远小近大，而该模式下展示的物体无论物体距离相机距离远或者近，在最终渲染的图片中物体的大小都保持不变。通过下面图片能清楚看到，相机视觉中的物体投放到进平面，然后近平面中的物体渲染到远平面也就是屏幕中，并且无论投放在哪一面，物体的大小都不变。</p><p><img src="https://bu.dusays.com/2023/09/20/650a54d1eab01.png" alt="image.png"></p><h3 id="透视投影相机-PerspectiveCamera"><a href="#透视投影相机-PerspectiveCamera" class="headerlink" title="透视投影相机(PerspectiveCamera)"></a>透视投影相机(PerspectiveCamera)</h3><p>透视投影的视觉效果呈现一个锥形，该模式就是我们现实世界中的视觉体现。该模式的特点是物体远小近大。</p><p><img src="https://bu.dusays.com/2023/09/20/650a552144ac5.jpg" alt="image.png"></p><p>相机效果体验地址在官方demo中有：<a href="https://threejs.org/examples/#webgl_camera">https://threejs.org/examples/#webgl_camera</a></p><h2 id="Renderer"><a href="#Renderer" class="headerlink" title="Renderer"></a>Renderer</h2><p>渲染器渲染我们精心制作的场景</p><h1 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h1><p>根据我的了解目前常用于实现全景看房效果的有两种，分别是 <strong>天空盒(skyBox)</strong> 和 <strong>全景图片贴图</strong> ，我这个demo使用的是后者。</p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><h3 id="skyBox"><a href="#skyBox" class="headerlink" title="skyBox"></a>skyBox</h3><p><strong>skyBox</strong> 方法是最容易理解的，在我们身处的场景内，无非就是6个面，上下、前后、左右。将这6个面的视觉处理成图片就得到6张不同方向视觉的图片。</p><p><img src="https://bu.dusays.com/2023/09/20/650a5556149bd.jpg" alt="image.png"></p><p>我们将6个视觉的图片贴到立方体的6个面，可以得到一个房间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">initContent() &#123;</span><br><span class="line">  let picList = [&quot;left&quot;, &quot;right&quot;, &quot;top&quot;, &quot;bottom&quot;, &quot;front&quot;, &quot;back&quot;];</span><br><span class="line">  let boxGeometry = new THREE.BoxGeometry(10, 10, 10);</span><br><span class="line">  let boxMaterials = [];</span><br><span class="line">  picList.forEach((item) =&gt; &#123;</span><br><span class="line">    let texture = new THREE.TextureLoader().load(</span><br><span class="line">      require(`@/assets/image/$&#123;item&#125;.png`)</span><br><span class="line">    );</span><br><span class="line">    boxMaterials.push(new THREE.MeshBasicMaterial(&#123; map: texture &#125;));</span><br><span class="line">  &#125;);</span><br><span class="line">  this.box = new THREE.Mesh(boxGeometry, boxMaterials);</span><br><span class="line">  this.scene.add(this.box);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/09/20/650a55e27b78c.gif" alt="屏幕录制2021-12-30 下午11.00.31.gif"></p><p>将视觉移到立方体中心，并让贴图内翻转一下，就能实现全景看房</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.box.geometry.scale(10, 10, -10);</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/09/20/650a55fb4f8a6.gif" alt="屏幕录制2021-12-30 下午11.11.50.gif"></p><h3 id="全景图贴图"><a href="#全景图贴图" class="headerlink" title="全景图贴图"></a>全景图贴图</h3><p>全景图贴图这种方式我认为是简单而且效果最好的一种。写之前需要一张全景图片，这个用单反的全景模式就能拍一张</p><p><img src="https://bu.dusays.com/2023/09/20/650a55db3b585.png" alt="livingRoom.jpg"></p><p><strong>threejs</strong> 添加一个球体。并把全景图作为贴图贴到球体上，得到的效果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">initContent() &#123;</span><br><span class="line">  let sphereGeometry = new THREE.SphereGeometry(16, 50, 50);</span><br><span class="line">  let texture = new THREE.TextureLoader().load(require(&quot;@/assets/image/livingRoom.jpg&quot;));</span><br><span class="line">  let sphereMaterial = new THREE.MeshBasicMaterial(&#123; map: texture &#125;);</span><br><span class="line">  this.sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);</span><br><span class="line">  this.scene.add(this.sphere);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/09/20/650a56cd188ca.gif" alt="轻映录屏-2021-12-31-10-11-37.gif"></p><p>同样，把视觉放球内，贴图反转。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sphereGeometry.scale(16, 16, -16);</span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8178cb958117495f858b5ef385968ed3~tplv-k3u1fbpfcp-watermark.image" alt="轻映录屏-2021-12-31-10-20-58.gif"></p><h2 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h2><p>我们现在已经实现全景看房了，接下来给一些物体添加说明标签，我这边的标签分两种，一种点击能够进入下一个房间，一种是弹出信息框。先看效果：</p><p><img src="https://bu.dusays.com/2023/09/20/650a56ebb4171.gif" alt="轻映录屏-2021-12-31-10-32-16.gif"></p><p>下面看看我的数据结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">dataList: [</span><br><span class="line">    &#123;</span><br><span class="line">        image: require(&quot;@/assets/image/livingRoom.jpg&quot;), // 场景贴图</span><br><span class="line">        tipsList: [ // 标签数据</span><br><span class="line">            &#123;</span><br><span class="line">                position: &#123; x: -200, y: -4, z: -147 &#125;, // 标签位置</span><br><span class="line">                content: &#123; // 标签内容</span><br><span class="line">                    title: &quot;进入厨房&quot;, // 标题</span><br><span class="line">                    text: &quot;&quot;, // 文本内容</span><br><span class="line">                    image: 1, // 场景贴图的下标，对应dataList下标</span><br><span class="line">                    showTip: false, // 是否展示弹出框</span><br><span class="line">                    showTitle: true, // 是否展示提示标题</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                position: &#123; x: -100, y: 0, z: -231 &#125;,</span><br><span class="line">                content: &#123;</span><br><span class="line">                    title: &quot;信息点2&quot;,</span><br><span class="line">                    text: &quot;77989&quot;,</span><br><span class="line">                    showTip: true,</span><br><span class="line">                    showTitle: false,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                position: &#123; x: 150, y: -50, z: -198 &#125;,</span><br><span class="line">                content: &#123;</span><br><span class="line">                    title: &quot;信息点3&quot;,</span><br><span class="line">                    text: &quot;qwdcz&quot;,</span><br><span class="line">                    showTip: true,</span><br><span class="line">                    showTitle: false,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                position: &#123; x: 210, y: 11, z: -140 &#125;,</span><br><span class="line">                content: &#123;</span><br><span class="line">                    title: &quot;信息点4&quot;,</span><br><span class="line">                    text: &quot;大豆食心虫侦察十大大苏打大大大大大大大&quot;,</span><br><span class="line">                    showTip: true,</span><br><span class="line">                    showTitle: false,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                position: &#123; x: 208, y: -12, z: 140 &#125;,</span><br><span class="line">                content: &#123;</span><br><span class="line">                    title: &quot;信息点5&quot;,</span><br><span class="line">                    text: &quot;eq&quot;,</span><br><span class="line">                    showTip: true,</span><br><span class="line">                    showTitle: false,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                position: &#123; x: 86, y: -9, z: 236 &#125;,</span><br><span class="line">                content: &#123;</span><br><span class="line">                    title: &quot;进入房间&quot;,</span><br><span class="line">                    text: &quot;&quot;,</span><br><span class="line">                    showTip: false,</span><br><span class="line">                    showTitle: true,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        image: require(&quot;@/assets/image/kitchen.jpg&quot;),</span><br><span class="line">        tipsList: [</span><br><span class="line">            &#123;</span><br><span class="line">                position: &#123; x: -199, y: -24, z: 145 &#125;,</span><br><span class="line">                content: &#123;</span><br><span class="line">                    title: &quot;进入大厅&quot;,</span><br><span class="line">                    text: &quot;&quot;,</span><br><span class="line">                    image: 0,</span><br><span class="line">                    showTip: false,</span><br><span class="line">                    showTitle: true,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>往场景中添加标签，得到如下效果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">addTipsSprite(index = 0) &#123;</span><br><span class="line">  let tipTexture = new THREE.TextureLoader().load(</span><br><span class="line">    require(&quot;@/assets/image/tip.png&quot;)</span><br><span class="line">  );</span><br><span class="line">  let material = new THREE.SpriteMaterial(&#123; map: tipTexture &#125;);</span><br><span class="line">  this.tipsSpriteList = [];</span><br><span class="line">  this.dataList[index].tipsList.forEach((item) =&gt; &#123;</span><br><span class="line">    let sprite = new THREE.Sprite(material);</span><br><span class="line">    sprite.scale.set(10, 10, 10);</span><br><span class="line">    sprite.position.set(item.position.x, item.position.y, item.position.z); // 设置标签位置</span><br><span class="line">    sprite.content = item.content; // 设置标签内容</span><br><span class="line">    this.tipsSpriteList.push(sprite); // 储存标签</span><br><span class="line">    this.scene.add(sprite); // 添加到场景中</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/346e25b0db2946239a2df5973497e21a~tplv-k3u1fbpfcp-watermark.image" alt="轻映录屏-2021-12-31-10-52-05.gif"></p><p>接下来实现鼠标移入，内容弹出效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// html</span><br><span class="line">&lt;div class=&quot;tooltip-box&quot; :style=&quot;tooltipPosition&quot; ref=&quot;tooltipBox&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;title&quot;&gt;标题：&#123;&#123; tooltopContent.title &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;explain&quot;&gt;说明：&#123;&#123; tooltopContent.text &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;p class=&quot;title-text&quot; ref=&quot;titleBox&quot; :style=&quot;titlePosition&quot;&gt;</span><br><span class="line">  &#123;&#123; tooltopContent.title &#125;&#125;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// data</span><br><span class="line">tooltipPosition: &#123; // 初始化位置全部在屏幕之外</span><br><span class="line">    top: &quot;-100%&quot;,</span><br><span class="line">    left: &quot;-100%&quot;,</span><br><span class="line">&#125;,</span><br><span class="line">titlePosition: &#123;</span><br><span class="line">    top: &quot;-100%&quot;,</span><br><span class="line">    left: &quot;-100%&quot;,</span><br><span class="line">&#125;,</span><br><span class="line">tooltopContent: &#123;&#125;, // 展示的内容</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">// method</span><br><span class="line">onMousemove(e) &#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  let element = this.$refs.threeDBox;</span><br><span class="line">  let raycaster = new THREE.Raycaster();</span><br><span class="line">  let mouse = new THREE.Vector2();</span><br><span class="line">  // 通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.</span><br><span class="line">  mouse.x = (e.clientX / element.clientWidth) * 2 - 1;</span><br><span class="line">  mouse.y = -(e.clientY / element.clientHeight) * 2 + 1;</span><br><span class="line">  raycaster.setFromCamera(mouse, this.camera);</span><br><span class="line">  // 将标签精灵数据放进来做视线交互</span><br><span class="line">  let intersects = raycaster.intersectObjects(this.tipsSpriteList, true); </span><br><span class="line">  // 视线穿过集合选择最前面的一个</span><br><span class="line">  if (intersects.length &gt; 0) &#123;</span><br><span class="line">    // 将标签的空间坐标转屏幕坐标，通过计算赋给元素的top、left</span><br><span class="line">    let elementWidth = element.clientWidth / 2;</span><br><span class="line">    let elementHeight = element.clientHeight / 2;</span><br><span class="line">    let worldVector = new THREE.Vector3(</span><br><span class="line">      intersects[0].object.position.x,</span><br><span class="line">      intersects[0].object.position.y,</span><br><span class="line">      intersects[0].object.position.z</span><br><span class="line">    );</span><br><span class="line">    let position = worldVector.project(this.camera);</span><br><span class="line">    this.tooltopContent = intersects[0].object.content;</span><br><span class="line">    if (intersects[0].object.content.showTip) &#123;</span><br><span class="line">      let left = Math.round(</span><br><span class="line">        elementWidth * position.x +</span><br><span class="line">          elementWidth -</span><br><span class="line">          this.$refs.tooltipBox.clientWidth / 2</span><br><span class="line">      );</span><br><span class="line">      let top = Math.round(</span><br><span class="line">        -elementHeight * position.y +</span><br><span class="line">          elementHeight -</span><br><span class="line">          this.$refs.tooltipBox.clientHeight / 2</span><br><span class="line">      );</span><br><span class="line">      this.tooltipPosition = &#123;</span><br><span class="line">        left: `$&#123;left&#125;px`,</span><br><span class="line">        top: `$&#123;top&#125;px`,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125; else if (intersects[0].object.content.showTitle) &#123;</span><br><span class="line">      let left = Math.round(</span><br><span class="line">        elementWidth * position.x +</span><br><span class="line">          elementWidth -</span><br><span class="line">          this.$refs.titleBox.clientWidth / 2</span><br><span class="line">      );</span><br><span class="line">      let top = Math.round(-elementHeight * position.y + elementHeight);</span><br><span class="line">      this.titlePosition = &#123;</span><br><span class="line">        left: `$&#123;left&#125;px`,</span><br><span class="line">        top: `$&#123;top&#125;px`,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 鼠标移出去隐藏所有</span><br><span class="line">    this.handleTooltipHide(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">handleTooltipHide(e) &#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  this.tooltipPosition = &#123;</span><br><span class="line">    top: &quot;-100%&quot;,</span><br><span class="line">    left: &quot;-100%&quot;,</span><br><span class="line">  &#125;;</span><br><span class="line">  this.titlePosition = &#123;</span><br><span class="line">    top: &quot;-100%&quot;,</span><br><span class="line">    left: &quot;-100%&quot;,</span><br><span class="line">  &#125;;</span><br><span class="line">  this.tooltopContent = &#123;&#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// mounted</span><br><span class="line">this.renderer.domElement.addEventListener(</span><br><span class="line">  &quot;mousemove&quot;,</span><br><span class="line">  this.onMousemove,</span><br><span class="line">  false</span><br><span class="line">);</span><br><span class="line">this.$refs.tooltipBox.addEventListener(</span><br><span class="line">  &quot;mouseleave&quot;,</span><br><span class="line">  this.handleTooltipHide,</span><br><span class="line">  false</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>最终得到效果：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fa07d85bcd9f4053992e977e01f3cad1~tplv-k3u1fbpfcp-watermark.image" alt="轻映录屏-2021-12-31-11-08-13.gif"></p><h2 id="场景切换"><a href="#场景切换" class="headerlink" title="场景切换"></a>场景切换</h2><p>全景看房总不能一直看一个房间，所以我们还需要实现点击切换场景功能。直接codeing…</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">changeContentAndtips(index) &#123;</span><br><span class="line">  // 清除场景数据内所有的精灵标签</span><br><span class="line">  this.scene.children = this.scene.children.filter(</span><br><span class="line">    (item) =&gt; String(item.type) !== &quot;Sprite&quot;</span><br><span class="line">  );</span><br><span class="line">  // 储存数组置空</span><br><span class="line">  this.tipsSpriteList = [];</span><br><span class="line">  // 重新加载贴图，这边应用gasp做一个简单的过渡动画，将透明度从0 ~ 1</span><br><span class="line">  let texture = new THREE.TextureLoader().load(this.dataList[index].image);</span><br><span class="line">  let sphereMaterial = new THREE.MeshBasicMaterial(&#123;</span><br><span class="line">    map: texture,</span><br><span class="line">    transparent: true,</span><br><span class="line">    opacity: 0,</span><br><span class="line">  &#125;);</span><br><span class="line">  this.sphere.material = sphereMaterial;</span><br><span class="line">  gsap.to(sphereMaterial, &#123; transparent: true, opacity: 1, duration: 2 &#125;);</span><br><span class="line">  // 手动更新投影矩阵</span><br><span class="line">  this.camera.updateProjectionMatrix();</span><br><span class="line">  // 添加当前场景标签</span><br><span class="line">  this.addTipsSprite(index);</span><br><span class="line">&#125;,</span><br><span class="line">onMouseClick(e) &#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  let element = this.$refs.threeDBox;</span><br><span class="line">  let raycaster = new THREE.Raycaster();</span><br><span class="line">  let mouse = new THREE.Vector2();</span><br><span class="line">  mouse.x = (e.clientX / element.clientWidth) * 2 - 1;</span><br><span class="line">  mouse.y = -(e.clientY / element.clientHeight) * 2 + 1;</span><br><span class="line">  raycaster.setFromCamera(mouse, this.camera);</span><br><span class="line">  let intersects = raycaster.intersectObjects(this.tipsSpriteList, true);</span><br><span class="line">  if (intersects.length &gt; 0 &amp;&amp; intersects[0].object.content.showTitle) &#123;</span><br><span class="line">    this.changeContentAndtips(intersects[0].object.content.image);</span><br><span class="line">    this.handleTooltipHide(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>最终得到完整效果如下图：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/af5ec22cb36043b0973bc095df78c8d7~tplv-k3u1fbpfcp-watermark.image" alt="轻映录屏-2021-12-31-11-18-19.gif"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在这个demo中有一些细节问题我处理的不是很好，例如加载时因为贴图加载慢黑屏(这是因为贴图太大，优化时可加入等待动画)，还有就是加载顺序没处理好，场景贴图还没加载完标签已经进来了。</p><p>在不断学习 <strong>threejs</strong> 的过程中，感觉还是挺有趣，看着别人炫酷的3D效果和智慧城市感觉好强，也感到自己的不足。趁着这段时间公司有项目需要用 <strong>threejs</strong> 能够光明正大摸鱼学习，努力冲啊💪</p><p>最后希望这篇文章能帮到各位❤今天是2021最后一天，祝各位大佬今天摸鱼，明年年年有余😁</p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript中object、Object 和 {} 之间的区别</title>
      <link href="/posts/5ff4fc18/"/>
      <url>/posts/5ff4fc18/</url>
      
        <content type="html"><![CDATA[<p>在我们学习TypeScript的过程中发现，TypeScript定义了一些名字相似但是概念不同的类型，下面我们来一起讨论下object、Object 和 {} 之间的区别。</p><h2 id="object"><a href="#object" class="headerlink" title="object"></a>object</h2><p><code>object</code> 类型他表示非原始对象，<code>number</code>，<code>string</code>，<code>boolean</code>，<code>symbol</code>，<code>null</code>或<code>undefined</code>在JavaScript中为原始类型</p><p>使用<code>object</code>类型，就可以更好的表示像<code>Object.create</code>这样的API，在TypeScript2.2的发布，标准库的类型声明已经更新，以使用新的对象类型。例如，<code>Object.create()</code> 和<code>Object.setPrototypeOf()</code> 方法，现在需要为它们的原型参数指定 <code>object | null</code> 类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">declare function create(o: object | null): void;</span><br><span class="line"></span><br><span class="line">create(&#123; prop: 0 &#125;); // OK</span><br><span class="line">create(null); // OK</span><br><span class="line">create(42); // Error</span><br><span class="line">create(&quot;string&quot;); // Error</span><br><span class="line">create(false); // Error</span><br><span class="line">create(undefined); // Error</span><br></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><p>TypeScript中还有一个跟<code>object</code> 类型几乎同名的类型，他就是Object。该类型是所有 Object 类的实例的类型</p><p>用一句话来说<code>Object</code>就是一个对象，但是是包含了js原始的所有公用的功能。查看ts源码可以了解详情Object</p><p>在 TypeScript 中，我们使用接口来定义对象的类型，那么接口是什么？？？</p><p>在面向对象的编程中，接口是一种规范的定义，它定义了行为和动作的规范，在程序设计里面，接口起到一种限制和规范的作用。接口定义了某一批类所需要遵守的规范，接口不关心这些类的内部状态数据，也不关心这些类里方法的实现细节，它只规定这批类里必须提供某些方法，提供这些方法的类就可以满足实际需要。 typescrip中的接口类似于java，同时还增加了更灵活的接口类型，包括属性、函数、可索引和类等</p><ul><li><code>Object</code> 接口定义了 Object.prototype 原型对象上的属性<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Object接口定义                                 </span><br><span class="line">interface Person &#123;                              </span><br><span class="line">    name: string;                                     </span><br><span class="line">    age: number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let tom: Person = &#123;</span><br><span class="line">    name: &#x27;Tom&#x27;,</span><br><span class="line">    age: 25</span><br><span class="line">&#125;;  // success</span><br><span class="line"></span><br><span class="line">let tom: Person = &#123;</span><br><span class="line">    name: 11,</span><br><span class="line">    age: 25</span><br><span class="line">&#125;;  // Error</span><br></pre></td></tr></table></figure>Object 类的所有实例都继承了 Object 接口中的所有属性</li></ul><p>记住！Object不是object，不要把他们两混淆</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let a: object</span><br><span class="line">let b: Object</span><br><span class="line"></span><br><span class="line">a = &#x27;1&#x27; // Error Type &#x27;&quot;1&quot;&#x27; is not assignable to type &#x27;object&#x27;</span><br><span class="line"></span><br><span class="line">a = &#123;&#125; // Success</span><br><span class="line"></span><br><span class="line">b = &#x27;1&#x27; // Success</span><br><span class="line"></span><br><span class="line">b = &#123;&#125; // Success</span><br></pre></td></tr></table></figure><h2 id="空类型"><a href="#空类型" class="headerlink" title="空类型 {}"></a>空类型 {}</h2><p>空对象：它描述了一个没有成员的对象。当你试图访问这样一个对象的任意属性时，TypeScript 会产生一个编译时错误。但是，你仍然可以使用在 Object 类型上定义的所有属性和方法，这些属性和方法可通过 JavaScript 的原型链隐式地使用，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let a = &#123;&#125;</span><br><span class="line"></span><br><span class="line">a.prop = &#x27;123&#x27; // Error Property &#x27;prop&#x27; does not exist on type &#x27;&#123;&#125;&#x27;</span><br><span class="line"></span><br><span class="line">a.toString() // &quot;[object Object]&quot;</span><br></pre></td></tr></table></figure><p>在JavaSCript中给对象赋予属性很简单，但是在TypeScript中，这样写会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// JavaScript</span><br><span class="line">const a = &#123;&#125;; </span><br><span class="line">a.x = 3; </span><br><span class="line">a.y = 4;</span><br><span class="line"></span><br><span class="line">// TypeScript</span><br><span class="line">const a = &#123;&#125;; </span><br><span class="line">a.x = 3; // Error Property &#x27;x&#x27; does not exist on type &#x27;&#123;&#125;&#x27;</span><br><span class="line">a.y = 4; // Error Property &#x27;y&#x27; does not exist on type &#x27;&#123;&#125;&#x27;</span><br></pre></td></tr></table></figure><p>这是因为上面a的类型是根据 {}推断出来的，他能对已有的属性赋值。如果需要一步步创建对象，我们可以使用类型断言<code>as</code>来消除TYpeScript的类型检查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const a = &#123;&#125; as Point;</span><br><span class="line">a.x = 3</span><br><span class="line">a.y = 4 // Success</span><br></pre></td></tr></table></figure><p>更好的方法是声明变量的类型并一次性构建对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const a: Point = &#123;</span><br><span class="line">    x: 3,</span><br><span class="line">    y: 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Typescript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typescript </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么TypeScript比JavaScript有优势？TypeScript和JavaScript区别在哪？</title>
      <link href="/posts/1d6d0531/"/>
      <url>/posts/1d6d0531/</url>
      
        <content type="html"><![CDATA[<p>TypeScript和JavaScript是目前项目开发中比较流行的两种脚本语言，但JavaScript能否创建大型复杂的web应用，这恐怕没那么容易</p><p>于是我们选中另外一个解决方案——TypeScript</p><p>在过去的几年中，TypeScript受欢迎程度和使用率一直增长。目前最大的前端框架之一Angular就是使用TypeScript。并且2020年之后，React、Vue3.0也逐步像TypeScript靠拢。根据数据显示，大约60%的前端程序员正在使用或者使用过TypeScript，约22%希望使用并且保留学习意向</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0cf8f81a218048ed9a95763bf9dd549b~tplv-k3u1fbpfcp-watermark.image" alt="1e3a93be708f9dec600f2e1f72e396a.png"></p><h2 id="什么是TypeScript？"><a href="#什么是TypeScript？" class="headerlink" title="什么是TypeScript？"></a>什么是TypeScript？</h2><p>TypeScript简称TS，JavaScript的超集，就是在JavaScript的基础上做一层封装，封装出TS的特性，最终可以编译为JavaScript</p><p>TS最初是为了让习惯编写强类型语言的后端程序员能快速编写web应用，因为 JavaScript 没有强数据类型，所以 TypeScript 提供了静态数据类型，这是 TypeScript 的核心</p><p>随着项目不断壮大，越来越多的情断意识到静态数据类型的重要性。随着 TypeScript 越来越完善，拥趸越来越多，需求越来越大。最后由前端3大框架之一Angular2.x带头使用。</p><h2 id="TypeScript的优势在哪？"><a href="#TypeScript的优势在哪？" class="headerlink" title="TypeScript的优势在哪？"></a>TypeScript的优势在哪？</h2><h3 id="静态类型"><a href="#静态类型" class="headerlink" title="静态类型"></a>静态类型</h3><p>静态类型化是一种功能，可以在开发人员编写脚本是检测错误，有了这项功能，就会允许开发人员编写更健壮的代码并对其进行维护，以便使得代码质量更好、更清晰。</p><p>下面这段代码：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fab75c2335fd47378636dcb22a098072~tplv-k3u1fbpfcp-watermark.image" alt="7dc93a47fcb5ffc7816ee4d77d1a0ff.png"></p><p>从代码可知变量num是number类型，如果我们给num赋予其他类型的值就会报错。</p><p>在函数中的表达：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c8db42b2d574c30b9c81bd93a48b787~tplv-k3u1fbpfcp-watermark.image" alt="ba5c67896cd0b5c5cdf102f152ebf99.png"></p><p>这样是不是很清晰表达出来，函数fun接受两个类型的number的参数，传入非number的参数报错。</p><p>除此之外TypeScript还有多种数据类型，详细大家可以在文档中查看 <a href="https://www.typescriptlang.org/docs/handbook/basic-types.html">TypeScript文档</a></p><h3 id="大型项目的优势"><a href="#大型项目的优势" class="headerlink" title="大型项目的优势"></a>大型项目的优势</h3><p>对于大型项目的开发，有时为了优化改进项目，对代码进行小小更改。这些小小的变化可能会产生严重的、意想不到的后果，因此有必要撤销这些变化。使用TypeScript工具来进行重构更变的容易、快捷。</p><h3 id="更好的协作"><a href="#更好的协作" class="headerlink" title="更好的协作"></a>更好的协作</h3><p>对于大型项目的开发一般会有很多开发人员一起开发，此时乱码和错误的机也会增加。类型安全是一种在编码期间检测错误的功能，而不是在编译项目时检测错误。这为开发团队创建了一个更高效的编码和调试过程。</p><h2 id="TypeScript和JavaScript区别在哪？"><a href="#TypeScript和JavaScript区别在哪？" class="headerlink" title="TypeScript和JavaScript区别在哪？"></a>TypeScript和JavaScript区别在哪？</h2><ul><li>TypeScript能使用JavaScript 中的所有代码和编码概念</li><li>TypeScript 从核心语言方面和类概念的模塑方面对 JavaScript 对象模型进行扩展</li><li>JavaScript 代码可以在无需任何修改的情况下与 TypeScript 一同工作，同时可以使用编译器将 TypeScript 代码转换为 JavaScript</li><li>TypeScript 通过类型注解提供编译时的静态类型检查</li><li>TypeScript 中的数据要求带有明确的类型，JavaScript不要求</li><li>TypeScript 为函数提供了缺省参数值</li><li>TypeScript 引入了 JavaScript 中没有的“类”概念</li><li>TypeScript 中引入了模块的概念，可以把声明、数据、函数和类封装在模块中</li></ul><p>至于什么该使用TS或JS，我认为在构建复杂大型web应用时TS是首选，项目不复杂时只需灵活运用JS就已经足够了。</p><p>第一次写文码字，有些语句不通顺之处请各位多多担待，若有错误请各位大佬及时指出，多谢各位</p><p>我们下篇文档说下TS和JS的使用有何不同…</p>]]></content>
      
      
      <categories>
          
          <category> Typescript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typescript </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>threejs全景视频</title>
      <link href="/posts/511f0140/"/>
      <url>/posts/511f0140/</url>
      
        <content type="html"><![CDATA[<p>各位大佬们大家好😊，很久没更新文章了。因为前端时间挺忙的，各种项目、准备软考等等给耽搁了🙏。最近这段时间有点迷上threeJs，经过搜寻发现网络上关于threeJs的资源还是相对较少的，而且比较旧。</p><p>今天我使用threeJs来实现一个全景视频，带领大家观看梅赛德斯的科技展览🎆，效果大概如下：</p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/203ae0bddfc34b639c12e8aaddb8f3f5~tplv-k3u1fbpfcp-watermark.image?" alt="效果图片" width="500" align="center" /><p>在开始之前，您必须先了解threeJs的知识，这里为了节省篇幅，就不做过多的说明，有关threeJs入门的只是各位可以查看以下链接：</p><ul><li><a href="https://threejs.org/"> threeJs官方英文文档 https://threejs.org/ </a></li><li><a href="http://www.yanhuangxueyuan.com/"> 郭隆邦技术博客 http://www.yanhuangxueyuan.com/</a></li><li><a href="https://github.com/mrdoob/three.js/"> threeJs github地址 https://github.com/mrdoob/three.js/ </a></li></ul><hr><p>下面我们开始进入正题</p><h2 id="资源准备"><a href="#资源准备" class="headerlink" title="资源准备"></a>资源准备</h2><p>我们进入threeJs github地址下载 <strong>three.min.js</strong> 和 <strong>OrbitControls.js</strong>，这两个我们等下会用到，其次需要准备一个 <strong>360全景视频</strong> ，还有一些小图标之类的。视频下载地址我已经忘了，不过不用担心，上面提到的所有资源我都会放在源码中提供给大家</p><h2 id="正式编码"><a href="#正式编码" class="headerlink" title="正式编码"></a>正式编码</h2><h3 id="准备雏形"><a href="#准备雏形" class="headerlink" title="准备雏形"></a>准备雏形</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">// html</span><br><span class="line">&lt;div class=&quot;big-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;screen-container&quot; id=&quot;screenContainer&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;video-container&quot; id=&quot;videoContainer&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">// style</span><br><span class="line">* &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">body &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 100vw;</span><br><span class="line">    height: 100vh;</span><br><span class="line">    background-color: #666565;</span><br><span class="line">&#125;</span><br><span class="line">.big-container &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 50%;</span><br><span class="line">    left: 50%;</span><br><span class="line">    transform: translate(-50%, -50%);</span><br><span class="line">    width: 90vw;</span><br><span class="line">    height: 80vh;</span><br><span class="line">&#125;</span><br><span class="line">.screen-container &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">.video-container &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">    background-color: #000000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编码完成后看到如此界面</p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9c9c98619e3044808860a8e774f5e268~tplv-k3u1fbpfcp-watermark.image?" alt="效果图片" width="500" align="center" /><h3 id="准备3d环境"><a href="#准备3d环境" class="headerlink" title="准备3d环境"></a>准备3d环境</h3><p>将本次demo中所需的两个文件引入进来，编写一些初始化函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;./js/three.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./js/OrbitControls.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // 初始化一些参数</span><br><span class="line">    var scene = null;</span><br><span class="line">    var camera = null;</span><br><span class="line">    var renderer = null;</span><br><span class="line">    var controls = null;</span><br><span class="line">    var video = null;</span><br><span class="line">    var mesh = null;</span><br><span class="line">    var player = null;</span><br><span class="line">    var playVariables = &#123;</span><br><span class="line">        playClick: true,</span><br><span class="line">        isBigScreen: false,</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    // 获取容器</span><br><span class="line">    var videoContainer = document.getElementById(&quot;videoContainer&quot;);</span><br><span class="line">    </span><br><span class="line">    initScene();</span><br><span class="line">    initCamera(videoContainer);</span><br><span class="line">    initRenderer(videoContainer);</span><br><span class="line">    initControls(videoContainer);</span><br><span class="line">    render();</span><br><span class="line">    </span><br><span class="line">    // 初始化场景</span><br><span class="line">    function initScene() &#123;</span><br><span class="line">        scene = new THREE.Scene();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 初始化相机</span><br><span class="line">    function initCamera(element) &#123;</span><br><span class="line">        camera = new THREE.PerspectiveCamera(</span><br><span class="line">            75,</span><br><span class="line">            element.clientWidth / element.clientHeight,</span><br><span class="line">            1,</span><br><span class="line">            1100</span><br><span class="line">        );</span><br><span class="line">        camera.position.set(1, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 初始化渲染器</span><br><span class="line">    function initRenderer(element) &#123;</span><br><span class="line">        renderer = new THREE.WebGLRenderer();</span><br><span class="line">        renderer.setSize(element.offsetWidth, element.offsetHeight);</span><br><span class="line">        element.appendChild(renderer.domElement);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 初始化控制器</span><br><span class="line">    function initControls(element) &#123;</span><br><span class="line">        controls = new THREE.OrbitControls(camera, element);</span><br><span class="line">        controls.rotateSpeed = 0.05;</span><br><span class="line">        controls.enableDamping = true;</span><br><span class="line">        controls.dampingFactor = 0.05;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 执行渲染</span><br><span class="line">    function render() &#123;</span><br><span class="line">        requestAnimationFrame(render);</span><br><span class="line">        controls.update();</span><br><span class="line">        renderer.render(scene, camera);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>执行完上面代码，还是看不到效果的，我们只需要保证不报错即可</p><h3 id="初始化视频并将视频渲染到环境中"><a href="#初始化视频并将视频渲染到环境中" class="headerlink" title="初始化视频并将视频渲染到环境中"></a>初始化视频并将视频渲染到环境中</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">initVideo();</span><br><span class="line">initContent();</span><br><span class="line"></span><br><span class="line">// 创建video标签并配置一些属性、视频地址等，将video赋值给player方便后面控制用</span><br><span class="line">function initVideo() &#123;</span><br><span class="line">    video = document.createElement(&quot;video&quot;);</span><br><span class="line">    video.preload = &quot;auto&quot;;</span><br><span class="line">    video.crossOrigin = &quot;anonymous&quot;;</span><br><span class="line">    video.src = &quot;./resources/video.mp4&quot;;</span><br><span class="line">    player = video;</span><br><span class="line">&#125;</span><br><span class="line">// 创建一个球型几何体并将视频作为纹理贴图贴到材质中，最后生成网格模型并添加到场景里</span><br><span class="line">function initContent() &#123;</span><br><span class="line">    var geometry = new THREE.SphereBufferGeometry(300, 90, 90);</span><br><span class="line">    geometry.scale(-1, 1, 1);</span><br><span class="line">    var texture = new THREE.VideoTexture(video);</span><br><span class="line">    texture.minFilter = THREE.LinearFilter;</span><br><span class="line">    texture.format = THREE.RGBFormat;</span><br><span class="line">    var material = new THREE.MeshBasicMaterial(&#123;</span><br><span class="line">        map: texture,</span><br><span class="line">    &#125;);</span><br><span class="line">    mesh = new THREE.Mesh(geometry, material);</span><br><span class="line">    mesh.position.set(0, 0, 0);</span><br><span class="line">    scene.add(mesh);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>处理完后依旧是漆黑一片，但是可以通过video的autoplay属性让视频播放起来(但是我是用是只在服务器热更新时有效果，可能我没有等待视频加载完成🐶)</p><h3 id="准备控制按钮让视频播放起来"><a href="#准备控制按钮让视频播放起来" class="headerlink" title="准备控制按钮让视频播放起来"></a>准备控制按钮让视频播放起来</h3><p>在这里我写了一个全屏遮罩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">// html</span><br><span class="line">&lt;div class=&quot;video-mask&quot;&gt;</span><br><span class="line">    &lt;img</span><br><span class="line">        src=&quot;./resources/play.png&quot;</span><br><span class="line">        onClick=&quot;toggleVideo()&quot;</span><br><span class="line">        alt=&quot;play.png&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">// style</span><br><span class="line">.video-mask &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 50%;</span><br><span class="line">    left: 50%;</span><br><span class="line">    transform: translate(-50%, -50%);</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">    background-color: rgba(0, 0, 0, 0.8);</span><br><span class="line">&#125;</span><br><span class="line">.video-mask img &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 50%;</span><br><span class="line">    left: 50%;</span><br><span class="line">    transform: translate(-50%, -50%);</span><br><span class="line">    width: 10%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// javascript</span><br><span class="line">// playClick是播放状态 false - 未播放  true - 正在播放</span><br><span class="line">function toggleVideo() &#123;</span><br><span class="line">    if (playVariables.playClick) &#123;</span><br><span class="line">        document.getElementsByClassName(&quot;video-mask&quot;)[0].style.display = &quot;none&quot;;</span><br><span class="line">        playVariables.playClick = false;</span><br><span class="line">        player.play();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        playVariables.playClick = true;</span><br><span class="line">        player.pause();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们来看下当前的效果，如下图所示，我们已经成功制作出全景视频了</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fee83db7415345439813697cf111aa11~tplv-k3u1fbpfcp-watermark.image" alt="屏幕录制2021-11-22 下午9.53.39.gif"></p><h3 id="加入底部控制栏"><a href="#加入底部控制栏" class="headerlink" title="加入底部控制栏"></a>加入底部控制栏</h3><p>其实我们上面已经将全景视频制作出来，该操作也同样应用于全景直播。细想，接入视频流，转为贴图贴到几何模型，再添加到场景中，最后渲染出来，配上控制器，这不是一摸一样的效果吗😜</p><p>现在我们为了让上面视频操作更加完善，我们加入底部控制按钮，播放&#x2F;暂停、进度条、全屏、窗口重置大小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">// html</span><br><span class="line">&lt;div class=&quot;video-bar&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;video-btn&quot; onclick=&quot;toggleVideo()&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./resources/pause.png&quot; class=&quot;btn-hidden&quot; alt=&quot;pause.png&quot; width=&quot;68%&quot; /&gt;</span><br><span class="line">        &lt;img src=&quot;./resources/play.png&quot; alt=&quot;pause.png&quot; width=&quot;68%&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;progress-container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;time-box&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;current-video-time&quot;&gt;00:00&lt;/span&gt;/&lt;span class=&quot;total-video-time&quot;&gt;00:00&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;progress-wrapper&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;progress&quot; id=&quot;progress-play&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;full-screen&quot; onclick=&quot;toggleBigScreen()&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./resources/bigscreen.png&quot; alt=&quot;bigscreen.png&quot; width=&quot;68%&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">// 这段style太长了 我就不贴上来了，详细可查看源码</span><br><span class="line"></span><br><span class="line">// javascript</span><br><span class="line">// 处理toggleVideo函数</span><br><span class="line">function toggleVideo() &#123;</span><br><span class="line">    var imgArr = document.getElementsByClassName(&quot;video-btn&quot;)[0].children;</span><br><span class="line">    if (playVariables.playClick) &#123;</span><br><span class="line">        imgArr[1].setAttribute(&quot;class&quot;, &quot;btn-hidden&quot;);</span><br><span class="line">        imgArr[0].setAttribute(&quot;class&quot;, &quot;&quot;);</span><br><span class="line">        document.getElementsByClassName(&quot;video-mask&quot;)[0].style.display = &quot;none&quot;;</span><br><span class="line">        playVariables.playClick = false;</span><br><span class="line">        player.play();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        imgArr[0].setAttribute(&quot;class&quot;, &quot;btn-hidden&quot;);</span><br><span class="line">        imgArr[1].setAttribute(&quot;class&quot;, &quot;&quot;);</span><br><span class="line">        playVariables.playClick = true;</span><br><span class="line">        player.pause();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 进度条计算以及时间数值</span><br><span class="line">// 在initVideo中添加监听函数</span><br><span class="line">// video可以用ontimeupdate来获取视频总长度和当前播放位置</span><br><span class="line">// s_to_hs函数是秒转时分秒函数，百度可以找到，这里不贴上来，文末源码自取</span><br><span class="line">function initVideo() &#123;</span><br><span class="line">    video = document.createElement(&quot;video&quot;);</span><br><span class="line">    video.preload = &quot;auto&quot;;</span><br><span class="line">    video.crossOrigin = &quot;anonymous&quot;;</span><br><span class="line">    video.src = &quot;./resources/video.mp4&quot;;</span><br><span class="line">    player = video;</span><br><span class="line"></span><br><span class="line">    video.ontimeupdate = function (event) &#123;</span><br><span class="line">        var totalTime = s_to_hs(Math.floor(this.duration));</span><br><span class="line">        document.getElementsByClassName(&quot;total-video-time&quot;)[0].innerHTML = totalTime;</span><br><span class="line"></span><br><span class="line">        var currentTime = s_to_hs(Math.floor(this.currentTime));</span><br><span class="line">        document.getElementsByClassName(&quot;current-video-time&quot;)[0].innerHTML = currentTime;</span><br><span class="line"></span><br><span class="line">        document.getElementById(&quot;progress-play&quot;).style.width = `$&#123;</span><br><span class="line">            (Math.floor(this.currentTime) / Math.floor(this.duration)) * 100</span><br><span class="line">        &#125;%`;</span><br><span class="line">        </span><br><span class="line">        // 视频播放完毕时回到最开始的状态</span><br><span class="line">        if (currentTime === totalTime) &#123;</span><br><span class="line">            video.currentTime = 0;</span><br><span class="line">            toggleVideo();</span><br><span class="line">            document.getElementsByClassName(&quot;video-mask&quot;)[0].style.display = &quot;block&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 点击进度条，视频前进到对应的位置(这边算的可能有些不准，所以操作起来怪怪的)</span><br><span class="line">var progressContainer = document.getElementsByClassName(&quot;progress-wrapper&quot;)[0];</span><br><span class="line">progressContainer.addEventListener(&quot;click&quot;, function (event) &#123;</span><br><span class="line">    var progressWidth = document.getElementById(&quot;screenContainer&quot;).offsetWidth - 248;</span><br><span class="line">    var percentage = event.offsetX / progressWidth;</span><br><span class="line">    video.currentTime = video.duration * percentage;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 全屏处理</span><br><span class="line">function toggleBigScreen() &#123;</span><br><span class="line">    if (playVariables.isBigScreen) &#123;</span><br><span class="line">        exitFullscreen();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        requestFullScreen();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 进入全屏，更改状态</span><br><span class="line">function requestFullScreen() &#123;</span><br><span class="line">    var de = document.getElementById(&quot;screenContainer&quot;);</span><br><span class="line">    if (de.requestFullscreen) &#123;</span><br><span class="line">        de.requestFullscreen();</span><br><span class="line">    &#125; else if (de.mozRequestFullScreen) &#123;</span><br><span class="line">        de.mozRequestFullScreen();</span><br><span class="line">    &#125; else if (de.webkitRequestFullScreen) &#123;</span><br><span class="line">        de.webkitRequestFullScreen();</span><br><span class="line">    &#125;</span><br><span class="line">    playVariables.isBigScreen = true;</span><br><span class="line">&#125;</span><br><span class="line">// 推出全屏更改状态</span><br><span class="line">function exitFullscreen() &#123;</span><br><span class="line">    var de = document;</span><br><span class="line">    if (de.exitFullscreen) &#123;</span><br><span class="line">        de.exitFullscreen();</span><br><span class="line">    &#125; else if (de.mozCancelFullScreen) &#123;</span><br><span class="line">        de.mozCancelFullScreen();</span><br><span class="line">    &#125; else if (de.webkitCancelFullScreen) &#123;</span><br><span class="line">        de.webkitCancelFullScreen();</span><br><span class="line">    &#125;</span><br><span class="line">    playVariables.isBigScreen = false;</span><br><span class="line">&#125;</span><br><span class="line">// 监听resize，重置场景大小</span><br><span class="line">window.addEventListener(&quot;resize&quot;, function () &#123;</span><br><span class="line">    camera.aspect = videoContainer.clientWidth / videoContainer.clientHeight;</span><br><span class="line">    camera.updateProjectionMatrix();</span><br><span class="line">    renderer.setSize(</span><br><span class="line">        videoContainer.offsetWidth,</span><br><span class="line">        videoContainer.offsetHeight</span><br><span class="line">    );</span><br><span class="line">&#125;, false);</span><br></pre></td></tr></table></figure><p>让我们来看看最终效果</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba0e49d8e9944ded987abd5e8415f877~tplv-k3u1fbpfcp-watermark.image" alt="屏幕录制2021-11-22 下午10.20.59.gif"></p><h2 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h2><p>因为github不能上传大于100M的文件(原4K视频580M)，所以演示项目中的视频我压缩了4次，把他压缩到了62M，因此画质可能有点糊了，但不影响使用。</p><p>有条件的同学可以自己去寻找 <strong>360全景视频</strong> 或更换在线的视频连接，下面是本次教程的源码和视频资源下载网站：</p><ul><li><a href="https://github.com/ljnMeow/threeJs-FMV.git"> github地址 https://github.com/ljnMeow/threeJs-FMV.git </a></li><li><a href="https://www.4k123.com/"> 4k123 https://www.4k123.com/ </a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts实现一个下钻伪3d地图</title>
      <link href="/posts/3d1a56d7/"/>
      <url>/posts/3d1a56d7/</url>
      
        <content type="html"><![CDATA[<p>最近在大屏可视化项目中有个展示地图的功能，要求：</p><ol><li>好看排第一</li><li>支持钻入钻出</li><li>能单独展示省份、地市，因为客户数据有的是省级，有的是市级</li></ol><p>得到这个需求后第一个想到的就是Echarts，所以打开Echarts官方案例查看，找到一个类似的地图 <a href="https://echarts.apache.org/examples/zh/editor.html?c=map-HK">demo</a></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40a3ecfdbd294e29befbef41c7bb26b5~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG174.png"><br>查看完整代码看到他是请求一个路径获取数据，反问了下路径看到他是一串带坐标的json数据<br><a href="https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples/data/asset/geo/HK.json">https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples/data/asset/geo/HK.json</a></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f90bae3bbba74d87967c87fcc2aac290~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG175.png"><br>到这一步我涉及到知识盲区了，于是百度了下geoJson，发现阿里云dataV提供一个网站能获取geoJson数据<br><a href="https://datav.aliyun.com/tools/atlas/index.html#&lat=30.332329214580188&lng=106.72278672066881&zoom=3.5">https://datav.aliyun.com/tools/atlas/index.html#&amp;lat=30.332329214580188&amp;lng=106.72278672066881&amp;zoom=3.5</a></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b203bd7bba2487fa11b0a012393caaa~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG176.png"></p><p>按照demo教程，尝试实现：</p><h2 id="1-先布局一下并引入所需文件"><a href="#1-先布局一下并引入所需文件" class="headerlink" title="1. 先布局一下并引入所需文件"></a>1. 先布局一下并引入所需文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;echarts 3d map&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">      * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .echarts-map &#123;</span><br><span class="line">        position: fixed;</span><br><span class="line">        top: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        width: 100vw;</span><br><span class="line">        height: 100vh;</span><br><span class="line">        background: url(&quot;./background.png&quot;) no-repeat;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;echarts-map&quot; id=&quot;3dMap&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.1.2/echarts.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6478b29107b74383ad6b0563b836679a~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG177.png"></p><h2 id="2-地图渲染"><a href="#2-地图渲染" class="headerlink" title="2. 地图渲染"></a>2. 地图渲染</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">let mapEcharts = null;</span><br><span class="line"></span><br><span class="line">if (mapEcharts) &#123;</span><br><span class="line">    mapEcharts.dispose(); // 销毁实例，实例销毁后无法再被使用。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 初始化图表</span><br><span class="line">mapEcharts = echarts.init(document.getElementById(&quot;3dMap&quot;));</span><br><span class="line"></span><br><span class="line">// 数据请求</span><br><span class="line">// 加载效果</span><br><span class="line">mapEcharts.showLoading();</span><br><span class="line"></span><br><span class="line">$.getJSON(&#x27;https://geo.datav.aliyun.com/areas_v3/bound/100000_full.json&#x27;, jsonData =&gt; &#123;</span><br><span class="line">    // 注册地图</span><br><span class="line">    echarts.registerMap(&#x27;china&#x27;, jsonData);</span><br><span class="line"></span><br><span class="line">    // 配置</span><br><span class="line">    let options = &#123;</span><br><span class="line">        series: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: &quot;map&quot;,</span><br><span class="line">                type: &quot;map&quot;, // 地图</span><br><span class="line">                map: &#x27;china&#x27;, // 加载注册的地图</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    mapEcharts.setOption(options); // 实例配置项与数据</span><br><span class="line"></span><br><span class="line">    // 隐藏loading</span><br><span class="line">    mapEcharts.hideLoading();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7a34ba849e3a4bb6a824e6fda67862ab~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG178.png"><br>这里可以看到，地图基本已经出来了，接下来就是美化地图，在地图上能看到海南诸岛的数据，但是实际上海南诸岛的数据已经在右下角，所以我整理了一份数据<code>china.js</code>放在本地，各位大佬可以在demo中自行获取。</p><h2 id="3-美化地图"><a href="#3-美化地图" class="headerlink" title="3. 美化地图"></a>3. 美化地图</h2><p>添加地图渐变颜色以及选中颜色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">let options = &#123;</span><br><span class="line">    series: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &quot;map&quot;,</span><br><span class="line">        type: &quot;map&quot;, // 地图</span><br><span class="line">        map: mapName, // 加载注册的地图</span><br><span class="line">        selectedMode: false, // 不让单独选中</span><br><span class="line">        roam: true, // 开始鼠标事件，scale缩放、move移动</span><br><span class="line">        // 图形上的文本标签</span><br><span class="line">        label: &#123;</span><br><span class="line">          show: true,</span><br><span class="line">          color: &quot;#000a3c&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        // 地图样式</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          // 区域样式</span><br><span class="line">          areaColor: &#123;</span><br><span class="line">            type: &quot;radial&quot;,</span><br><span class="line">            x: 0.5,</span><br><span class="line">            y: 0.5,</span><br><span class="line">            r: 3,</span><br><span class="line">            colorStops: [</span><br><span class="line">              &#123;</span><br><span class="line">                offset: 0,</span><br><span class="line">                color: &quot;rgba(223, 231, 242, 1)&quot;, // 0% 处的颜色</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                offset: 1,</span><br><span class="line">                color: &quot;rgba(2, 99, 206, 1)&quot;, // 100% 处的颜色</span><br><span class="line">              &#125;,</span><br><span class="line">            ],</span><br><span class="line">            globalCoord: false, // 缺省为 false</span><br><span class="line">          &#125;,</span><br><span class="line">          borderWidth: 1, // 边框大小</span><br><span class="line">          borderColor: &quot;rgba(104, 152, 190, 1)&quot;, // 边框样式</span><br><span class="line">          shadowColor: &quot;rgba(128, 217, 248, 1)&quot;, // 阴影颜色</span><br><span class="line">          shadowOffsetX: -2, // 阴影水平方向上的偏移距离</span><br><span class="line">          shadowOffsetY: 2, // 阴影垂直方向上的偏移距离</span><br><span class="line">          shadowBlur: 10, // 文字块的背景阴影长度</span><br><span class="line">        &#125;,</span><br><span class="line">        // 选中状态下样式</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">          label: &#123;</span><br><span class="line">            color: &quot;#ffffff&quot;,</span><br><span class="line">          &#125;,</span><br><span class="line">          itemStyle: &#123;</span><br><span class="line">            areaColor: &quot;#a5d4fe&quot;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d513f81912444e94b01d22c5dd05af74~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG179.png"></p><h2 id="4-制作伪3d效果"><a href="#4-制作伪3d效果" class="headerlink" title="4. 制作伪3d效果"></a>4. 制作伪3d效果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">let options = &#123;</span><br><span class="line">    geo: &#123;</span><br><span class="line">      map: mapName, //地图类型。</span><br><span class="line">      zoom: 1,</span><br><span class="line">      roam: true,</span><br><span class="line">      animation: false,</span><br><span class="line">      itemStyle: &#123;</span><br><span class="line">        // 区域样式</span><br><span class="line">        areaColor: &#123;</span><br><span class="line">          type: &quot;radial&quot;,</span><br><span class="line">          x: 0.5,</span><br><span class="line">          y: 0.5,</span><br><span class="line">          r: 0.8,</span><br><span class="line">          colorStops: [</span><br><span class="line">            &#123;</span><br><span class="line">              offset: 0,</span><br><span class="line">              color: &quot;rgba(147, 235, 248, 1)&quot;, // 0% 处的颜色</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              offset: 1,</span><br><span class="line">              color: &quot;rgba(2, 99, 206, 1)&quot;, // 100% 处的颜色</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">          globalCoord: false, // 缺省为 false</span><br><span class="line">        &#125;,</span><br><span class="line">        shadowColor: &quot;#105781&quot;, //地图区域的阴影颜色。</span><br><span class="line">        shadowOffsetX: 0,</span><br><span class="line">        shadowOffsetY: 10,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    series: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &quot;map&quot;,</span><br><span class="line">        type: &quot;map&quot;, // 地图</span><br><span class="line">        map: mapName, // 加载注册的地图</span><br><span class="line">        selectedMode: false, // 不让单独选中</span><br><span class="line">        roam: true, // 开始鼠标事件，scale缩放、move移动</span><br><span class="line">        // 图形上的文本标签</span><br><span class="line">        label: &#123;</span><br><span class="line">          show: true,</span><br><span class="line">          color: &quot;#000a3c&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        // 地图样式</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          // 区域样式</span><br><span class="line">          areaColor: &#123;</span><br><span class="line">            type: &quot;radial&quot;,</span><br><span class="line">            x: 0.5,</span><br><span class="line">            y: 0.5,</span><br><span class="line">            r: 3,</span><br><span class="line">            colorStops: [</span><br><span class="line">              &#123;</span><br><span class="line">                offset: 0,</span><br><span class="line">                color: &quot;rgba(223, 231, 242, 1)&quot;, // 0% 处的颜色</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                offset: 1,</span><br><span class="line">                color: &quot;rgba(2, 99, 206, 1)&quot;, // 100% 处的颜色</span><br><span class="line">              &#125;,</span><br><span class="line">            ],</span><br><span class="line">            globalCoord: false, // 缺省为 false</span><br><span class="line">          &#125;,</span><br><span class="line">          borderWidth: 1, // 边框大小</span><br><span class="line">          borderColor: &quot;rgba(104, 152, 190, 1)&quot;, // 边框样式</span><br><span class="line">          shadowColor: &quot;rgba(128, 217, 248, 1)&quot;, // 阴影颜色</span><br><span class="line">          shadowOffsetX: -2, // 阴影水平方向上的偏移距离</span><br><span class="line">          shadowOffsetY: 2, // 阴影垂直方向上的偏移距离</span><br><span class="line">          shadowBlur: 10, // 文字块的背景阴影长度</span><br><span class="line">        &#125;,</span><br><span class="line">        // 选中状态下样式</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">          label: &#123;</span><br><span class="line">            color: &quot;#ffffff&quot;,</span><br><span class="line">          &#125;,</span><br><span class="line">          itemStyle: &#123;</span><br><span class="line">            areaColor: &quot;#a5d4fe&quot;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e1ee391058f4147b5f59adf6c2a72c0~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG180.png"><br>可以看到现在已经有一个类似3d的阴影效果</p><h2 id="5-实现下钻效果"><a href="#5-实现下钻效果" class="headerlink" title="5. 实现下钻效果"></a>5. 实现下钻效果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">mapEcharts.on(&quot;click&quot;, (params) =&gt; &#123;</span><br><span class="line">    // 当双击事件发生时，清除单击事件，仅响应双击事件</span><br><span class="line">    clearTimeout(timeFn);</span><br><span class="line">    timeFn = setTimeout(function () &#123;</span><br><span class="line">    if (</span><br><span class="line">      allAreaCode.filter((item) =&gt; item.name.indexOf(params.name) &gt; -1)[0]</span><br><span class="line">    ) &#123;</span><br><span class="line">      let areaCode = allAreaCode.filter(</span><br><span class="line">        (item) =&gt; item.name.indexOf(params.name) &gt; -1</span><br><span class="line">      )[0].code;</span><br><span class="line">      loadMap(</span><br><span class="line">        `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;areaCode&#125;_full.json`</span><br><span class="line">      )</span><br><span class="line">        .then((data) =&gt; &#123;</span><br><span class="line">          initMap(data, areaCode);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;</span><br><span class="line">          loadMap(</span><br><span class="line">            `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;areaCode&#125;.json`</span><br><span class="line">          )</span><br><span class="line">            .then((res) =&gt; &#123;</span><br><span class="line">              initMap(res, areaCode);</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(() =&gt; &#123;&#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      historyList.push(&#123;</span><br><span class="line">        code: areaCode,</span><br><span class="line">        name: params.name,</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      let result = [];</span><br><span class="line">      let obj = &#123;&#125;;</span><br><span class="line">      for (let i = 0; i &lt; historyList.length; i++) &#123;</span><br><span class="line">        if (!obj[historyList[i].code]) &#123;</span><br><span class="line">          result.push(historyList[i]);</span><br><span class="line">          obj[historyList[i].code] = true;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      historyList = result;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;, 250);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这里的<code>loadMap</code>为数据请求封装，<code>initMap</code>为渲染地图，后面在全部代码中会放出来。</p><p>这里主要逻辑是监听地图点击事件，通过筛选的到<code>areaCode</code>，通过<code>areaCode</code>拼接路径请求数据，这里的地址能在上面网站获取，之所以分<code>_full</code>和普通的是因为，地图数据有可能包含子区域数据，例如广东省内包含广州市、佛上市等……</p><p><code>allAreaCode</code>是我花很多时间搜集全国地区省市区code数据，这份数据可能有部分错误，懂爬虫的大佬可以直接爬上面网站的数据，处理成我的数据格式就行</p><p>地图渲染后把历史记录推进<code>historyList</code>中，后面钻出用到。</p><h2 id="5-实现钻出效果"><a href="#5-实现钻出效果" class="headerlink" title="5. 实现钻出效果"></a>5. 实现钻出效果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mapEcharts.on(&quot;dblclick&quot;, (params) =&gt; &#123;</span><br><span class="line">    // 当双击事件发生时，清除单击事件，仅响应双击事件</span><br><span class="line">    clearTimeout(timeFn);</span><br><span class="line">    if (historyList.length == 1) &#123;</span><br><span class="line">        alert(&quot;已经到达最上一级地图了&quot;);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    let map = historyList.pop();</span><br><span class="line">    if (historyList[historyList.length - 1].code == &quot;china&quot;) &#123;</span><br><span class="line">        initMap(china, &quot;china&quot;, &quot;中国&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        loadMap(</span><br><span class="line">          `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;</span><br><span class="line">            historyList[historyList.length - 1].code</span><br><span class="line">          &#125;_full.json`</span><br><span class="line">        ).then((data) =&gt; &#123;</span><br><span class="line">            initMap(data, historyList[historyList.length - 1].code);</span><br><span class="line">        &#125;).catch(() =&gt; &#123;</span><br><span class="line">        loadMap(</span><br><span class="line">          `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;</span><br><span class="line">            historyList[historyList.length - 1].code</span><br><span class="line">          &#125;.json`</span><br><span class="line">        )</span><br><span class="line">          .then((res) =&gt; &#123;</span><br><span class="line">            initMap(res, historyList[historyList.length - 1].code);</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这里采用双击钻出方式，双击时从历史记录中删除最后一个，并且取删除后数组的最后一个元素数据来渲染地图</p><h2 id="6-同步map层与geo层的鼠标事件"><a href="#6-同步map层与geo层的鼠标事件" class="headerlink" title="6. 同步map层与geo层的鼠标事件"></a>6. 同步map层与geo层的鼠标事件</h2><p>如果开启鼠标事件，会发现无论scale或者move，map层和geo层都是分开的，例如：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/15671ee2fda04c90b675618b63a2b05a~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG181.png"><br>这种情况我们可以通过事件监听来同步他们的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mapEcharts.on(&quot;georoam&quot;, (params) =&gt; &#123;</span><br><span class="line">  let option = mapEcharts.getOption(); //获得option对象</span><br><span class="line">  if (params.zoom != null &amp;&amp; params.zoom != undefined) &#123;</span><br><span class="line">    //捕捉到缩放时</span><br><span class="line">    option.geo[0].zoom = option.series[0].zoom; //下层geo的缩放等级跟着上层的geo一起改变</span><br><span class="line">    option.geo[0].center = option.series[0].center; //下层的geo的中心位置随着上层geo一起改变</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    //捕捉到拖曳时</span><br><span class="line">    option.geo[0].center = option.series[0].center; //下层的geo的中心位置随着上层geo一起改变</span><br><span class="line">  &#125;</span><br><span class="line">  mapEcharts.setOption(option); //设置option</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="7-最终代码与效果"><a href="#7-最终代码与效果" class="headerlink" title="7. 最终代码与效果"></a>7. 最终代码与效果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;echarts 3d map&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">      * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .echarts-map &#123;</span><br><span class="line">        position: fixed;</span><br><span class="line">        top: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        width: 100vw;</span><br><span class="line">        height: 100vh;</span><br><span class="line">        background: url(&quot;./background.png&quot;) no-repeat;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;echarts-map&quot; id=&quot;3dMap&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.1.2/echarts.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;./china.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;./geoAtlasJson.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    let mapEcharts = null;</span><br><span class="line">    let historyList = [];</span><br><span class="line">    let timeFn = null;</span><br><span class="line"></span><br><span class="line">    if (mapEcharts) &#123;</span><br><span class="line">      mapEcharts.dispose(); // 销毁实例，实例销毁后无法再被使用。</span><br><span class="line">    &#125;</span><br><span class="line">    // 初始化图表</span><br><span class="line">    mapEcharts = echarts.init(document.getElementById(&quot;3dMap&quot;));</span><br><span class="line"></span><br><span class="line">    historyList.push(&#123;</span><br><span class="line">      code: &quot;china&quot;,</span><br><span class="line">      name: &quot;中国&quot;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 加载效果</span><br><span class="line">    mapEcharts.showLoading();</span><br><span class="line"></span><br><span class="line">    initMap(china, &quot;china&quot;, &quot;中国&quot;);</span><br><span class="line"></span><br><span class="line">    mapEcharts.on(&quot;click&quot;, (params) =&gt; &#123;</span><br><span class="line">      // 当双击事件发生时，清除单击事件，仅响应双击事件</span><br><span class="line">      clearTimeout(timeFn);</span><br><span class="line">      timeFn = setTimeout(function () &#123;</span><br><span class="line">        if (</span><br><span class="line">          allAreaCode.filter((item) =&gt; item.name.indexOf(params.name) &gt; -1)[0]</span><br><span class="line">        ) &#123;</span><br><span class="line">          let areaCode = allAreaCode.filter(</span><br><span class="line">            (item) =&gt; item.name.indexOf(params.name) &gt; -1</span><br><span class="line">          )[0].code;</span><br><span class="line">          loadMap(</span><br><span class="line">            `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;areaCode&#125;_full.json`</span><br><span class="line">          )</span><br><span class="line">            .then((data) =&gt; &#123;</span><br><span class="line">              initMap(data, areaCode);</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(() =&gt; &#123;</span><br><span class="line">              loadMap(</span><br><span class="line">                `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;areaCode&#125;.json`</span><br><span class="line">              )</span><br><span class="line">                .then((res) =&gt; &#123;</span><br><span class="line">                  initMap(res, areaCode);</span><br><span class="line">                &#125;)</span><br><span class="line">                .catch(() =&gt; &#123;&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">          historyList.push(&#123;</span><br><span class="line">            code: areaCode,</span><br><span class="line">            name: params.name,</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          let result = [];</span><br><span class="line">          let obj = &#123;&#125;;</span><br><span class="line">          for (let i = 0; i &lt; historyList.length; i++) &#123;</span><br><span class="line">            if (!obj[historyList[i].code]) &#123;</span><br><span class="line">              result.push(historyList[i]);</span><br><span class="line">              obj[historyList[i].code] = true;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          historyList = result;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, 250);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    mapEcharts.on(&quot;dblclick&quot;, (params) =&gt; &#123;</span><br><span class="line">      // 当双击事件发生时，清除单击事件，仅响应双击事件</span><br><span class="line">      clearTimeout(timeFn);</span><br><span class="line">      if (historyList.length == 1) &#123;</span><br><span class="line">        alert(&quot;已经到达最上一级地图了&quot;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      let map = historyList.pop();</span><br><span class="line">      console.log(historyList[historyList.length - 1])</span><br><span class="line">      if (historyList[historyList.length - 1].code == &quot;china&quot;) &#123;</span><br><span class="line">        initMap(china, &quot;china&quot;, &quot;中国&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        loadMap(</span><br><span class="line">          `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;</span><br><span class="line">            historyList[historyList.length - 1].code</span><br><span class="line">          &#125;_full.json`</span><br><span class="line">        )</span><br><span class="line">          .then((data) =&gt; &#123;</span><br><span class="line">            initMap(data, historyList[historyList.length - 1].code);</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(() =&gt; &#123;</span><br><span class="line">            loadMap(</span><br><span class="line">              `https://geo.datav.aliyun.com/areas_v3/bound/$&#123;</span><br><span class="line">                historyList[historyList.length - 1].code</span><br><span class="line">              &#125;.json`</span><br><span class="line">            )</span><br><span class="line">              .then((res) =&gt; &#123;</span><br><span class="line">                initMap(res, historyList[historyList.length - 1].code);</span><br><span class="line">              &#125;)</span><br><span class="line">              .catch(() =&gt; &#123;&#125;);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    mapEcharts.on(&quot;georoam&quot;, (params) =&gt; &#123;</span><br><span class="line">      let option = mapEcharts.getOption(); //获得option对象</span><br><span class="line">      if (params.zoom != null &amp;&amp; params.zoom != undefined) &#123;</span><br><span class="line">        //捕捉到缩放时</span><br><span class="line">        option.geo[0].zoom = option.series[0].zoom; //下层geo的缩放等级跟着上层的geo一起改变</span><br><span class="line">        option.geo[0].center = option.series[0].center; //下层的geo的中心位置随着上层geo一起改变</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        //捕捉到拖曳时</span><br><span class="line">        option.geo[0].center = option.series[0].center; //下层的geo的中心位置随着上层geo一起改变</span><br><span class="line">      &#125;</span><br><span class="line">      mapEcharts.setOption(option); //设置option</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 地图数据请求</span><br><span class="line">    async function loadMap(url, pathName) &#123;</span><br><span class="line">      return await $.getJSON(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 地图初始化</span><br><span class="line">    function initMap(mapData, mapName) &#123;</span><br><span class="line">      // 注册地图</span><br><span class="line">      echarts.registerMap(mapName, mapData);</span><br><span class="line"></span><br><span class="line">      // 配置项</span><br><span class="line">      let options = &#123;</span><br><span class="line">        geo: &#123;</span><br><span class="line">          map: mapName, //地图类型。</span><br><span class="line">          zoom: 1,</span><br><span class="line">          roam: true,</span><br><span class="line">          animation: false,</span><br><span class="line">          itemStyle: &#123;</span><br><span class="line">            // 区域样式</span><br><span class="line">            areaColor: &#123;</span><br><span class="line">              type: &quot;radial&quot;,</span><br><span class="line">              x: 0.5,</span><br><span class="line">              y: 0.5,</span><br><span class="line">              r: 0.8,</span><br><span class="line">              colorStops: [</span><br><span class="line">                &#123;</span><br><span class="line">                  offset: 0,</span><br><span class="line">                  color: &quot;rgba(147, 235, 248, 1)&quot;, // 0% 处的颜色</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  offset: 1,</span><br><span class="line">                  color: &quot;rgba(2, 99, 206, 1)&quot;, // 100% 处的颜色</span><br><span class="line">                &#125;,</span><br><span class="line">              ],</span><br><span class="line">              globalCoord: false, // 缺省为 false</span><br><span class="line">            &#125;,</span><br><span class="line">            shadowColor: &quot;#105781&quot;, //地图区域的阴影颜色。</span><br><span class="line">            shadowOffsetX: 0,</span><br><span class="line">            shadowOffsetY: 10,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line">            name: &quot;map&quot;,</span><br><span class="line">            type: &quot;map&quot;, // 地图</span><br><span class="line">            map: mapName, // 加载注册的地图</span><br><span class="line">            selectedMode: false, // 不让单独选中</span><br><span class="line">            roam: true, // 开始鼠标事件，scale缩放、move移动</span><br><span class="line">            // 图形上的文本标签</span><br><span class="line">            label: &#123;</span><br><span class="line">              show: true,</span><br><span class="line">              color: &quot;#000a3c&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            // 地图样式</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              // 区域样式</span><br><span class="line">              areaColor: &#123;</span><br><span class="line">                type: &quot;radial&quot;,</span><br><span class="line">                x: 0.5,</span><br><span class="line">                y: 0.5,</span><br><span class="line">                r: 3,</span><br><span class="line">                colorStops: [</span><br><span class="line">                  &#123;</span><br><span class="line">                    offset: 0,</span><br><span class="line">                    color: &quot;rgba(223, 231, 242, 1)&quot;, // 0% 处的颜色</span><br><span class="line">                  &#125;,</span><br><span class="line">                  &#123;</span><br><span class="line">                    offset: 1,</span><br><span class="line">                    color: &quot;rgba(2, 99, 206, 1)&quot;, // 100% 处的颜色</span><br><span class="line">                  &#125;,</span><br><span class="line">                ],</span><br><span class="line">                globalCoord: false, // 缺省为 false</span><br><span class="line">              &#125;,</span><br><span class="line">              borderWidth: 1, // 边框大小</span><br><span class="line">              borderColor: &quot;rgba(104, 152, 190, 1)&quot;, // 边框样式</span><br><span class="line">              shadowColor: &quot;rgba(128, 217, 248, 1)&quot;, // 阴影颜色</span><br><span class="line">              shadowOffsetX: -2, // 阴影水平方向上的偏移距离</span><br><span class="line">              shadowOffsetY: 2, // 阴影垂直方向上的偏移距离</span><br><span class="line">              shadowBlur: 10, // 文字块的背景阴影长度</span><br><span class="line">            &#125;,</span><br><span class="line">            // 选中状态下样式</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">              label: &#123;</span><br><span class="line">                color: &quot;#ffffff&quot;,</span><br><span class="line">              &#125;,</span><br><span class="line">              itemStyle: &#123;</span><br><span class="line">                areaColor: &quot;#a5d4fe&quot;,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;;</span><br><span class="line">      mapEcharts.setOption(options); // 实例配置项与数据</span><br><span class="line"></span><br><span class="line">      // 隐藏loading</span><br><span class="line">      mapEcharts.hideLoading();</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>demo github地址：<a href="https://github.com/ljnMeow/echarts-map">https://github.com/ljnMeow/echarts-map</a></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1d25338abfd44b13b0211e78cbe8c28e~tplv-k3u1fbpfcp-watermark.image" alt="效果图.gif"></p><h2 id="8-最后的话"><a href="#8-最后的话" class="headerlink" title="8. 最后的话"></a>8. 最后的话</h2><p>在制作这份demo时其实是花了挺多时间的，最开始是想通过<code>echarts-gl</code>直接实现一个3d地图，但通过官方文档来看<code>echarts-gl</code>的<code>map3d</code>好像不支持渐变背景，所以就直接放弃了，其次就是搜集省市区所有数据花费的时间，不得不感叹我们大华夏是真的地大物博。</p><p>最后希望这份教程对各位有帮助，觉得ok的话麻烦留个赞👍，或者github给点star🌟也行🙏。</p><p>祝各位大佬步步高升🧨</p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Echarts </tag>
            
            <tag> 地图 </tag>
            
            <tag> 可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cordova热更新与App更新</title>
      <link href="/posts/47b24aa1/"/>
      <url>/posts/47b24aa1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>cordova热更新分为两部分，网页静态内容更新和cordova插件更新，网页静态内容是基于cordova运行的，例如第三方登陆QQ、微信需要集成QQ、微信的插件才能实现</p></blockquote><h2 id="集成更新热更新插件"><a href="#集成更新热更新插件" class="headerlink" title="集成更新热更新插件"></a>集成更新热更新插件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加插件</span></span><br><span class="line">cordova plugin add cordova-hot-code-push-plugin</span><br><span class="line"><span class="comment">// 全局安装热更新工具</span></span><br><span class="line">npm或cnpm install -g cordova-hot-code-push-cli</span><br><span class="line"><span class="comment">// 在cordova根目录上执行命令添加cordova-hcp.json文件，该文件是热更新文件chcp.json的模版</span></span><br><span class="line">cordova-hcp init</span><br><span class="line"></span><br><span class="line"><span class="title class_">Running</span> init</span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="title class_">Enter</span> project name (required):  cordovaVueDemo  <span class="comment">// 项目名称</span></span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="title class_">Amazon</span> <span class="variable constant_">S3</span> <span class="title class_">Bucket</span> name (required <span class="keyword">for</span> cordova-hcp deploy):  <span class="comment">// 亚马逊S3储存桶名字，可以跳过</span></span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="title class_">Path</span> <span class="keyword">in</span> <span class="variable constant_">S3</span> bucket (optional <span class="keyword">for</span> cordova-hcp deploy):  <span class="comment">// S3储存桶路径，可以跳过</span></span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="title class_">Amazon</span> <span class="variable constant_">S3</span> region (required <span class="keyword">for</span> cordova-hcp deploy):  (us-east-<span class="number">1</span>)  <span class="comment">// 亚马逊S3地区，可以跳过</span></span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="variable constant_">IOS</span> app <span class="attr">identifier</span>:  <span class="comment">// IOS应用程序商店的应用程序ID。App升级是跳转应用商店进行升级</span></span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="title class_">Android</span> app <span class="attr">identifier</span>:  <span class="comment">// Android App在应用商城的地址，或者App的下载地址</span></span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="title class_">Update</span> method (required):  (resume) start <span class="comment">// 执行更新的方法 start(启动应用程序时)  resume(恢复应用程序时，比如从控制台切换到前景)  now(下载完更新立即安装)</span></span><br><span class="line"><span class="title class_">Please</span> <span class="attr">provide</span>: <span class="title class_">Enter</span> full <span class="variable constant_">URL</span> to directory where cordova-hcp build result will be <span class="attr">uploaded</span>:  <span class="attr">http</span>:<span class="comment">//xxxxxx.com/www  // www资源文件在服务器上的地址</span></span><br><span class="line"><span class="title class_">Project</span> initialized and cordova-hcp.<span class="property">json</span> file created.</span><br><span class="line"><span class="title class_">If</span> you wish to exclude files <span class="keyword">from</span> being published, specify them <span class="keyword">in</span> .<span class="property">chcpignore</span></span><br><span class="line"><span class="title class_">Before</span> you can push updates you need to run <span class="string">&quot;cordova-hcp login&quot;</span> <span class="keyword">in</span> project directory</span><br><span class="line"></span><br><span class="line"><span class="comment">// 另外生成cordova-hcp.json文件后还需要在文件中添加&quot;autogenerated&quot;: true</span></span><br><span class="line"><span class="comment">// 如果不添加更新将无效，操作完成后完整的cordova-hcp.json文件应该是这样</span></span><br><span class="line"><span class="comment">// 添加iosMinVersion、androidVersion以控制App版本，插件更新需要重装app才能生效</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;cordovaVueDemo&quot;</span>, <span class="comment">// 可为空</span></span><br><span class="line">  <span class="string">&quot;autogenerated&quot;</span>: <span class="literal">true</span>, <span class="comment">// 如果不添加，热更新会不能使用</span></span><br><span class="line">  <span class="string">&quot;ios_identifier&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="comment">// 应用在App store id(可为空)</span></span><br><span class="line">  <span class="string">&quot;android_identifier&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="comment">// 应用在应用商城上的地址或者App的下载地址(可为空)</span></span><br><span class="line">  <span class="string">&quot;update&quot;</span>: <span class="string">&quot;start&quot;</span>, <span class="comment">// 在应用启动时安装</span></span><br><span class="line">  <span class="string">&quot;content_url&quot;</span>: <span class="string">&quot;http://xxxxxx/cordova/www&quot;</span>, <span class="comment">// www文件在服务器上的地址</span></span><br><span class="line">  <span class="string">&quot;iosMinVersion&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>, <span class="comment">// ios版本，通过这个判断是否需要重新下载app，一般是更新了cordova插件才需要改变这个</span></span><br><span class="line">  <span class="string">&quot;androidVersion&quot;</span>: <span class="string">&quot;1.0.0&quot;</span> <span class="comment">// android版本，通过这个判断是否需要重新下载app，一般是更新了cordova插件才需要改变这个</span></span><br><span class="line">  <span class="string">&quot;updateLog&quot;</span>: <span class="string">&quot;更新日志&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在WWW文件夹生成chcp-json和chcp-mainfest文件"><a href="#在WWW文件夹生成chcp-json和chcp-mainfest文件" class="headerlink" title="在WWW文件夹生成chcp.json和chcp.mainfest文件"></a>在WWW文件夹生成chcp.json和chcp.mainfest文件</h2><ul><li><p>chcp.json  包含cordova-hcp.json模版中的信息、最新发布信息、资源时间、native side版本号</p></li><li><p>chcp.mainfest  包含热更新静态文件信息(资源文件名和对应的hash值，更新的时候会通过对应的hash值来匹配对应的文件达到精确更新)</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 执行命令</span></span><br><span class="line">cordova-hcp build</span><br><span class="line"><span class="comment">// 执行完命令会在模版当中添加&quot;release&quot;:&quot;当前时间&quot;字段，我们判断更新时就是通过这个字段进行判断</span></span><br><span class="line"><span class="string">&quot;release&quot;</span>: <span class="string">&quot;2021.06.17-16.30.20&quot;</span>, <span class="comment">// 唯一web项目版本号,用与热更新web内容的更新。（必需） </span></span><br></pre></td></tr></table></figure><h2 id="config-xml配置"><a href="#config-xml配置" class="headerlink" title="config.xml配置"></a>config.xml配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在config.xml下方找个位置添加</span></span><br><span class="line">&lt;chcp&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">config-file</span> <span class="attr">url</span>=<span class="string">&quot;http://xxxxxx/cordova/www/chcp.json&quot;</span> /&gt;</span></span> <span class="comment">// 配置文件 chcp.json 从服务器上加载的路径（必须的配置项）</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">auto-download</span> <span class="attr">enabled</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span> <span class="comment">// 是否自动下载更新，默认为true，因为我是通过方法手动更新的，所以设置为false</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">auto-install</span> <span class="attr">enabled</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span> <span class="comment">// 是否自动安装更新，默认为true，因为我是通过方法手动更新的，所以设置为false</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">native-interface</span> <span class="attr">version</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span> <span class="comment">// 当前 native side 的版本号</span></span><br><span class="line">&lt;/chcp&gt; </span><br></pre></td></tr></table></figure><h2 id="热更新部署"><a href="#热更新部署" class="headerlink" title="热更新部署"></a>热更新部署</h2><p>在这一步直接将www文件夹里的文件替换服务器上的，需要注意的是www文件在服务地地址一定要与<code>&quot;content_url&quot;:&quot;http://************/cordova/www&quot;</code>和config.xml中<code>&lt;config-file url=&quot;https://************/cordova/www/chcp.json&quot; /&gt;</code> 填写的地址一致，这是后重启App，热更新就应该能正常执行，但是我们将”auto-download” 和 “auto-install”设置为false，所以更新不会自动执行，所以我们接下来就要编写更新逻辑</p><h2 id="更新逻辑编辑"><a href="#更新逻辑编辑" class="headerlink" title="更新逻辑编辑"></a>更新逻辑编辑</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 我使用的是vue项目，所以我的写法就按照vue的来</span></span><br><span class="line"><span class="comment">// 创建util.js文件</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Util</span> &#123;</span><br><span class="line">  <span class="comment">// 配置热更新服务地址</span></span><br><span class="line">  <span class="title function_">chcpConfigure</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      chcp.<span class="title function_">configure</span>(</span><br><span class="line">        &#123; <span class="string">&quot;config-file&quot;</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_CHCP_SERVER</span> &#125;,</span><br><span class="line">        <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="title class_">Toast</span>(<span class="string">&quot;热更新地址配置出错&quot;</span>);</span><br><span class="line">            <span class="title function_">reject</span>();</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 获取热更新版本号</span></span><br><span class="line">  <span class="title function_">chcpGetVersion</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      chcp.<span class="title function_">getVersionInfo</span>(<span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="title function_">reject</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 检查服务器是否存在更新</span></span><br><span class="line">  <span class="title function_">chcpFetchUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      chcp.<span class="title function_">fetchUpdate</span>(<span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="title function_">reject</span>(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 安装已下载更新</span></span><br><span class="line">  <span class="title function_">chcpInstallUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      chcp.<span class="title function_">installUpdate</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="title function_">reject</span>(err)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">resolve</span>()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Util</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在App.vue文件中编写逻辑</span></span><br><span class="line"><span class="keyword">import</span> util <span class="keyword">from</span> <span class="string">&quot;@/common/util&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">getAppChcpVersion</span>(<span class="params"></span>) &#123;</span><br><span class="line">      util.<span class="title function_">chcpGetVersion</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">versionData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">checkedAppUpdate</span>(versionData, <span class="number">0</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">checkedAppUpdate</span>(<span class="params">versionData, type</span>) &#123;</span><br><span class="line">      <span class="comment">// type 0 自动检测  1 手动更新</span></span><br><span class="line">      <span class="keyword">const</span> self = <span class="variable language_">this</span>;</span><br><span class="line">      <span class="comment">// getOnlineVersion 函数是直接用axios.get方法请求线上服务器www的chcp.json文件，获取到里面的数据，用来对比</span></span><br><span class="line">      <span class="title function_">getOnlineVersion</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> iosMinVersion = <span class="title class_">Number</span>(res.<span class="property">iosMinVersion</span>.<span class="title function_">replace</span>(<span class="regexp">/\./g</span>, <span class="string">&quot;&quot;</span>)),</span><br><span class="line">          androidVersion = <span class="title class_">Number</span>(res.<span class="property">androidVersion</span>.<span class="title function_">replace</span>(<span class="regexp">/\./g</span>, <span class="string">&quot;&quot;</span>)),</span><br><span class="line">          appVersion = <span class="title class_">Number</span>(versionData.<span class="property">appVersion</span>.<span class="title function_">replace</span>(<span class="regexp">/\./g</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="comment">// 判断允许增量还是必须下载完整App</span></span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          (util.<span class="title function_">isAndroid</span>() &amp;&amp; appVersion &lt; androidVersion) ||</span><br><span class="line">          (util.<span class="title function_">isIos</span>() &amp;&amp; appVersion &lt; iosMinVersion)</span><br><span class="line">        ) &#123;</span><br><span class="line">          self.<span class="property">$dialog</span></span><br><span class="line">            .<span class="title function_">alert</span>(&#123;</span><br><span class="line">              <span class="attr">title</span>: <span class="string">&quot;标题&quot;</span>,</span><br><span class="line">              <span class="attr">message</span>: <span class="string">&quot;请前往并下载完整App&quot;</span>,</span><br><span class="line">              <span class="attr">theme</span>: <span class="string">&quot;round-button&quot;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;app下载地址&quot;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (versionData.<span class="property">currentWebVersion</span> != res.<span class="property">release</span>) &#123;</span><br><span class="line">            <span class="comment">// 判断是否强制更新</span></span><br><span class="line">            <span class="keyword">if</span> (res.<span class="property">updateType</span> == <span class="number">1</span>) &#123;</span><br><span class="line">              self.$toast(&#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&quot;系统强制更新！！！&quot;</span>,</span><br><span class="line">                <span class="title function_">onClose</span>(<span class="params"></span>) &#123;</span><br><span class="line">                  self.<span class="title function_">checkedHasFetchUpdate</span>();</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              self.<span class="property">$dialog</span></span><br><span class="line">                .<span class="title function_">confirm</span>(&#123;</span><br><span class="line">                  <span class="attr">title</span>: <span class="string">&quot;软件更新&quot;</span>,</span><br><span class="line">                  <span class="attr">message</span>: res.<span class="property">updateLog</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                  self.<span class="title function_">checkedHasFetchUpdate</span>();</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">checkedHasFetchUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$toast</span>.<span class="title function_">loading</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&quot;更新中...&quot;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">0</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      util</span><br><span class="line">        .<span class="title function_">chcpFetchUpdate</span>()</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">          util</span><br><span class="line">            .<span class="title function_">chcpInstallUpdate</span>()</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="variable language_">this</span>.$toast(<span class="string">&quot;成功安装更新&quot;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">              <span class="variable language_">this</span>.$toast(<span class="string">&quot;更新安装出错&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">          <span class="variable language_">this</span>.$toast(<span class="string">&quot;更新包获取失败&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(</span><br><span class="line">      <span class="string">&quot;deviceready&quot;</span>,</span><br><span class="line">      <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getAppChcpVersion</span>();</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="literal">false</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 如果没问题的话到了这一步热更新就能正常执行，打开App时就会执行方法，有更新的话就会弹出提示要求更新 </span></span><br></pre></td></tr></table></figure><h2 id="热更新方法"><a href="#热更新方法" class="headerlink" title="热更新方法"></a>热更新方法</h2><table><thead><tr><th>方法名称</th><th>回调参数</th><th>说明</th></tr></thead><tbody><tr><td>chcp.isUpdateAvailableForInstallation</td><td>(error, data)</td><td>判断是否存在已下载完成的更新可用于安装</td></tr><tr><td>chcp.fetchUpdate</td><td>(error, data)</td><td>获取服务器版本状态，如存在更新，则下载更新文件</td></tr><tr><td>chcp.installUpdate</td><td>(error)</td><td>安装已下载的更新</td></tr></tbody></table><h2 id="热更新事件"><a href="#热更新事件" class="headerlink" title="热更新事件"></a>热更新事件</h2><table><thead><tr><th>事件名称</th><th>说明</th></tr></thead><tbody><tr><td>chcp_updateIsReadyToInstall</td><td>新版本成功下载，准备更新</td></tr><tr><td>chcp_updateLoadFailed</td><td>插件无法从服务器中获取更新数据</td></tr><tr><td>chcp_nothingToUpdate</td><td>插件从成功服务器中获取更新数据配置，但不存在新版本</td></tr><tr><td>chcp_beforeInstall</td><td>更新安装前</td></tr><tr><td>chcp_updateInstalled</td><td>更新成功安装后</td></tr><tr><td>chcp_updateInstallFailed</td><td>安装更新出错</td></tr><tr><td>chcp_nothingToInstall</td><td>未安装任何更新；可能是未先下载更新内容</td></tr><tr><td>chcp_beforeAssetsInstalledOnExternalStorage</td><td>插件准备下载更新内容到存储中</td></tr><tr><td>chcp_assetsInstalledOnExternalStorage</td><td>插件成功下载更新内容到存储中</td></tr><tr><td>chcp_assetsInstallationError</td><td>插件下载更新内容出错；可能是因为存储空间不足等原因</td></tr></tbody></table><h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><table><thead><tr><th>错误代码</th><th>错误名称</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>NOTHING_TO_INSTALL</td><td>发送了安装更新的请求，但未找到任何更新内容</td></tr><tr><td>2</td><td>NOTHING_TO_UPDATE</td><td>不存在更新内容</td></tr><tr><td>-1</td><td>FAILED_TO_DOWNLOAD_APPLICATION_CONFIG</td><td>无法从服务器中下载更新配置文件；可能是配置文件不存在或存在网络问题</td></tr><tr><td>-2</td><td>APPLICATION_BUILD_VERSION_TOO_LOW</td><td>客户端版本低于更新要求；需重新下载新版本的APK或IPA</td></tr><tr><td>-3</td><td>FAILED_TO_DOWNLOAD_CONTENT_MANIFEST</td><td>下载更新内容校验文件出错；可能是content_url配置错误导致</td></tr><tr><td>-4</td><td>FAILED_TO_DOWNLOAD_UPDATE_FILES</td><td>检查chcp.manifest，里面罗列的所有文件必须放在服务器对应位置，而且每个文件的校验值必须和chcp.manifest里面的一致</td></tr><tr><td>-5</td><td>FAILED_TO_MOVE_LOADED_FILES_TO_INSTALLATION_FOLDER</td><td>移动下载的更新文件到安装目录时出错，可能是因为设备空间不足</td></tr><tr><td>-6</td><td>UPDATE_IS_INVALID</td><td>下载的更新包无效；可能是因为下载的文件和chcp.manifest里面的校验值不一致导致的</td></tr><tr><td>-7</td><td>FAILED_TO_COPY_FILES_FROM_PREVIOUS_RELEASE</td><td>从旧版本中拷贝www目录到新版本目录时出错，可能是因为设备空间不足</td></tr><tr><td>-8</td><td>FAILED_TO_COPY_NEW_CONTENT_FILES</td><td>复制新文件到安装目录出错，可能是因为设备空间不足</td></tr><tr><td>-9</td><td>LOCAL_VERSION_OF_APPLICATION_CONFIG_NOT_FOUND</td><td>从存储空间读取配置文件时出错；可能是因为配置文件被手动删除了；插件将读取上次配置</td></tr><tr><td>-10</td><td>LOCAL_VERSION_OF_MANIFEST_NOT_FOUND</td><td>从存储空间读取校验文件时出错；可能是因为校验文件被手动删除了；插件将读取上次配置</td></tr><tr><td>-11</td><td>LOADED_VERSION_OF_APPLICATION_CONFIG_NOT_FOUND</td><td>读取新版本的配置文件出错；发生在安装更新过程中；可能原因是用户手动删除了该文件；该文件夹将在下次App运行时还原</td></tr><tr><td>-12</td><td>LOADED_VERSION_OF_MANIFEST_NOT_FOUND</td><td>读取新版本的校验文件出错；发生在安装更新过程中；可能原因是用户手动删除了该文件；该文件夹将在下次App运行时还原</td></tr><tr><td>-13</td><td>FAILED_TO_INSTALL_ASSETS_ON_EXTERNAL_STORAGE</td><td>从安装目录复制www文件夹到存储卡时出错；可能是因为存储空间不足；发生在应用第一次启动的时候；该错误将导致插件无法正常工作</td></tr><tr><td>-14</td><td>CANT_INSTALL_WHILE_DOWNLOAD_IN_PROGRESS</td><td>在下载的过程中调用了安装更新的命令；必须得等下载完成后才可以调用安装命令</td></tr><tr><td>-15</td><td>CANT_DOWNLOAD_UPDATE_WHILE_INSTALLATION_IN_PROGRESS</td><td>在安装的过程中调用了下载更新的命令；必须得等安装完成后才可以调用下载命令</td></tr><tr><td>-16</td><td>INSTALLATION_ALREADY_IN_PROGRESS</td><td>在安装过程中又再次调用了安装命令</td></tr><tr><td>-17</td><td>DOWNLOAD_ALREADY_IN_PROGRESS</td><td>在下载过程中又再次调用了下载命令</td></tr><tr><td>-18</td><td>ASSETS_FOLDER_IN_NOT_YET_INSTALLED</td><td>在应用第一次启动的时候，插件正在复制www文件到存储空间的时候，调用了chcp 热更新的方法</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> cordova </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cordova </tag>
            
            <tag> Vue </tag>
            
            <tag> Hybird App </tag>
            
            <tag> App 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手把手将Cordova应用上架App Store</title>
      <link href="/posts/7e873fc6/"/>
      <url>/posts/7e873fc6/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>上架ios应用需要准备几样东西</p><ol><li><p>一台装有XCode的MacBook电脑，用来编译项目</p></li><li><p>注册Apple Developer 个人账号，在找掌握Apple Developer企业账号的人，叫他把你加进组织，这样你就能用你自己的账号操作</p></li><li><p>一台苹果手机，主要用来真机测试</p></li></ol><h2 id="创建证书请求文件"><a href="#创建证书请求文件" class="headerlink" title="创建证书请求文件"></a>创建证书请求文件</h2><p>证书请求文件，一般称呼为CSR，一会请求证书需要用到这个东西，首先打开应用程序 &gt; 实用工具 &gt; 钥匙串访问.app，左上角点击钥匙串访问 &gt; 证书助理 &gt; 从证书颁发机构请求证书…，如下图所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68878689f8804ce1a78751318cacdeff~tplv-k3u1fbpfcp-watermark.image" alt="WeChat9afe26fb996f8f93dd742597766da134.png"></p><p>在如下图界面，用户电子邮件地址：填你开发者账号注册邮箱，常用名称：随便起但是要方便寻找，选择储存在磁盘(CA电子邮件地址就不用填了)，放到桌面上，最好跟项目放到一起</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9c7a2628130c43878adf969257a27762~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG777.png"></p><p>有CSR之后就可以去苹果开发中心生成证书了</p><h2 id="登陆苹果开发者中心生成证书"><a href="#登陆苹果开发者中心生成证书" class="headerlink" title="登陆苹果开发者中心生成证书"></a>登陆苹果开发者中心生成证书</h2><p>登陆开发者中心后看到如下界面，点击下面框框的那块</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d58f5be117144a7094387ee3782f2fb5~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG778.png"></p><p>申请证书</p><p>一下操作需要执行两次，因为我们需要一个测试证书和一个发布证书</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/15785d91d2da41cfa37bbb8998beb873~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG779.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8dbf1015e2d43bc965d9b51710ab7a7~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG780.png"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a117f50ce08b489b96f1ed31f32faf61~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG781.png"></p><p>点击download将证书下载到本地</p><p>注意：证书下载到本地后一定要双击一下导入钥匙串里面</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/42ee675c0a20418f9b859e70998c1f80~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG782.png"></p><h2 id="注册App-Identiifier"><a href="#注册App-Identiifier" class="headerlink" title="注册App Identiifier"></a>注册App Identiifier</h2><p>只有注册了App Id，你才可以在App Store Connect中新建App</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/661e9c6734ae4f5bace4052bafb3751e~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG783.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4acacc5703ee4048adb27b598e447177~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG784.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1703579a102b4f43a88cc4725aa80a28~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG785.png"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/279512fdcaed4f3a90513672f6db81c4~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG786.png"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5bb09c14c467407487b72413f43ec339~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG787.png"></p><p>点击Register，App Id注册成功</p><h2 id="注册真机测试所用的设备"><a href="#注册真机测试所用的设备" class="headerlink" title="注册真机测试所用的设备"></a>注册真机测试所用的设备</h2><p>真机测试所用的设备必须在开发者中心注册，否则应用装不上去</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a4e778ad08342ff8ad64bd7559a5047~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG788.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/682959974b704d0990cff6184aaa53c3~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG792.png"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a50af4167baf4698bd5bdb1a1db5f99c~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG790.png"></p><p>点击Register注册成功</p><h2 id="注册配置文件"><a href="#注册配置文件" class="headerlink" title="注册配置文件"></a>注册配置文件</h2><p>该操作同上面一样也需要执行两次，分别用测试证书和发布证书注册debug和release的配置文件，生成的文件需要鼠标双击导入XCode，要不然配置时选不到</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/159abb8cf1734beba7603ba65a976cec~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG793.jpeg"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7e28124d1d774a4b8de2174f2cb4d033~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG794.png"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/55d62cc2db44498a8ad4fe2e92f8b6b3~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG795.png"></p><p>点击确定后就能download配置文件，download下载后记住一定要双击导入XCode</p><h2 id="在App-Store-connect中创建新的App"><a href="#在App-Store-connect中创建新的App" class="headerlink" title="在App Store connect中创建新的App"></a>在App Store connect中创建新的App</h2><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d49416e191646eaa8b643d2411ef860~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG809.jpeg"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1506a19d6fba4957a50c594a5c2e7f86~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG810.png"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e87c1fcef28b4d9085235ffa132d9f44~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG811.png"></p><p>创建成功后里面的信息能填的尽量填下，要不会提交不了，里面还有一个构建版本，这个是需要在XCode中打包最后由XCode传上来的</p><h2 id="Xcode构建应用"><a href="#Xcode构建应用" class="headerlink" title="Xcode构建应用"></a>Xcode构建应用</h2><p>在构建应用时说明下，苹果官方发出的声明说：2020年3月之前已经上线的项目，可以继续使用UIWebView继续迭代版本，每次提交审核会收到苹果的警告邮件；2020年3月之后的项目，必须使用WKWebView，提交审核才能通过，不然提示二进制数据错误。详情苹果官方说明点击下面链接</p><p>ITMS-90809: Deprecated API Usage - Apple will stop accepting submissions of new apps that use UIWebView APIs starting from April 2020. See <a href="https://links.jianshu.com/go?to=https://developer.apple.com/documentation/uikit/uiwebview">https://developer.apple.com/documentation/uikit/uiwebview</a> for more information.</p><p>在cordova-ios6.1.0之前我们是通过一个官方插件将UIWebview转成WKWebview，用法如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-wkwebview-engine</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在config.xml做出加入配置</span></span><br><span class="line">&lt;preference name=<span class="string">&quot;WKWebViewOnly&quot;</span> value=<span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">feature</span> <span class="attr">name</span>=<span class="string">&quot;CDVWKWebViewEngine&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ios-package&quot;</span> <span class="attr">value</span>=<span class="string">&quot;CDVWKWebViewEngine&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">feature</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">&quot;CordovaWebViewEngine&quot;</span> <span class="attr">value</span>=<span class="string">&quot;CDVWKWebViewEngine&quot;</span> /&gt;</span></span> </span><br></pre></td></tr></table></figure><p>cordova-ios6.1.0之后已经将UIWebview完全剔除，所以不需要上面那个插件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova platform add ios@<span class="number">6.1</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>在使用WKWebview时候，我们会发现请求接口或者获取手机本地图片会发生跨域，这是因为WKWebview安全机制的问题，原先UIWebview是支持跨域的，接口请求的跨域我们可以通过后台配置跨域请求，手机本地图片跨域我们在XCode中找到CDVWKWebViewEngine.m文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在这个文件中找到这个方法</span></span><br><span class="line">- (<span class="title class_">WKWebViewConfiguration</span>*) <span class="attr">createConfigurationFromSettings</span>:(<span class="title class_">NSDictionary</span>*)settings</span><br><span class="line">&#123;    </span><br><span class="line">    <span class="title class_">WKWebViewConfiguration</span>* configuration = [[<span class="title class_">WKWebViewConfiguration</span> alloc] init];</span><br><span class="line">    ...</span><br><span class="line">    这里还有一部分代码，不用删除</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//在return上面添加下面两行代码</span></span><br><span class="line">    [configuration.<span class="property">preferences</span> <span class="attr">setValue</span>:@<span class="variable constant_">YES</span> <span class="attr">forKey</span>:@<span class="string">&quot;allowFileAccessFromFileURLs&quot;</span>];</span><br><span class="line">    [configuration <span class="attr">setValue</span>:@<span class="variable constant_">YES</span> <span class="attr">forKey</span>:@<span class="string">&quot;_allowUniversalAccessFromFileURLs&quot;</span>];</span><br><span class="line">    <span class="keyword">return</span> configuration;</span><br><span class="line">&#125;</span><br><span class="line">解决跨域问题，<span class="title class_">Cookie</span>获取不到的情况。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进去 platform  &gt;  ios目录，这里就是整个cordova-ios项目，在开始之前我们先把一些能做的东西做了，在这个目录下进入  项目名 &gt; Images.xcassets目录，这里存放的是应用的图表以及启动图，在这里我们把应用图表给替换了，我使用的是一款叫Asset Catalog Creator的软件，导入一张1024*1024的图片就可以生成我们项目所需要的App icon，我们把它生成的AppIcon.appiconset文件夹替换掉原来的AppIcon.appiconset文件夹，这样icon就配置完成了</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4ac8494e532146689c26f9a6c1436bc8~tplv-k3u1fbpfcp-watermark.image" alt="WeChat913f0ecd287e4e9c700360b69443dd55.png"></p><p>双击xxxxxxx.xcodepro文件将项目导入XCode，下面进行XCode的配置<br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e732e94015574a5bb0aa819bcd5740c2~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG816.png"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f729cd80ddc4327ac427960d4de0155~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG815.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dbc2d144d9624f3f93b3361d4d26d7c6~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG817.png"></p><p>到这一步我们应用基础配置、证书配置、信息配置基本完成</p><h2 id="应用打包和测试"><a href="#应用打包和测试" class="headerlink" title="应用打包和测试"></a>应用打包和测试</h2><p>测试我们分两种方法，模拟器测试和真机测试</p><p>真机测试方法一样，前提是用来测试的手机必须是在开发者中心注册过的，要不然安装包装不进去。把手机连接数据线插件来，XCode会自动检测注册过的手机，之后打开下拉框就能看到真机名称，之后选择再点击三角形即可</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fd750483aa1b4308993de96b91198c1b~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG818副本.png"></p><h2 id="应用提交"><a href="#应用提交" class="headerlink" title="应用提交"></a>应用提交</h2><p>应用经过测试过后就可以打包构建版本提交到App Store Connect中进行审核了</p><p>打开下拉框选中小锤子，在点击Product &gt; Archive就可以打包构建版本，打包成功后会出现有图界面，接下来先执行第一步验证构建版本，如果验证不通过的话就算提交上去也是审核不过的，验证通过了就可以执行第二步上传构建版本，一般来说会因为网络问题卡一段时间，不过问题不大，上传成功了一般过一会就能在App Store Connect中找到构建版本，之后填写相关资料就可以提交审核了</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b711587cfb6a4701905b1e52b9fb6c6b~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG820.png"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5bb3b5ae1fcb4c6d9d5fe8a163e6465b~tplv-k3u1fbpfcp-watermark.image" alt="WechatIMG822.png"></p><p>上传成功了但是又不出现构建版本，这时候请注意自己的邮箱，一般有问题的构建版本都不会出现在App Store Connect中</p><h2 id="问题列举"><a href="#问题列举" class="headerlink" title="问题列举"></a>问题列举</h2><p>列举几个我遇到的问题：</p><ul><li><strong>TMS-90809: Deprecated API Usage</strong>  - New apps that use UIWebView are no longer accepted. Instead, use WKWebView for improved security and reliability. Learn more (<a href="https://developer.apple.com/documentation/uikit/uiwebview">https://developer.apple.com/documentation/uikit/uiwebview</a>).</li></ul><p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;这个是原因上面已经提过，因为ios现在已经弃用UIWebView了，所以我们提交的构建版本全部都要是用WKWebview，要不然就算上传成功了 App Store Connect也会因为元数据出错为由拒绝</p><ul><li><strong>ITMS-90683: Missing Purpose String in Info.plist</strong>  - Your app’s code references one or more APIs that access sensitive user data. The app’s Info.plist file should contain a NSBluetoothAlwaysUsageDescription key with a user-facing purpose string explaining clearly and completely why your app needs the data. Starting Spring 2019, all apps submitted to the App Store that access user data are required to include a purpose string. If you’re using external libraries or SDKs, they may reference APIs that require a purpose string. While your app might not use these APIs, a purpose string is still required. You can contact the developer of the library or SDK and request they release a version of their code that doesn’t contain the APIs. Learn more (<a href="https://developer.apple.com/documentation/uikit/core_app/protecting_the_user_s_privacy">https://developer.apple.com/documentation/uikit/core_app&#x2F;protecting_the_user_s_privacy</a>).</li></ul><p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;出现这个错误是因为我应用用到了蓝牙功能（NSBluetoothAlwaysUsageDescription）但是并没有在info.plist上声明权限，所以我们回到info.plist上把这个权限声明一下就好</p><ul><li>Guideline 2.1 - Information Needed - We’re looking forward to continuing our review, but we need more information about your business model and your users to help you find the best distribution option for your app. Our preliminary review of your app suggests that your app may be a good fit for our Apple Business Manager program, which is designed specifically for business apps.</li></ul><p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;这个问题一般是审核的人对这个应用有一些疑问，他会提出几个问题需要你回答，这时候你只需要认真用双语来回答他的问题就行，记住文字一定要友好</p><ul><li>一个中规中矩的应用一般不会被拒绝，被拒绝的一般一般是应用功能包含暗示赌博、暴力、色情等内容，或者是集成的原生功能使用了不被apple认可的第三方库，这时候只有更换插件，因为我们应用的原生功能都是通过Cordova plugin集成进来的，例如：下面的错误是因为 我使用的一个插件里面用了一个不被认可的三方库，这种情况连前面版本验证都过不去</li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cc00b97e8ca743abae06ba6036cb8595~tplv-k3u1fbpfcp-watermark.image" alt="WeChatf127e9540ae61ac279bba41eabeeeb5d.png"></p>]]></content>
      
      
      <categories>
          
          <category> cordova </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cordova </tag>
            
            <tag> Vue </tag>
            
            <tag> Hybird App </tag>
            
            <tag> App 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cordova + Vue创建Hybird App</title>
      <link href="/posts/c01f837c/"/>
      <url>/posts/c01f837c/</url>
      
        <content type="html"><![CDATA[<h2 id="Cordova介绍"><a href="#Cordova介绍" class="headerlink" title="Cordova介绍"></a>Cordova介绍</h2><blockquote><p>Cordova是由Apache 基金会支持的使用 HTML5 + CSS3 + JS 来构建多平台 APP 程序的开发框架。其支持调用手机系统（Android、IOS、Windows phone）原生 API，它可以将你写的 Web 程序包裹进原生的 APP 壳中，也就是我们常说的 Hybrid APP （混合应用）。本文是一个前端开发者如何从 0 开始结合 Vue 来构建一个简单的 APP</p></blockquote><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><ul><li><p>nodeJs V10.3.0</p></li><li><p>VueCli V4.5.9</p></li><li><p>Cordova V10.0.0</p></li><li><p>JDK V1.8.0</p></li><li><p>Gradle V6.0.1</p></li><li><p>Android SDK API Level 29</p></li></ul><h2 id="Cordova安装"><a href="#Cordova安装" class="headerlink" title="Cordova安装"></a>Cordova安装</h2><p>我们使用npm来全局安装Cordova脚手架：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cordova</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载完成后输入cordova -v验证是否安装成功，出现版本号则安装成功</span></span><br><span class="line">cordova -v  </span><br></pre></td></tr></table></figure><h2 id="创建Cordova项目"><a href="#创建Cordova项目" class="headerlink" title="创建Cordova项目"></a>创建Cordova项目</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装好脚手架后，我们使用命令行创建Cordova项目</span></span><br><span class="line">cordova create cordovaVueDemo</span><br><span class="line"><span class="comment">// 创建成功后进入目录，接着我们添加平台</span></span><br><span class="line">cd cordovaVueDemo</span><br><span class="line">cordova platform add android </span><br></pre></td></tr></table></figure><p>执行完这几句命令后我们会看到这样的文件目录，这边我们需要注意的是platforms、plugins 和www文件夹，他们分别存放平台文件（例如Android、ios、browser）、Cordova插件文件和打包资源文件</p><p>这个时候我们往Cordova里面集成Vue项目，直接在Cordova运行命令创建Vue项目</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create app</span><br></pre></td></tr></table></figure><p>最终我们得到一个这样的目录，其中app文件夹就是vue项目，如果我们要把vue项目打包成apk，那么就需要把vue的静态资源文件build到Cordova项目的www文件夹中，经常使用Vue的小伙伴们都清楚要在vue.config.js上面配置打包文件输出目录</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">outputDir</span>: <span class="string">&quot;../www&quot;</span>,</span><br><span class="line">  <span class="attr">assetsDir</span>: <span class="string">&quot;static&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这时候就能将Vue项目打包到Cordova中的www文件夹</span></span><br><span class="line">npm run build </span><br></pre></td></tr></table></figure><h2 id="Cordova配置介绍"><a href="#Cordova配置介绍" class="headerlink" title="Cordova配置介绍"></a>Cordova配置介绍</h2><p>Cordova主要的配置文件是config.xml，其中app名称、标识、icon、启动图、各种权限等等都需要操作该文件</p><p>启动图的配置需要安装cordova-plugin-splashscreen插件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-splashscreen</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意，安装完插件后必须重装平台才会生效</span></span><br><span class="line">cordova platform remove android</span><br><span class="line">cordova platform add android </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&#x27;1.0&#x27;</span> encoding=<span class="string">&#x27;utf-8&#x27;</span>?&gt;</span><br><span class="line"><span class="comment">// id 应用程序的标识</span></span><br><span class="line"><span class="comment">// version 应用程序的版本 这个版本号对应项目的实际版本号</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">widget</span> <span class="attr">id</span>=<span class="string">&quot;xxx.xx.xxx&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.0.0&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/ns/widgets&quot;</span> <span class="attr">xmlns:cdv</span>=<span class="string">&quot;http://cordova.apache.org/ns/1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>App名称<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        App介绍</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">author</span> <span class="attr">email</span>=<span class="string">&quot;xxxxxxxxxx@sina.com&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://xxxxxx.com&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        作者介绍</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">author</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    // 应用程序起始页面，默认index.html</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">content</span> <span class="attr">src</span>=<span class="string">&quot;index.html&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    // 白名单 *代表任何ip都可访问 也可指定具体地址</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">access</span> <span class="attr">origin</span>=<span class="string">&quot;*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;http://*/*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;https://*/*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;tel:*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;sms:*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;mailto:*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;geo:*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    // 默认为false。当设置为true时，则不会拉伸图片来填充屏幕，会以图片原始比例显示图片。</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">&quot;SplashMaintainAspectRatio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span> </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">&quot;android&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;market:*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        // app icon</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">&quot;resources/icon/36.png&quot;</span> <span class="attr">density</span>=<span class="string">&quot;ldpi&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">&quot;resources/icon/48.png&quot;</span> <span class="attr">density</span>=<span class="string">&quot;mdpi&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">&quot;resources/icon/72.png&quot;</span> <span class="attr">density</span>=<span class="string">&quot;hdpi&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">&quot;resources/icon/96.png&quot;</span> <span class="attr">density</span>=<span class="string">&quot;xhdpi&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">&quot;resources/icon/144.png&quot;</span> <span class="attr">density</span>=<span class="string">&quot;xxhdpi&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">&quot;resources/icon/192.png&quot;</span> <span class="attr">density</span>=<span class="string">&quot;xxxhdpi&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        // app启动图</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;port-hdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/480_800.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;port-ldpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/200_320.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;port-mdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/320_480.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;port-xhdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/720_1280.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;port-xxhdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/960_1600.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;port-xxxhdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/1280_1920.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;land-hdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/800_480.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;land-ldpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/320_200.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;land-mdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/480_320.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;land-xhdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/1280_720.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;land-xxhdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/1600_960.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">&quot;land-xxxhdpi&quot;</span> <span class="attr">src</span>=<span class="string">&quot;resources/splash/1920_1280.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">platform</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">&quot;ios&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;itms:*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">allow-intent</span> <span class="attr">href</span>=<span class="string">&quot;itms-apps:*&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">platform</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">widget</span>&gt;</span></span> </span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/641950adcbe7454088efff102c1e0d8a~tplv-k3u1fbpfcp-zoom-1.image" alt="在这里插入图片描述"></p><h2 id="Cordova构建自签名android-APK"><a href="#Cordova构建自签名android-APK" class="headerlink" title="Cordova构建自签名android APK"></a>Cordova构建自签名android APK</h2><p>我们在根目录上新建一个叫keyStore的文件夹存放我们自己生成的签名包</p><p>在keyStore目录上执行命令生成签名包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -v -keyalg <span class="variable constant_">RSA</span> -keystore xxx.<span class="property">keystore</span> -alias xxx -validity <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">输入密钥库口令:  </span><br><span class="line">再次输入新口令: </span><br><span class="line">您的名字与姓氏是什么?</span><br><span class="line">  [<span class="title class_">Unknown</span>]:  </span><br><span class="line">您的组织单位名称是什么?</span><br><span class="line">  [<span class="title class_">Unknown</span>]:  </span><br><span class="line">您的组织名称是什么?</span><br><span class="line">  [<span class="title class_">Unknown</span>]:  </span><br><span class="line">您所在的城市或区域名称是什么?</span><br><span class="line">  [<span class="title class_">Unknown</span>]:  </span><br><span class="line">您所在的省/市/自治区名称是什么?</span><br><span class="line">  [<span class="title class_">Unknown</span>]:  </span><br><span class="line">该单位的双字母国家/地区代码是什么?</span><br><span class="line">  [<span class="title class_">Unknown</span>]:  </span><br><span class="line"><span class="variable constant_">CN</span>=<span class="title class_">Unknown</span>, <span class="variable constant_">OU</span>=<span class="title class_">Unknown</span>, O=<span class="title class_">Unknown</span>, L=<span class="title class_">Unknown</span>, <span class="variable constant_">ST</span>=<span class="title class_">Unknown</span>, C=<span class="title class_">Unknown</span>是否正确?</span><br><span class="line">  [否]:  Y</span><br><span class="line"></span><br><span class="line">正在为以下对象生成 <span class="number">2</span>,<span class="number">048</span> 位<span class="variable constant_">RSA</span>密钥对和自签名证书 (<span class="title class_">SHA256</span>withRSA) (有效期为 <span class="number">1</span>,<span class="number">000</span> 天):</span><br><span class="line">   <span class="variable constant_">CN</span>=<span class="title class_">Unknown</span>, <span class="variable constant_">OU</span>=<span class="title class_">Unknown</span>, O=<span class="title class_">Unknown</span>, L=<span class="title class_">Unknown</span>, <span class="variable constant_">ST</span>=<span class="title class_">Unknown</span>, C=<span class="title class_">Unknown</span></span><br><span class="line">输入 &lt;xxx&gt; 的密钥口令</span><br><span class="line">  (如果和密钥库口令相同, 按回车):  </span><br><span class="line">[正在存储xxx.<span class="property">keystore</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// PS：这里除了密钥库口令是必须要写的，其他都可以为空，一般这条命令我会执行两次，生成一个release跟一个debug的签名包</span></span><br><span class="line">keytool -genkey -v -keyalg <span class="variable constant_">RSA</span> -keystore debug.<span class="property">keystore</span> -alias debug -validity <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 接下来还需要在跟目录下新建一个build.json，该文件主要是配置签名包，在cordova官网有说到https://cordova.apache.org/docs/en/10.x/guide/platforms/android/index.html#using-buildjson</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;android&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;debug&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;keystore&quot;</span>: <span class="string">&quot;keystore/debug.keystore&quot;</span>, <span class="comment">// 签名包名</span></span><br><span class="line">      <span class="string">&quot;storePassword&quot;</span>: <span class="string">&quot;******&quot;</span>, <span class="comment">// 密钥库密码</span></span><br><span class="line">      <span class="string">&quot;alias&quot;</span>: <span class="string">&quot;debug&quot;</span>, <span class="comment">// 别名</span></span><br><span class="line">      <span class="string">&quot;password&quot;</span>: <span class="string">&quot;******&quot;</span>, <span class="comment">// 签名包密码</span></span><br><span class="line">      <span class="string">&quot;keystoreType&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;release&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;keystore&quot;</span>: <span class="string">&quot;keystore/xxx.keystore&quot;</span>,</span><br><span class="line">      <span class="string">&quot;storePassword&quot;</span>: <span class="string">&quot;******&quot;</span>,</span><br><span class="line">      <span class="string">&quot;alias&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;password&quot;</span>: <span class="string">&quot;******&quot;</span>,</span><br><span class="line">      <span class="string">&quot;keystoreType&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>做完上面一系列操作后，我们可以开始构建Android Apk了</p><h2 id="Cordova构建Android-Apk"><a href="#Cordova构建Android-Apk" class="headerlink" title="Cordova构建Android Apk"></a>Cordova构建Android Apk</h2><p>在构建Apk之前要先确认我们是否安装了Android平台，，最直接的方法就是查看platforms文件夹里面是否有android文件夹，有的话就说明已经安装，若没有就执行命令安装一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cordova platform add android <span class="comment">// 这样一般默认安装的都是最新版本</span></span><br><span class="line">cordova platform add android@xxx <span class="comment">// 若需要安装指定版本需在后面加上版本号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行构建命令</span></span><br><span class="line">cordova build android <span class="comment">// debug版本</span></span><br><span class="line">cordova build android -release <span class="comment">// 正式版/发布版</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当控制台显示如下图所示，能看到successful字样并给出apk路径时，代表构建成功 </span></span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/051c49a0252946b4ae392a8e555528b9~tplv-k3u1fbpfcp-zoom-1.image" alt="在这里插入图片描述"></p><h2 id="构建apk常见的一些问题以及解决方法"><a href="#构建apk常见的一些问题以及解决方法" class="headerlink" title="构建apk常见的一些问题以及解决方法"></a>构建apk常见的一些问题以及解决方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// gradle文件下载失败，报错如下，原因是因为网络问题，我的解决方法是使用科学上网</span></span><br><span class="line"><span class="attr">FAILURE</span>: <span class="title class_">Build</span> failed <span class="keyword">with</span> an exception.</span><br><span class="line"></span><br><span class="line">* <span class="title class_">What</span> went <span class="attr">wrong</span>:</span><br><span class="line">A problem occurred configuring root project <span class="string">&#x27;android&#x27;</span>.</span><br><span class="line">&gt; <span class="title class_">Could</span> not resolve all artifacts <span class="keyword">for</span> configuration <span class="string">&#x27;:classpath&#x27;</span>.</span><br><span class="line">   &gt; <span class="title class_">Could</span> not download proguard-gradle-<span class="number">6.0</span><span class="number">.3</span>.<span class="property">jar</span> (net.<span class="property">sf</span>.<span class="property">proguard</span>:proguard-<span class="attr">gradle</span>:<span class="number">6.0</span><span class="number">.3</span>)</span><br><span class="line">      &gt; <span class="title class_">Could</span> not get resource <span class="string">&#x27;https://jcenter.bintray.com/net/sf/proguard/proguard-gradle/6.0.3/proguard-gradle-6.0.3.jar&#x27;</span>.</span><br><span class="line">         &gt; <span class="title class_">Could</span> not <span class="variable constant_">GET</span> <span class="string">&#x27;https://jcenter.bintray.com/net/sf/proguard/proguard-gradle/6.0.3/proguard-gradle-6.0.3.jar&#x27;</span>.</span><br><span class="line">            &gt; java.<span class="property">net</span>.<span class="property">SocketException</span>: <span class="title class_">Connection</span> reset </span><br><span class="line">            </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 字面上意思，不能解压这个包，我尝试过直接把它解压完了再放回去，结果是可行的，但是有几次不行，所以我直接进入目录把这个包删了在重新执行打包命令        </span></span><br><span class="line"><span class="title class_">Unzipping</span> <span class="attr">C</span>:\<span class="title class_">Users</span>\<span class="variable constant_">HD</span>\.<span class="property">gradle</span>\wrapper\dists\gradle-<span class="number">2.13</span>-all\7hsc6vr6mi3i6i5m7q9hj4ci1q\gradle-<span class="number">2.13</span>-all.<span class="property">zip</span> to <span class="attr">C</span>:\<span class="title class_">Users</span>\<span class="variable constant_">HD</span>\.<span class="property">gradle</span>\wrapper\dists\gradle-<span class="number">2.13</span>-all\7hsc6vr6mi3i6i5m7q9hj4ci1q</span><br><span class="line"></span><br><span class="line"><span class="comment">// 还有一种就是一直卡在下载某个文件的地方download，最后超时导致失败，这种情况一般是</span></span><br><span class="line">downloading <span class="attr">https</span>:<span class="comment">//xxxxxxxxxxx.com</span></span><br><span class="line">xxxxxxxxx文件路径</span><br><span class="line"><span class="comment">// 他是有个文件链接和文件下载后存放的路径给你的，我一般的做法是直接去下载这个文件然后放到这个路径上，再次执行打包命令时他会检查这个文件的存在，存在的话他就不会再去下载了</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> cordova </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cordova </tag>
            
            <tag> Vue </tag>
            
            <tag> Hybird App </tag>
            
            <tag> App 开发 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
